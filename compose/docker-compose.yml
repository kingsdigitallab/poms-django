name: 'poms_openstack'

services:
  nginx-proxy:
    image: nginxproxy/nginx-proxy:1.4
    restart: unless-stopped
    ports:
      - "80:80"
    volumes:
      - /var/run/docker.sock:/tmp/docker.sock:ro

  nginx:
    build:
      context: ..
      dockerfile: ./compose/nginx/Dockerfile
    restart: unless-stopped
    expose:
      - "8001"
    volumes:
      - ../volumes/django/static:/usr/share/nginx/static:ro

    environment:
      VIRTUAL_HOST: "poms-os.kdl.kcl.ac.uk,poms.app.cch.kcl.ac.uk,localhost,127.0.0.1"
      VIRTUAL_PATH: "~^/(static/|redist/|robots.txt)"
      VIRTUAL_PROTO: http
      VIRTUAL_PORT: 8001


  db:
    image: library/mysql:5.7.35
    volumes:
      - ../volumes/local_mysql_data:/var/lib/mysql
    restart: unless-stopped
    expose:
      - "3306"
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
    #      healthcheck:
    #        test: mysql --user=root --password=$$MYSQL_ROOT_PASSWORD -e 'SHOW DATABASES;'
    #        timeout: 10s
    #        interval: 5s
    #        retries: 10
    env_file:
      - .env

  postgis:
    image: postgis/postgis:12-3.4
    volumes:
      - ../volumes/postgres_data:/var/lib/postgresql/data:Z
    restart: unless-stopped
    expose:
      - "5432"
    env_file:
      - .env

  elasticsearch:
    image: elasticsearch:7.10.1
    volumes:
      - ../volumes/elastic_data:/usr/share/elasticsearch/data
    env_file:
      - .env
    expose:
      - "9200"
      - "9300"
#    ports:
#      - "9200:9200"
    restart: unless-stopped

  geoserver:
    build:
      context: ../
      dockerfile: ./compose/geoserver/Dockerfile
    env_file:
      - .env
    ports:
      - "8080:8080"
    volumes:
      - ../volumes/geoserver/data:/opt/geoserver_data
    restart: unless-stopped
    environment:
      VIRTUAL_HOST: "poms-os.kdl.kcl.ac.uk,poms.app.cch.kcl.ac.uk,localhost,127.0.0.1"
      VIRTUAL_PATH: "/geoserver"
      VIRTUAL_PROTO: http
      VIRTUAL_PORT: 8080

  django:
    build:
      context: ../
      dockerfile: ./compose/django/Dockerfile
    command: /start
    container_name: poms_liv
    depends_on:
      - db
      - elasticsearch
    env_file:
      - .env
    ports:
      - "8000:8000"
    restart: unless-stopped
    volumes:
      - ../volumes/django/static:/app/static
    expose:
      - 8000
    environment:
      VIRTUAL_HOST: "poms-os.kdl.kcl.ac.uk,poms.app.cch.kcl.ac.uk,localhost,127.0.0.1"
      VIRTUAL_PATH: "/"
      VIRTUAL_PROTO: http
      VIRTUAL_PORT: 8000


