17 Apr 14:28:08 CONFIG [geoserver.logging] - Log4j 2 configuration set to DEFAULT_LOGGING.xml
17 Apr 14:29:51 CONFIG [geoserver.logging] - Log4j 2 configuration set to DEFAULT_LOGGING.xml
17 Apr 14:29:53 CONFIG [gwc.config] - Will look for 'geowebcache.xml' in directory '/opt/geoserver_data/gwc'.
17 Apr 14:29:53 CONFIG [gwc.config] - Create configuration file 'gwc/geowebcache.xml' from template jar:file:/opt/apache-tomcat-9.0.82/webapps/geoserver/WEB-INF/lib/gwc-core-1.24.1.jar!/geowebcache_empty.xml
17 Apr 14:29:53 WARN   [config.XMLConfiguration] - GWC configuration validation error: cvc-elt.1.a: Cannot find the declaration of element 'gwcConfiguration'.
17 Apr 14:29:53 WARN   [config.XMLConfiguration] - Will try to use configuration anyway. Please check the order of declared elements against the schema.
17 Apr 14:29:53 CONFIG [org.geoserver] - GeoServer configuration lock is enabled
17 Apr 14:29:54 CONFIG [org.geoserver] - Loading catalog /opt/geoserver_data
17 Apr 14:29:54 CONFIG [org.geoserver] - Loaded style 'simple_roads'
17 Apr 14:29:54 CONFIG [org.geoserver] - Loaded style 'pophatch'
17 Apr 14:29:54 CONFIG [org.geoserver] - Loaded style 'burg'
17 Apr 14:29:54 CONFIG [org.geoserver] - Loaded style 'giant_polygon'
17 Apr 14:29:54 CONFIG [org.geoserver] - Loaded style 'poi'
17 Apr 14:29:54 CONFIG [org.geoserver] - Loaded style 'population'
17 Apr 14:29:54 CONFIG [org.geoserver] - Loaded style 'polygon'
17 Apr 14:29:54 CONFIG [org.geoserver] - Loaded style 'raster'
17 Apr 14:29:54 CONFIG [org.geoserver] - Loaded style 'simple_streams'
17 Apr 14:29:54 CONFIG [org.geoserver] - Loaded style 'restricted'
17 Apr 14:29:54 CONFIG [org.geoserver] - Loaded style 'tiger_roads'
17 Apr 14:29:54 CONFIG [org.geoserver] - Loaded style 'grass'
17 Apr 14:29:54 CONFIG [org.geoserver] - Loaded style 'dem'
17 Apr 14:29:54 CONFIG [org.geoserver] - Loaded style 'point'
17 Apr 14:29:54 CONFIG [org.geoserver] - Loaded style 'poly_landmarks'
17 Apr 14:29:54 CONFIG [org.geoserver] - Loaded style 'generic'
17 Apr 14:29:54 CONFIG [org.geoserver] - Loaded style 'capitals'
17 Apr 14:29:54 CONFIG [org.geoserver] - Loaded style 'cite_lakes'
17 Apr 14:29:54 CONFIG [org.geoserver] - Loaded style 'line'
17 Apr 14:29:54 CONFIG [org.geoserver] - Loaded style 'green'
17 Apr 14:29:54 CONFIG [org.geoserver] - Loaded style 'rain'
17 Apr 14:29:54 CONFIG [org.geoserver] - Loaded default workspace 'ne'
17 Apr 14:29:54 CONFIG [org.geoserver] - Loaded workspace 'nurc'
17 Apr 14:29:54 CONFIG [org.geoserver] - Loaded workspace 'tiger'
17 Apr 14:29:54 CONFIG [org.geoserver] - Loaded workspace 'it.geosolutions'
17 Apr 14:29:54 CONFIG [org.geoserver] - Loaded workspace 'cite'
17 Apr 14:29:54 CONFIG [org.geoserver] - Loaded workspace 'sf'
17 Apr 14:29:54 CONFIG [org.geoserver] - Loaded workspace 'sde'
17 Apr 14:29:54 CONFIG [org.geoserver] - Loaded workspace 'ne'
17 Apr 14:29:54 CONFIG [org.geoserver] - Loaded style 'coastline'
17 Apr 14:29:54 CONFIG [org.geoserver] - Loaded style 'populated_places'
17 Apr 14:29:54 CONFIG [org.geoserver] - Loaded style 'boundary_lines'
17 Apr 14:29:54 CONFIG [org.geoserver] - Loaded style 'countries_mapcolor9'
17 Apr 14:29:54 CONFIG [org.geoserver] - Loaded style 'disputed'
17 Apr 14:29:54 CONFIG [org.geoserver] - Loaded style 'countries'
17 Apr 14:29:54 CONFIG [org.geoserver] - Loaded workspace 'topp'
17 Apr 14:29:54 CONFIG [org.geoserver] - Loaded coverage store 'mosaic', enabled
17 Apr 14:29:55 CONFIG [org.geoserver] - Loaded coverage 'mosaic', enabled
17 Apr 14:29:55 CONFIG [org.geoserver] - Loaded layer 'mosaic'
17 Apr 14:29:56 CONFIG [org.geoserver] - Loaded coverage store 'arcGridSample', enabled
17 Apr 14:29:56 CONFIG [org.geoserver] - Loaded coverage 'Arc_Sample', enabled
17 Apr 14:29:56 CONFIG [org.geoserver] - Loaded layer 'Arc_Sample'
17 Apr 14:29:56 CONFIG [org.geoserver] - Loaded coverage store 'img_sample2', enabled
17 Apr 14:29:56 CONFIG [org.geoserver] - Loaded coverage 'Pk50095', enabled
17 Apr 14:29:56 CONFIG [org.geoserver] - Loaded layer 'Pk50095'
17 Apr 14:29:56 CONFIG [org.geoserver] - Loaded coverage store 'worldImageSample', enabled
17 Apr 14:29:56 CONFIG [org.geoserver] - Loaded coverage 'Img_Sample', enabled
17 Apr 14:29:56 CONFIG [org.geoserver] - Loaded layer 'Img_Sample'
17 Apr 14:29:56 CONFIG [org.geoserver] - Loaded data store 'nyc', enabled
17 Apr 14:29:56 CONFIG [org.geoserver] - Loaded feature type 'poly_landmarks', enabled
17 Apr 14:29:56 CONFIG [org.geoserver] - Loaded layer 'poly_landmarks'
17 Apr 14:29:56 CONFIG [org.geoserver] - Loaded feature type 'poi', enabled
17 Apr 14:29:56 CONFIG [org.geoserver] - Loaded layer 'poi'
17 Apr 14:29:56 CONFIG [org.geoserver] - Loaded feature type 'giant_polygon', enabled
17 Apr 14:29:56 CONFIG [org.geoserver] - Loaded layer 'giant_polygon'
17 Apr 14:29:56 CONFIG [org.geoserver] - Loaded feature type 'tiger_roads', enabled
17 Apr 14:29:56 CONFIG [org.geoserver] - Loaded layer 'tiger_roads'
17 Apr 14:29:56 CONFIG [org.geoserver] - Loaded data store 'sf', enabled
17 Apr 14:29:56 CONFIG [org.geoserver] - Loaded feature type 'restricted', enabled
17 Apr 14:29:56 CONFIG [org.geoserver] - Loaded layer 'restricted'
17 Apr 14:29:56 CONFIG [org.geoserver] - Loaded feature type 'archsites', enabled
17 Apr 14:29:56 CONFIG [org.geoserver] - Loaded layer 'archsites'
17 Apr 14:29:56 CONFIG [org.geoserver] - Loaded feature type 'streams', enabled
17 Apr 14:29:56 CONFIG [org.geoserver] - Loaded layer 'streams'
17 Apr 14:29:56 CONFIG [org.geoserver] - Loaded feature type 'bugsites', enabled
17 Apr 14:29:56 CONFIG [org.geoserver] - Loaded layer 'bugsites'
17 Apr 14:29:56 CONFIG [org.geoserver] - Loaded feature type 'roads', enabled
17 Apr 14:29:56 CONFIG [org.geoserver] - Loaded layer 'roads'
17 Apr 14:29:56 CONFIG [org.geoserver] - Loaded coverage store 'sfdem', enabled
17 Apr 14:29:56 CONFIG [org.geoserver] - Loaded coverage 'sfdem', enabled
17 Apr 14:29:56 CONFIG [org.geoserver] - Loaded layer 'sfdem'
17 Apr 14:29:56 CONFIG [org.geoserver] - Loaded data store 'states_shapefile', enabled
17 Apr 14:29:56 CONFIG [org.geoserver] - Loaded feature type 'states', enabled
17 Apr 14:29:56 CONFIG [org.geoserver] - Loaded layer 'states'
17 Apr 14:29:56 CONFIG [org.geoserver] - Loaded data store 'taz_shapes', enabled
17 Apr 14:29:56 CONFIG [org.geoserver] - Loaded feature type 'tasmania_water_bodies', enabled
17 Apr 14:29:56 CONFIG [org.geoserver] - Loaded layer 'tasmania_water_bodies'
17 Apr 14:29:56 CONFIG [org.geoserver] - Loaded feature type 'tasmania_state_boundaries', enabled
17 Apr 14:29:56 CONFIG [org.geoserver] - Loaded layer 'tasmania_state_boundaries'
17 Apr 14:29:56 CONFIG [org.geoserver] - Loaded feature type 'tasmania_roads', enabled
17 Apr 14:29:56 CONFIG [org.geoserver] - Loaded layer 'tasmania_roads'
17 Apr 14:29:56 CONFIG [org.geoserver] - Loaded feature type 'tasmania_cities', enabled
17 Apr 14:29:56 CONFIG [org.geoserver] - Loaded layer 'tasmania_cities'
17 Apr 14:29:56 CONFIG [org.geoserver] - Loaded data store 'NaturalEarth', enabled
17 Apr 14:29:56 CONFIG [org.geoserver] - Loaded feature type 'boundary_lines', enabled
17 Apr 14:29:56 CONFIG [org.geoserver] - Loaded layer 'boundary_lines'
17 Apr 14:29:56 CONFIG [org.geoserver] - Loaded feature type 'disputed_areas', enabled
17 Apr 14:29:56 CONFIG [org.geoserver] - Loaded layer 'disputed_areas'
17 Apr 14:29:56 CONFIG [org.geoserver] - Loaded feature type 'populated_places', enabled
17 Apr 14:29:56 CONFIG [org.geoserver] - Loaded layer 'populated_places'
17 Apr 14:29:56 CONFIG [org.geoserver] - Loaded feature type 'coastlines', enabled
17 Apr 14:29:56 CONFIG [org.geoserver] - Loaded layer 'coastlines'
17 Apr 14:29:56 CONFIG [org.geoserver] - Loaded feature type 'countries', enabled
17 Apr 14:29:56 CONFIG [org.geoserver] - Loaded layer 'countries'
17 Apr 14:29:56 CONFIG [org.geoserver] - Loaded layer group 'world'
17 Apr 14:29:56 CONFIG [org.geoserver] - Loaded layer group 'tiger-ny'
17 Apr 14:29:56 CONFIG [org.geoserver] - Loaded layer group 'tasmania'
17 Apr 14:29:56 CONFIG [org.geoserver] - Loaded layer group 'spearfish'
17 Apr 14:29:56 CONFIG [org.geoserver] - Read catalog in 2.948 s
17 Apr 14:29:57 CONFIG [config.XMLConfiguration] - Initializing GridSets from gwc
17 Apr 14:29:57 CONFIG [config.XMLConfiguration] - Initializing layers from gwc
17 Apr 14:29:57 CONFIG [gwc.layer] - Initializing GWC configuration based on GeoServer's Catalog
17 Apr 14:29:57 CONFIG [gwc.layer] - GeoServer TileLayer store base directory is: gwc-layers
17 Apr 14:29:57 CONFIG [gwc.layer] - Loading tile layers from gwc-layers
17 Apr 14:29:57 CONFIG [gwc.layer] - Loaded 0 tile layers in 4.223 ms
17 Apr 14:29:57 CONFIG [storage.BlobStoreAggregator] - BlobStoreConfiguration gwc contained no blob store infos.
17 Apr 14:29:57 CONFIG [storage.DefaultStorageFinder] - Found system environment variableGEOSERVER_DATA_DIR set to /opt/geoserver_data/, using it as the default prefix.
17 Apr 14:29:57 CONFIG [geowebcache.GeoWebCacheDispatcher] - Invoked setServletPrefix(gwc)
17 Apr 14:29:57 CONFIG [wms.WMSService] - Will NOT recombine tiles for non-tiling clients.
17 Apr 14:29:57 CONFIG [wms.WMSService] - Will proxy requests to backend that are not getmap or getcapabilities.
17 Apr 14:29:57 CONFIG [org.geoserver] - Loaded service 'WMTSInfoImpl--3ef31051:182c1e8b194:-8000', enabled
17 Apr 14:29:57 CONFIG [org.geoserver] - Loaded service 'wcs', enabled
17 Apr 14:29:57 CONFIG [org.geoserver] - Loaded service 'wfs', enabled
17 Apr 14:29:57 CONFIG [org.geoserver] - Loaded service 'wms', enabled
17 Apr 14:29:57 CONFIG [org.geoserver] - Loaded service 'WMTSInfoImpl-1c443fee:182c0f3f209:-7f98', enabled
17 Apr 14:29:57 CONFIG [org.geoserver] - Loaded service 'WCSInfoImpl-1c443fee:182c0f3f209:-7f96', enabled
17 Apr 14:29:57 CONFIG [org.geoserver] - Loaded service 'WFSInfoImpl-1c443fee:182c0f3f209:-7f97', enabled
17 Apr 14:29:57 CONFIG [org.geoserver] - Loaded service 'WMSInfoImpl-1c443fee:182c0f3f209:-7f99', enabled
17 Apr 14:29:57 CONFIG [gwc.config] - Initializing GeoServer specific GWC configuration from gwc-gs.xml
17 Apr 14:29:59 CONFIG [gwc.config] - Will look for 'geowebcache-diskquota.xml' in directory '/opt/geoserver_data/gwc'.
17 Apr 14:29:59 CONFIG [gwc.config] - Will look for 'geowebcache-diskquota-jdbc.xml' in directory '/opt/geoserver_data/gwc'.
17 Apr 14:29:59 CONFIG [diskquota.ConfigLoader] - DiskQuota configuration is not readable: gwc/geowebcache-diskquota.xml
17 Apr 14:29:59 CONFIG [diskquota.ConfigLoader] - DiskQuota configuration is not readable: gwc/geowebcache-diskquota.xml
17 Apr 14:30:02 CONFIG [platform.resource] - Notifying ENTRY_CREATE change on /opt/geoserver_data/gwc-layers. Created: 28, removed: 0, modified: 0
17 Apr 14:30:03 CONFIG [diskquota.ConfigLoader] - DiskQuota configuration is not readable: gwc/geowebcache-diskquota.xml
17 Apr 14:30:03 CONFIG [diskquota.DiskQuotaMonitor] - Setting up disk quota periodic enforcement task
17 Apr 14:30:03 CONFIG [diskquota.DiskQuotaMonitor] - 0 layers configured with their own quotas. 
17 Apr 14:30:03 CONFIG [diskquota.DiskQuotaMonitor] - 28 layers attached to global quota 500.0 MB
17 Apr 14:30:03 CONFIG [diskquota.DiskQuotaMonitor] - Disk quota periodic enforcement task set up every 10 SECONDS
17 Apr 14:30:03 CONFIG [geoserver.security] - AuthenticationCache Initialized with 1000 Max Entries, 300 seconds idle time, 600 seconds time to live and 3 concurrency level
17 Apr 14:30:03 CONFIG [geoserver.security] - AuthenticationCache Eviction Task created to run every 600 seconds
17 Apr 14:30:04 CONFIG [geoserver.security] - Start reloading user/groups for service named default
17 Apr 14:30:04 CONFIG [geoserver.security] - Reloading user/groups successful for service named default
17 Apr 14:43:25 CONFIG [gwc.layer] - GeoServer TileLayer store base directory is: gwc-layers
17 Apr 14:43:25 CONFIG [gwc.layer] - Loading tile layers from gwc-layers
17 Apr 14:43:25 CONFIG [gwc.layer] - Loaded 28 tile layers in 41.42 ms
17 Apr 14:43:25 WARN   [support.DisposableBeanAdapter] - Custom destroy method 'destroy' on bean with name 'gwcMemoryBlobStore' threw an exception: java.util.concurrent.RejectedExecutionException: Task java.util.concurrent.FutureTask@6d064c7[Not completed, task = org.geowebcache.storage.blobstore.memory.MemoryBlobStore$BlobStoreTask@3f53354a] rejected from java.util.concurrent.ThreadPoolExecutor@c8cbb5c[Terminated, pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 1]
17 Apr 14:43:25 INFO   [geoserver.logging] - Beginning GeoServer cleanup sequence
17 Apr 14:43:52 CONFIG [geoserver.logging] - Log4j 2 configuration set to DEFAULT_LOGGING.xml
17 Apr 14:43:55 CONFIG [gwc.config] - Will look for 'geowebcache.xml' in directory '/opt/geoserver_data/gwc'.
17 Apr 14:43:55 WARN   [config.XMLConfiguration] - GWC configuration validation error: cvc-elt.1.a: Cannot find the declaration of element 'gwcConfiguration'.
17 Apr 14:43:55 WARN   [config.XMLConfiguration] - Will try to use configuration anyway. Please check the order of declared elements against the schema.
17 Apr 14:43:55 CONFIG [org.geoserver] - GeoServer configuration lock is enabled
17 Apr 14:43:55 CONFIG [org.geoserver] - Loading catalog /opt/geoserver_data
17 Apr 14:43:56 CONFIG [org.geoserver] - Loaded style 'simple_roads'
17 Apr 14:43:56 CONFIG [org.geoserver] - Loaded style 'pophatch'
17 Apr 14:43:56 CONFIG [org.geoserver] - Loaded style 'giant_polygon'
17 Apr 14:43:56 CONFIG [org.geoserver] - Loaded style 'burg'
17 Apr 14:43:56 CONFIG [org.geoserver] - Loaded style 'poi'
17 Apr 14:43:56 CONFIG [org.geoserver] - Loaded style 'polygon'
17 Apr 14:43:56 CONFIG [org.geoserver] - Loaded style 'population'
17 Apr 14:43:56 CONFIG [org.geoserver] - Loaded style 'raster'
17 Apr 14:43:56 CONFIG [org.geoserver] - Loaded style 'simple_streams'
17 Apr 14:43:56 CONFIG [org.geoserver] - Loaded style 'restricted'
17 Apr 14:43:56 CONFIG [org.geoserver] - Loaded style 'grass'
17 Apr 14:43:56 CONFIG [org.geoserver] - Loaded style 'tiger_roads'
17 Apr 14:43:56 CONFIG [org.geoserver] - Loaded style 'point'
17 Apr 14:43:56 CONFIG [org.geoserver] - Loaded style 'dem'
17 Apr 14:43:56 CONFIG [org.geoserver] - Loaded style 'poly_landmarks'
17 Apr 14:43:56 CONFIG [org.geoserver] - Loaded style 'green'
17 Apr 14:43:56 CONFIG [org.geoserver] - Loaded style 'generic'
17 Apr 14:43:56 CONFIG [org.geoserver] - Loaded style 'capitals'
17 Apr 14:43:56 CONFIG [org.geoserver] - Loaded style 'line'
17 Apr 14:43:56 CONFIG [org.geoserver] - Loaded style 'rain'
17 Apr 14:43:56 CONFIG [org.geoserver] - Loaded style 'cite_lakes'
17 Apr 14:43:56 CONFIG [org.geoserver] - Loaded default workspace 'ne'
17 Apr 14:43:56 CONFIG [org.geoserver] - Loaded workspace 'nurc'
17 Apr 14:43:56 CONFIG [org.geoserver] - Loaded workspace 'tiger'
17 Apr 14:43:56 CONFIG [org.geoserver] - Loaded workspace 'it.geosolutions'
17 Apr 14:43:56 CONFIG [org.geoserver] - Loaded workspace 'cite'
17 Apr 14:43:56 CONFIG [org.geoserver] - Loaded workspace 'ne'
17 Apr 14:43:56 CONFIG [org.geoserver] - Loaded style 'coastline'
17 Apr 14:43:56 CONFIG [org.geoserver] - Loaded style 'populated_places'
17 Apr 14:43:56 CONFIG [org.geoserver] - Loaded style 'boundary_lines'
17 Apr 14:43:56 CONFIG [org.geoserver] - Loaded style 'disputed'
17 Apr 14:43:56 CONFIG [org.geoserver] - Loaded style 'countries_mapcolor9'
17 Apr 14:43:56 CONFIG [org.geoserver] - Loaded style 'countries'
17 Apr 14:43:56 CONFIG [org.geoserver] - Loaded workspace 'sf'
17 Apr 14:43:56 CONFIG [org.geoserver] - Loaded workspace 'topp'
17 Apr 14:43:56 CONFIG [org.geoserver] - Loaded workspace 'sde'
17 Apr 14:43:56 CONFIG [org.geoserver] - Loaded coverage store 'img_sample2', enabled
17 Apr 14:43:59 CONFIG [org.geoserver] - Loaded coverage 'Pk50095', enabled
17 Apr 14:43:59 CONFIG [org.geoserver] - Loaded layer 'Pk50095'
17 Apr 14:43:59 CONFIG [org.geoserver] - Loaded coverage store 'arcGridSample', enabled
17 Apr 14:43:59 CONFIG [org.geoserver] - Loaded coverage 'Arc_Sample', enabled
17 Apr 14:43:59 CONFIG [org.geoserver] - Loaded layer 'Arc_Sample'
17 Apr 14:43:59 CONFIG [org.geoserver] - Loaded coverage store 'mosaic', enabled
17 Apr 14:43:59 CONFIG [org.geoserver] - Loaded coverage 'mosaic', enabled
17 Apr 14:43:59 CONFIG [org.geoserver] - Loaded layer 'mosaic'
17 Apr 14:43:59 CONFIG [org.geoserver] - Loaded coverage store 'worldImageSample', enabled
17 Apr 14:43:59 CONFIG [org.geoserver] - Loaded coverage 'Img_Sample', enabled
17 Apr 14:43:59 CONFIG [org.geoserver] - Loaded layer 'Img_Sample'
17 Apr 14:44:00 CONFIG [org.geoserver] - Loaded data store 'nyc', enabled
17 Apr 14:44:00 CONFIG [org.geoserver] - Loaded feature type 'poly_landmarks', enabled
17 Apr 14:44:00 CONFIG [org.geoserver] - Loaded layer 'poly_landmarks'
17 Apr 14:44:00 CONFIG [org.geoserver] - Loaded feature type 'poi', enabled
17 Apr 14:44:00 CONFIG [org.geoserver] - Loaded layer 'poi'
17 Apr 14:44:00 CONFIG [org.geoserver] - Loaded feature type 'giant_polygon', enabled
17 Apr 14:44:00 CONFIG [org.geoserver] - Loaded layer 'giant_polygon'
17 Apr 14:44:00 CONFIG [org.geoserver] - Loaded feature type 'tiger_roads', enabled
17 Apr 14:44:00 CONFIG [org.geoserver] - Loaded layer 'tiger_roads'
17 Apr 14:44:00 CONFIG [org.geoserver] - Loaded data store 'sf', enabled
17 Apr 14:44:00 CONFIG [org.geoserver] - Loaded feature type 'restricted', enabled
17 Apr 14:44:00 CONFIG [org.geoserver] - Loaded layer 'restricted'
17 Apr 14:44:00 CONFIG [org.geoserver] - Loaded feature type 'streams', enabled
17 Apr 14:44:00 CONFIG [org.geoserver] - Loaded layer 'streams'
17 Apr 14:44:00 CONFIG [org.geoserver] - Loaded feature type 'bugsites', enabled
17 Apr 14:44:00 CONFIG [org.geoserver] - Loaded layer 'bugsites'
17 Apr 14:44:00 CONFIG [org.geoserver] - Loaded feature type 'roads', enabled
17 Apr 14:44:00 CONFIG [org.geoserver] - Loaded layer 'roads'
17 Apr 14:44:00 CONFIG [org.geoserver] - Loaded feature type 'archsites', enabled
17 Apr 14:44:00 CONFIG [org.geoserver] - Loaded layer 'archsites'
17 Apr 14:44:00 CONFIG [org.geoserver] - Loaded coverage store 'sfdem', enabled
17 Apr 14:44:00 CONFIG [org.geoserver] - Loaded coverage 'sfdem', enabled
17 Apr 14:44:00 CONFIG [org.geoserver] - Loaded layer 'sfdem'
17 Apr 14:44:00 CONFIG [org.geoserver] - Loaded data store 'states_shapefile', enabled
17 Apr 14:44:00 CONFIG [org.geoserver] - Loaded feature type 'states', enabled
17 Apr 14:44:00 CONFIG [org.geoserver] - Loaded layer 'states'
17 Apr 14:44:00 CONFIG [org.geoserver] - Loaded data store 'taz_shapes', enabled
17 Apr 14:44:00 CONFIG [org.geoserver] - Loaded feature type 'tasmania_state_boundaries', enabled
17 Apr 14:44:00 CONFIG [org.geoserver] - Loaded layer 'tasmania_state_boundaries'
17 Apr 14:44:00 CONFIG [org.geoserver] - Loaded feature type 'tasmania_cities', enabled
17 Apr 14:44:00 CONFIG [org.geoserver] - Loaded layer 'tasmania_cities'
17 Apr 14:44:00 CONFIG [org.geoserver] - Loaded feature type 'tasmania_water_bodies', enabled
17 Apr 14:44:00 CONFIG [org.geoserver] - Loaded layer 'tasmania_water_bodies'
17 Apr 14:44:00 CONFIG [org.geoserver] - Loaded feature type 'tasmania_roads', enabled
17 Apr 14:44:00 CONFIG [org.geoserver] - Loaded layer 'tasmania_roads'
17 Apr 14:44:01 CONFIG [org.geoserver] - Loaded data store 'NaturalEarth', enabled
17 Apr 14:44:01 CONFIG [org.geoserver] - Loaded feature type 'populated_places', enabled
17 Apr 14:44:01 CONFIG [org.geoserver] - Loaded layer 'populated_places'
17 Apr 14:44:01 CONFIG [org.geoserver] - Loaded feature type 'boundary_lines', enabled
17 Apr 14:44:01 CONFIG [org.geoserver] - Loaded layer 'boundary_lines'
17 Apr 14:44:01 CONFIG [org.geoserver] - Loaded feature type 'disputed_areas', enabled
17 Apr 14:44:01 CONFIG [org.geoserver] - Loaded layer 'disputed_areas'
17 Apr 14:44:01 CONFIG [org.geoserver] - Loaded feature type 'coastlines', enabled
17 Apr 14:44:01 CONFIG [org.geoserver] - Loaded layer 'coastlines'
17 Apr 14:44:01 CONFIG [org.geoserver] - Loaded feature type 'countries', enabled
17 Apr 14:44:01 CONFIG [org.geoserver] - Loaded layer 'countries'
17 Apr 14:44:01 CONFIG [org.geoserver] - Loaded layer group 'world'
17 Apr 14:44:01 CONFIG [org.geoserver] - Loaded layer group 'tiger-ny'
17 Apr 14:44:01 CONFIG [org.geoserver] - Loaded layer group 'spearfish'
17 Apr 14:44:01 CONFIG [org.geoserver] - Loaded layer group 'tasmania'
17 Apr 14:44:01 CONFIG [org.geoserver] - Read catalog in 5.398 s
17 Apr 14:44:01 CONFIG [config.XMLConfiguration] - Initializing GridSets from gwc
17 Apr 14:44:01 CONFIG [config.XMLConfiguration] - Initializing layers from gwc
17 Apr 14:44:01 CONFIG [gwc.layer] - Initializing GWC configuration based on GeoServer's Catalog
17 Apr 14:44:01 CONFIG [gwc.layer] - GeoServer TileLayer store base directory is: gwc-layers
17 Apr 14:44:01 CONFIG [gwc.layer] - Loading tile layers from gwc-layers
17 Apr 14:44:02 CONFIG [gwc.layer] - Loaded 28 tile layers in 198.0 ms
17 Apr 14:44:02 CONFIG [storage.BlobStoreAggregator] - BlobStoreConfiguration gwc contained no blob store infos.
17 Apr 14:44:02 CONFIG [storage.DefaultStorageFinder] - Found system environment variableGEOSERVER_DATA_DIR set to /opt/geoserver_data/, using it as the default prefix.
17 Apr 14:44:02 CONFIG [geowebcache.GeoWebCacheDispatcher] - Invoked setServletPrefix(gwc)
17 Apr 14:44:03 CONFIG [wms.WMSService] - Will NOT recombine tiles for non-tiling clients.
17 Apr 14:44:03 CONFIG [wms.WMSService] - Will proxy requests to backend that are not getmap or getcapabilities.
17 Apr 14:44:03 CONFIG [org.geoserver] - Loaded service 'WMTSInfoImpl--3ef31051:182c1e8b194:-8000', enabled
17 Apr 14:44:03 CONFIG [org.geoserver] - Loaded service 'wcs', enabled
17 Apr 14:44:03 CONFIG [org.geoserver] - Loaded service 'wfs', enabled
17 Apr 14:44:03 CONFIG [org.geoserver] - Loaded service 'wms', enabled
17 Apr 14:44:03 CONFIG [org.geoserver] - Loaded service 'WMTSInfoImpl-1c443fee:182c0f3f209:-7f98', enabled
17 Apr 14:44:03 CONFIG [org.geoserver] - Loaded service 'WCSInfoImpl-1c443fee:182c0f3f209:-7f96', enabled
17 Apr 14:44:03 CONFIG [org.geoserver] - Loaded service 'WFSInfoImpl-1c443fee:182c0f3f209:-7f97', enabled
17 Apr 14:44:03 CONFIG [org.geoserver] - Loaded service 'WMSInfoImpl-1c443fee:182c0f3f209:-7f99', enabled
17 Apr 14:44:03 CONFIG [gwc.config] - Initializing GeoServer specific GWC configuration from gwc-gs.xml
17 Apr 14:44:03 CONFIG [gwc.config] - Will look for 'geowebcache-diskquota.xml' in directory '/opt/geoserver_data/gwc'.
17 Apr 14:44:03 CONFIG [gwc.config] - Will look for 'geowebcache-diskquota-jdbc.xml' in directory '/opt/geoserver_data/gwc'.
17 Apr 14:44:03 CONFIG [diskquota.ConfigLoader] - DiskQuota configuration is not readable: gwc/geowebcache-diskquota.xml
17 Apr 14:44:03 CONFIG [diskquota.ConfigLoader] - DiskQuota configuration is not readable: gwc/geowebcache-diskquota.xml
17 Apr 14:44:12 CONFIG [diskquota.ConfigLoader] - DiskQuota configuration is not readable: gwc/geowebcache-diskquota.xml
17 Apr 14:44:12 CONFIG [diskquota.DiskQuotaMonitor] - Setting up disk quota periodic enforcement task
17 Apr 14:44:12 CONFIG [diskquota.DiskQuotaMonitor] - 0 layers configured with their own quotas. 
17 Apr 14:44:12 CONFIG [diskquota.DiskQuotaMonitor] - 28 layers attached to global quota 500.0 MB
17 Apr 14:44:12 CONFIG [diskquota.DiskQuotaMonitor] - Disk quota periodic enforcement task set up every 10 SECONDS
17 Apr 14:44:12 CONFIG [geoserver.security] - Start reloading user/groups for service named default
17 Apr 14:44:12 CONFIG [geoserver.security] - Reloading user/groups successful for service named default
17 Apr 14:44:13 CONFIG [geoserver.security] - AuthenticationCache Initialized with 1000 Max Entries, 300 seconds idle time, 600 seconds time to live and 3 concurrency level
17 Apr 14:44:13 CONFIG [geoserver.security] - AuthenticationCache Eviction Task created to run every 600 seconds
17 Apr 14:57:02 CONFIG [gwc.layer] - GeoServer TileLayer store base directory is: gwc-layers
17 Apr 14:57:02 CONFIG [gwc.layer] - Loading tile layers from gwc-layers
17 Apr 14:57:02 CONFIG [gwc.layer] - Loaded 28 tile layers in 17.75 ms
17 Apr 14:57:02 WARN   [support.DisposableBeanAdapter] - Custom destroy method 'destroy' on bean with name 'gwcMemoryBlobStore' threw an exception: java.util.concurrent.RejectedExecutionException: Task java.util.concurrent.FutureTask@48bebb65[Not completed, task = org.geowebcache.storage.blobstore.memory.MemoryBlobStore$BlobStoreTask@5a53584b] rejected from java.util.concurrent.ThreadPoolExecutor@5a81ea8b[Terminated, pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 1]
17 Apr 14:57:02 INFO   [geoserver.logging] - Beginning GeoServer cleanup sequence
17 Apr 14:57:12 CONFIG [geoserver.logging] - Log4j 2 configuration set to DEFAULT_LOGGING.xml
17 Apr 14:57:14 CONFIG [gwc.config] - Will look for 'geowebcache.xml' in directory '/opt/geoserver_data/gwc'.
17 Apr 14:57:15 WARN   [config.XMLConfiguration] - GWC configuration validation error: cvc-elt.1.a: Cannot find the declaration of element 'gwcConfiguration'.
17 Apr 14:57:15 WARN   [config.XMLConfiguration] - Will try to use configuration anyway. Please check the order of declared elements against the schema.
17 Apr 14:57:15 CONFIG [org.geoserver] - GeoServer configuration lock is enabled
17 Apr 14:57:15 CONFIG [org.geoserver] - Loading catalog /opt/geoserver_data
17 Apr 14:57:15 CONFIG [org.geoserver] - Loaded style 'simple_roads'
17 Apr 14:57:15 CONFIG [org.geoserver] - Loaded style 'pophatch'
17 Apr 14:57:15 CONFIG [org.geoserver] - Loaded style 'giant_polygon'
17 Apr 14:57:15 CONFIG [org.geoserver] - Loaded style 'burg'
17 Apr 14:57:15 CONFIG [org.geoserver] - Loaded style 'poi'
17 Apr 14:57:15 CONFIG [org.geoserver] - Loaded style 'polygon'
17 Apr 14:57:15 CONFIG [org.geoserver] - Loaded style 'population'
17 Apr 14:57:15 CONFIG [org.geoserver] - Loaded style 'simple_streams'
17 Apr 14:57:15 CONFIG [org.geoserver] - Loaded style 'raster'
17 Apr 14:57:15 CONFIG [org.geoserver] - Loaded style 'tiger_roads'
17 Apr 14:57:15 CONFIG [org.geoserver] - Loaded style 'restricted'
17 Apr 14:57:15 CONFIG [org.geoserver] - Loaded style 'point'
17 Apr 14:57:15 CONFIG [org.geoserver] - Loaded style 'dem'
17 Apr 14:57:15 CONFIG [org.geoserver] - Loaded style 'green'
17 Apr 14:57:15 CONFIG [org.geoserver] - Loaded style 'grass'
17 Apr 14:57:15 CONFIG [org.geoserver] - Loaded style 'poly_landmarks'
17 Apr 14:57:15 CONFIG [org.geoserver] - Loaded style 'capitals'
17 Apr 14:57:15 CONFIG [org.geoserver] - Loaded style 'line'
17 Apr 14:57:15 CONFIG [org.geoserver] - Loaded style 'generic'
17 Apr 14:57:15 CONFIG [org.geoserver] - Loaded style 'cite_lakes'
17 Apr 14:57:15 CONFIG [org.geoserver] - Loaded style 'rain'
17 Apr 14:57:15 CONFIG [org.geoserver] - Loaded default workspace 'ne'
17 Apr 14:57:15 CONFIG [org.geoserver] - Loaded workspace 'nurc'
17 Apr 14:57:15 CONFIG [org.geoserver] - Loaded workspace 'it.geosolutions'
17 Apr 14:57:15 CONFIG [org.geoserver] - Loaded workspace 'tiger'
17 Apr 14:57:15 CONFIG [org.geoserver] - Loaded workspace 'cite'
17 Apr 14:57:15 CONFIG [org.geoserver] - Loaded workspace 'PDE_Postgres'
17 Apr 14:57:15 CONFIG [org.geoserver] - Loaded workspace 'PoMS'
17 Apr 14:57:15 CONFIG [org.geoserver] - Loaded workspace 'sde'
17 Apr 14:57:15 CONFIG [org.geoserver] - Loaded workspace 'sf'
17 Apr 14:57:15 CONFIG [org.geoserver] - Loaded workspace 'topp'
17 Apr 14:57:15 CONFIG [org.geoserver] - Loaded workspace 'ne'
17 Apr 14:57:15 CONFIG [org.geoserver] - Loaded style 'coastline'
17 Apr 14:57:15 CONFIG [org.geoserver] - Loaded style 'populated_places'
17 Apr 14:57:15 CONFIG [org.geoserver] - Loaded style 'boundary_lines'
17 Apr 14:57:15 CONFIG [org.geoserver] - Loaded style 'countries_mapcolor9'
17 Apr 14:57:15 CONFIG [org.geoserver] - Loaded style 'disputed'
17 Apr 14:57:15 CONFIG [org.geoserver] - Loaded style 'countries'
17 Apr 14:57:16 CONFIG [org.geoserver] - Loaded coverage store 'mosaic', enabled
17 Apr 14:57:17 CONFIG [org.geoserver] - Loaded coverage 'mosaic', enabled
17 Apr 14:57:17 CONFIG [org.geoserver] - Loaded layer 'mosaic'
17 Apr 14:57:17 CONFIG [org.geoserver] - Loaded coverage store 'img_sample2', enabled
17 Apr 14:57:17 CONFIG [org.geoserver] - Loaded coverage 'Pk50095', enabled
17 Apr 14:57:17 CONFIG [org.geoserver] - Loaded layer 'Pk50095'
17 Apr 14:57:17 CONFIG [org.geoserver] - Loaded coverage store 'arcGridSample', enabled
17 Apr 14:57:17 CONFIG [org.geoserver] - Loaded coverage 'Arc_Sample', enabled
17 Apr 14:57:17 CONFIG [org.geoserver] - Loaded layer 'Arc_Sample'
17 Apr 14:57:17 CONFIG [org.geoserver] - Loaded coverage store 'worldImageSample', enabled
17 Apr 14:57:17 CONFIG [org.geoserver] - Loaded coverage 'Img_Sample', enabled
17 Apr 14:57:17 CONFIG [org.geoserver] - Loaded layer 'Img_Sample'
17 Apr 14:57:18 CONFIG [org.geoserver] - Loaded data store 'nyc', enabled
17 Apr 14:57:18 CONFIG [org.geoserver] - Loaded feature type 'poly_landmarks', enabled
17 Apr 14:57:18 CONFIG [org.geoserver] - Loaded layer 'poly_landmarks'
17 Apr 14:57:18 CONFIG [org.geoserver] - Loaded feature type 'poi', enabled
17 Apr 14:57:18 CONFIG [org.geoserver] - Loaded layer 'poi'
17 Apr 14:57:18 CONFIG [org.geoserver] - Loaded feature type 'giant_polygon', enabled
17 Apr 14:57:18 CONFIG [org.geoserver] - Loaded layer 'giant_polygon'
17 Apr 14:57:18 CONFIG [org.geoserver] - Loaded feature type 'tiger_roads', enabled
17 Apr 14:57:18 CONFIG [org.geoserver] - Loaded layer 'tiger_roads'
17 Apr 14:57:18 WARN   [org.geoserver] - Failed to load data store 'PDE_tables'
com.thoughtworks.xstream.converters.ConversionException: 
---- Debugging information ----
cause-exception     : org.jasypt.exceptions.EncryptionOperationNotPossibleException
cause-message       : null
class               : org.geoserver.catalog.impl.DataStoreInfoImpl
required-type       : org.geoserver.catalog.impl.DataStoreInfoImpl
converter-type      : org.geoserver.config.util.XStreamPersister$StoreInfoConverter
line number         : 33
version             : 2.24.1
-------------------------------
	at com.thoughtworks.xstream.core.TreeUnmarshaller.convert(TreeUnmarshaller.java:81)
	at com.thoughtworks.xstream.core.TreeUnmarshaller.convertAnother(TreeUnmarshaller.java:68)
	at com.thoughtworks.xstream.core.TreeUnmarshaller.convertAnother(TreeUnmarshaller.java:52)
	at com.thoughtworks.xstream.core.TreeUnmarshaller.start(TreeUnmarshaller.java:136)
	at com.thoughtworks.xstream.core.AbstractTreeMarshallingStrategy.unmarshal(AbstractTreeMarshallingStrategy.java:32)
	at com.thoughtworks.xstream.XStream.unmarshal(XStream.java:1464)
	at com.thoughtworks.xstream.XStream.unmarshal(XStream.java:1441)
	at com.thoughtworks.xstream.XStream.fromXML(XStream.java:1330)
	at org.geoserver.config.util.XStreamPersister.load(XStreamPersister.java:721)
	at org.geoserver.config.GeoServerLoader.depersist(GeoServerLoader.java:1138)
	at org.geoserver.config.GeoServerLoader.loadDataStore(GeoServerLoader.java:820)
	at org.geoserver.config.GeoServerLoader.readCatalog(GeoServerLoader.java:664)
	at org.geoserver.config.GeoServerLoader.readCatalog(GeoServerLoader.java:479)
	at org.geoserver.config.DefaultGeoServerLoader.loadCatalog(DefaultGeoServerLoader.java:37)
	at org.geoserver.config.GeoServerLoader.postProcessBeforeInitializationCatalog(GeoServerLoader.java:329)
	at org.geoserver.config.GeoServerLoader.postProcessBeforeInitialization(GeoServerLoader.java:280)
	at org.geoserver.config.GeoServerLoaderProxy.postProcessBeforeInitialization(GeoServerLoaderProxy.java:61)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyBeanPostProcessorsBeforeInitialization(AbstractAutowireCapableBeanFactory.java:440)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1796)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:620)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:330)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:113)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveConstructorArguments(ConstructorResolver.java:707)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:198)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1372)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1222)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:582)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:322)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:330)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:113)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveConstructorArguments(ConstructorResolver.java:707)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:198)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1372)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1222)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:582)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:330)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:113)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveConstructorArguments(ConstructorResolver.java:707)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:198)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1372)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1222)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:582)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:330)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:113)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveConstructorArguments(ConstructorResolver.java:707)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:198)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1372)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1222)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:582)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.getBeansOfType(DefaultListableBeanFactory.java:673)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.getBeansOfType(DefaultListableBeanFactory.java:661)
	at org.springframework.context.support.AbstractApplicationContext.getBeansOfType(AbstractApplicationContext.java:1302)
	at org.geowebcache.GeoWebCacheExtensions.getBeansNamesOrderedByPriority(GeoWebCacheExtensions.java:158)
	at org.geowebcache.GeoWebCacheExtensions.extensions(GeoWebCacheExtensions.java:103)
	at org.geowebcache.config.XMLConfiguration.getConfiguredXStreamWithContext(XMLConfiguration.java:455)
	at org.geowebcache.config.XMLConfiguration.getConfiguredXStreamWithContext(XMLConfiguration.java:361)
	at org.geowebcache.config.XMLConfiguration.loadConfiguration(XMLConfiguration.java:327)
	at org.geowebcache.config.XMLConfiguration.loadConfiguration(XMLConfiguration.java:316)
	at org.geowebcache.config.XMLConfiguration.afterPropertiesSet(XMLConfiguration.java:841)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1863)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1800)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:620)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:955)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:920)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:583)
	at org.springframework.web.context.ContextLoader.configureAndRefreshWebApplicationContext(ContextLoader.java:399)
	at org.springframework.web.context.ContextLoader.initWebApplicationContext(ContextLoader.java:278)
	at org.springframework.web.context.ContextLoaderListener.contextInitialized(ContextLoaderListener.java:103)
	at org.geoserver.platform.GeoServerContextLoaderListener.contextInitialized(GeoServerContextLoaderListener.java:22)
	at org.apache.catalina.core.StandardContext.listenerStart(StandardContext.java:4462)
	at org.apache.catalina.core.StandardContext.startInternal(StandardContext.java:4914)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:171)
	at org.apache.catalina.core.ContainerBase.addChildInternal(ContainerBase.java:683)
	at org.apache.catalina.core.ContainerBase.addChild(ContainerBase.java:658)
	at org.apache.catalina.core.StandardHost.addChild(StandardHost.java:661)
	at org.apache.catalina.startup.HostConfig.deployDirectory(HostConfig.java:1184)
	at org.apache.catalina.startup.HostConfig$DeployDirectory.run(HostConfig.java:1932)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at org.apache.tomcat.util.threads.InlineExecutorService.execute(InlineExecutorService.java:75)
	at java.base/java.util.concurrent.AbstractExecutorService.submit(AbstractExecutorService.java:118)
	at org.apache.catalina.startup.HostConfig.deployDirectories(HostConfig.java:1094)
	at org.apache.catalina.startup.HostConfig.deployApps(HostConfig.java:476)
	at org.apache.catalina.startup.HostConfig.start(HostConfig.java:1617)
	at org.apache.catalina.startup.HostConfig.lifecycleEvent(HostConfig.java:318)
	at org.apache.catalina.util.LifecycleBase.fireLifecycleEvent(LifecycleBase.java:114)
	at org.apache.catalina.util.LifecycleBase.setStateInternal(LifecycleBase.java:402)
	at org.apache.catalina.util.LifecycleBase.setState(LifecycleBase.java:345)
	at org.apache.catalina.core.ContainerBase.startInternal(ContainerBase.java:893)
	at org.apache.catalina.core.StandardHost.startInternal(StandardHost.java:794)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:171)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1332)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1322)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at org.apache.tomcat.util.threads.InlineExecutorService.execute(InlineExecutorService.java:75)
	at java.base/java.util.concurrent.AbstractExecutorService.submit(AbstractExecutorService.java:140)
	at org.apache.catalina.core.ContainerBase.startInternal(ContainerBase.java:866)
	at org.apache.catalina.core.StandardEngine.startInternal(StandardEngine.java:248)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:171)
	at org.apache.catalina.core.StandardService.startInternal(StandardService.java:433)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:171)
	at org.apache.catalina.core.StandardServer.startInternal(StandardServer.java:921)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:171)
	at org.apache.catalina.startup.Catalina.start(Catalina.java:772)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.apache.catalina.startup.Bootstrap.start(Bootstrap.java:347)
	at org.apache.catalina.startup.Bootstrap.main(Bootstrap.java:478)
Caused by: org.jasypt.exceptions.EncryptionOperationNotPossibleException
	at org.jasypt.encryption.pbe.StandardPBEByteEncryptor.decrypt(StandardPBEByteEncryptor.java:1055)
	at org.jasypt.encryption.pbe.StandardPBEStringEncryptor.decrypt(StandardPBEStringEncryptor.java:725)
	at org.geoserver.security.password.GeoServerPBEPasswordEncoder.decode(GeoServerPBEPasswordEncoder.java:176)
	at org.geoserver.security.password.ConfigurationPasswordEncryptionHelper.decode(ConfigurationPasswordEncryptionHelper.java:208)
	at org.geoserver.security.password.ConfigurationPasswordEncryptionHelper.decode(ConfigurationPasswordEncryptionHelper.java:192)
	at org.geoserver.config.util.XStreamPersister$StoreInfoConverter.doUnmarshal(XStreamPersister.java:1875)
	at com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter.unmarshal(AbstractReflectionConverter.java:277)
	at com.thoughtworks.xstream.core.TreeUnmarshaller.convert(TreeUnmarshaller.java:74)
	... 140 more
17 Apr 14:57:18 WARN   [org.geoserver] - Failed to load data store 'Postgres_general'
com.thoughtworks.xstream.converters.ConversionException: 
---- Debugging information ----
cause-exception     : org.jasypt.exceptions.EncryptionOperationNotPossibleException
cause-message       : null
class               : org.geoserver.catalog.impl.DataStoreInfoImpl
required-type       : org.geoserver.catalog.impl.DataStoreInfoImpl
converter-type      : org.geoserver.config.util.XStreamPersister$StoreInfoConverter
line number         : 33
version             : 2.24.1
-------------------------------
	at com.thoughtworks.xstream.core.TreeUnmarshaller.convert(TreeUnmarshaller.java:81)
	at com.thoughtworks.xstream.core.TreeUnmarshaller.convertAnother(TreeUnmarshaller.java:68)
	at com.thoughtworks.xstream.core.TreeUnmarshaller.convertAnother(TreeUnmarshaller.java:52)
	at com.thoughtworks.xstream.core.TreeUnmarshaller.start(TreeUnmarshaller.java:136)
	at com.thoughtworks.xstream.core.AbstractTreeMarshallingStrategy.unmarshal(AbstractTreeMarshallingStrategy.java:32)
	at com.thoughtworks.xstream.XStream.unmarshal(XStream.java:1464)
	at com.thoughtworks.xstream.XStream.unmarshal(XStream.java:1441)
	at com.thoughtworks.xstream.XStream.fromXML(XStream.java:1330)
	at org.geoserver.config.util.XStreamPersister.load(XStreamPersister.java:721)
	at org.geoserver.config.GeoServerLoader.depersist(GeoServerLoader.java:1138)
	at org.geoserver.config.GeoServerLoader.loadDataStore(GeoServerLoader.java:820)
	at org.geoserver.config.GeoServerLoader.readCatalog(GeoServerLoader.java:664)
	at org.geoserver.config.GeoServerLoader.readCatalog(GeoServerLoader.java:479)
	at org.geoserver.config.DefaultGeoServerLoader.loadCatalog(DefaultGeoServerLoader.java:37)
	at org.geoserver.config.GeoServerLoader.postProcessBeforeInitializationCatalog(GeoServerLoader.java:329)
	at org.geoserver.config.GeoServerLoader.postProcessBeforeInitialization(GeoServerLoader.java:280)
	at org.geoserver.config.GeoServerLoaderProxy.postProcessBeforeInitialization(GeoServerLoaderProxy.java:61)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyBeanPostProcessorsBeforeInitialization(AbstractAutowireCapableBeanFactory.java:440)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1796)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:620)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:330)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:113)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveConstructorArguments(ConstructorResolver.java:707)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:198)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1372)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1222)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:582)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:322)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:330)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:113)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveConstructorArguments(ConstructorResolver.java:707)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:198)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1372)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1222)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:582)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:330)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:113)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveConstructorArguments(ConstructorResolver.java:707)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:198)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1372)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1222)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:582)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:330)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:113)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveConstructorArguments(ConstructorResolver.java:707)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:198)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1372)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1222)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:582)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.getBeansOfType(DefaultListableBeanFactory.java:673)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.getBeansOfType(DefaultListableBeanFactory.java:661)
	at org.springframework.context.support.AbstractApplicationContext.getBeansOfType(AbstractApplicationContext.java:1302)
	at org.geowebcache.GeoWebCacheExtensions.getBeansNamesOrderedByPriority(GeoWebCacheExtensions.java:158)
	at org.geowebcache.GeoWebCacheExtensions.extensions(GeoWebCacheExtensions.java:103)
	at org.geowebcache.config.XMLConfiguration.getConfiguredXStreamWithContext(XMLConfiguration.java:455)
	at org.geowebcache.config.XMLConfiguration.getConfiguredXStreamWithContext(XMLConfiguration.java:361)
	at org.geowebcache.config.XMLConfiguration.loadConfiguration(XMLConfiguration.java:327)
	at org.geowebcache.config.XMLConfiguration.loadConfiguration(XMLConfiguration.java:316)
	at org.geowebcache.config.XMLConfiguration.afterPropertiesSet(XMLConfiguration.java:841)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1863)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1800)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:620)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:955)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:920)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:583)
	at org.springframework.web.context.ContextLoader.configureAndRefreshWebApplicationContext(ContextLoader.java:399)
	at org.springframework.web.context.ContextLoader.initWebApplicationContext(ContextLoader.java:278)
	at org.springframework.web.context.ContextLoaderListener.contextInitialized(ContextLoaderListener.java:103)
	at org.geoserver.platform.GeoServerContextLoaderListener.contextInitialized(GeoServerContextLoaderListener.java:22)
	at org.apache.catalina.core.StandardContext.listenerStart(StandardContext.java:4462)
	at org.apache.catalina.core.StandardContext.startInternal(StandardContext.java:4914)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:171)
	at org.apache.catalina.core.ContainerBase.addChildInternal(ContainerBase.java:683)
	at org.apache.catalina.core.ContainerBase.addChild(ContainerBase.java:658)
	at org.apache.catalina.core.StandardHost.addChild(StandardHost.java:661)
	at org.apache.catalina.startup.HostConfig.deployDirectory(HostConfig.java:1184)
	at org.apache.catalina.startup.HostConfig$DeployDirectory.run(HostConfig.java:1932)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at org.apache.tomcat.util.threads.InlineExecutorService.execute(InlineExecutorService.java:75)
	at java.base/java.util.concurrent.AbstractExecutorService.submit(AbstractExecutorService.java:118)
	at org.apache.catalina.startup.HostConfig.deployDirectories(HostConfig.java:1094)
	at org.apache.catalina.startup.HostConfig.deployApps(HostConfig.java:476)
	at org.apache.catalina.startup.HostConfig.start(HostConfig.java:1617)
	at org.apache.catalina.startup.HostConfig.lifecycleEvent(HostConfig.java:318)
	at org.apache.catalina.util.LifecycleBase.fireLifecycleEvent(LifecycleBase.java:114)
	at org.apache.catalina.util.LifecycleBase.setStateInternal(LifecycleBase.java:402)
	at org.apache.catalina.util.LifecycleBase.setState(LifecycleBase.java:345)
	at org.apache.catalina.core.ContainerBase.startInternal(ContainerBase.java:893)
	at org.apache.catalina.core.StandardHost.startInternal(StandardHost.java:794)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:171)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1332)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1322)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at org.apache.tomcat.util.threads.InlineExecutorService.execute(InlineExecutorService.java:75)
	at java.base/java.util.concurrent.AbstractExecutorService.submit(AbstractExecutorService.java:140)
	at org.apache.catalina.core.ContainerBase.startInternal(ContainerBase.java:866)
	at org.apache.catalina.core.StandardEngine.startInternal(StandardEngine.java:248)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:171)
	at org.apache.catalina.core.StandardService.startInternal(StandardService.java:433)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:171)
	at org.apache.catalina.core.StandardServer.startInternal(StandardServer.java:921)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:171)
	at org.apache.catalina.startup.Catalina.start(Catalina.java:772)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.apache.catalina.startup.Bootstrap.start(Bootstrap.java:347)
	at org.apache.catalina.startup.Bootstrap.main(Bootstrap.java:478)
Caused by: org.jasypt.exceptions.EncryptionOperationNotPossibleException
	at org.jasypt.encryption.pbe.StandardPBEByteEncryptor.decrypt(StandardPBEByteEncryptor.java:1055)
	at org.jasypt.encryption.pbe.StandardPBEStringEncryptor.decrypt(StandardPBEStringEncryptor.java:725)
	at org.geoserver.security.password.GeoServerPBEPasswordEncoder.decode(GeoServerPBEPasswordEncoder.java:176)
	at org.geoserver.security.password.ConfigurationPasswordEncryptionHelper.decode(ConfigurationPasswordEncryptionHelper.java:208)
	at org.geoserver.security.password.ConfigurationPasswordEncryptionHelper.decode(ConfigurationPasswordEncryptionHelper.java:192)
	at org.geoserver.config.util.XStreamPersister$StoreInfoConverter.doUnmarshal(XStreamPersister.java:1875)
	at com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter.unmarshal(AbstractReflectionConverter.java:277)
	at com.thoughtworks.xstream.core.TreeUnmarshaller.convert(TreeUnmarshaller.java:74)
	... 140 more
17 Apr 14:57:18 WARN   [org.geoserver] - Failed to load data store 'Scotland'
com.thoughtworks.xstream.converters.ConversionException: 
---- Debugging information ----
cause-exception     : org.jasypt.exceptions.EncryptionOperationNotPossibleException
cause-message       : null
class               : org.geoserver.catalog.impl.DataStoreInfoImpl
required-type       : org.geoserver.catalog.impl.DataStoreInfoImpl
converter-type      : org.geoserver.config.util.XStreamPersister$StoreInfoConverter
line number         : 32
version             : 2.24.1
-------------------------------
	at com.thoughtworks.xstream.core.TreeUnmarshaller.convert(TreeUnmarshaller.java:81)
	at com.thoughtworks.xstream.core.TreeUnmarshaller.convertAnother(TreeUnmarshaller.java:68)
	at com.thoughtworks.xstream.core.TreeUnmarshaller.convertAnother(TreeUnmarshaller.java:52)
	at com.thoughtworks.xstream.core.TreeUnmarshaller.start(TreeUnmarshaller.java:136)
	at com.thoughtworks.xstream.core.AbstractTreeMarshallingStrategy.unmarshal(AbstractTreeMarshallingStrategy.java:32)
	at com.thoughtworks.xstream.XStream.unmarshal(XStream.java:1464)
	at com.thoughtworks.xstream.XStream.unmarshal(XStream.java:1441)
	at com.thoughtworks.xstream.XStream.fromXML(XStream.java:1330)
	at org.geoserver.config.util.XStreamPersister.load(XStreamPersister.java:721)
	at org.geoserver.config.GeoServerLoader.depersist(GeoServerLoader.java:1138)
	at org.geoserver.config.GeoServerLoader.loadDataStore(GeoServerLoader.java:820)
	at org.geoserver.config.GeoServerLoader.readCatalog(GeoServerLoader.java:664)
	at org.geoserver.config.GeoServerLoader.readCatalog(GeoServerLoader.java:479)
	at org.geoserver.config.DefaultGeoServerLoader.loadCatalog(DefaultGeoServerLoader.java:37)
	at org.geoserver.config.GeoServerLoader.postProcessBeforeInitializationCatalog(GeoServerLoader.java:329)
	at org.geoserver.config.GeoServerLoader.postProcessBeforeInitialization(GeoServerLoader.java:280)
	at org.geoserver.config.GeoServerLoaderProxy.postProcessBeforeInitialization(GeoServerLoaderProxy.java:61)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyBeanPostProcessorsBeforeInitialization(AbstractAutowireCapableBeanFactory.java:440)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1796)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:620)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:330)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:113)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveConstructorArguments(ConstructorResolver.java:707)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:198)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1372)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1222)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:582)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:322)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:330)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:113)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveConstructorArguments(ConstructorResolver.java:707)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:198)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1372)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1222)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:582)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:330)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:113)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveConstructorArguments(ConstructorResolver.java:707)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:198)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1372)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1222)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:582)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:330)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:113)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveConstructorArguments(ConstructorResolver.java:707)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:198)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1372)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1222)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:582)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.getBeansOfType(DefaultListableBeanFactory.java:673)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.getBeansOfType(DefaultListableBeanFactory.java:661)
	at org.springframework.context.support.AbstractApplicationContext.getBeansOfType(AbstractApplicationContext.java:1302)
	at org.geowebcache.GeoWebCacheExtensions.getBeansNamesOrderedByPriority(GeoWebCacheExtensions.java:158)
	at org.geowebcache.GeoWebCacheExtensions.extensions(GeoWebCacheExtensions.java:103)
	at org.geowebcache.config.XMLConfiguration.getConfiguredXStreamWithContext(XMLConfiguration.java:455)
	at org.geowebcache.config.XMLConfiguration.getConfiguredXStreamWithContext(XMLConfiguration.java:361)
	at org.geowebcache.config.XMLConfiguration.loadConfiguration(XMLConfiguration.java:327)
	at org.geowebcache.config.XMLConfiguration.loadConfiguration(XMLConfiguration.java:316)
	at org.geowebcache.config.XMLConfiguration.afterPropertiesSet(XMLConfiguration.java:841)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1863)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1800)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:620)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:955)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:920)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:583)
	at org.springframework.web.context.ContextLoader.configureAndRefreshWebApplicationContext(ContextLoader.java:399)
	at org.springframework.web.context.ContextLoader.initWebApplicationContext(ContextLoader.java:278)
	at org.springframework.web.context.ContextLoaderListener.contextInitialized(ContextLoaderListener.java:103)
	at org.geoserver.platform.GeoServerContextLoaderListener.contextInitialized(GeoServerContextLoaderListener.java:22)
	at org.apache.catalina.core.StandardContext.listenerStart(StandardContext.java:4462)
	at org.apache.catalina.core.StandardContext.startInternal(StandardContext.java:4914)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:171)
	at org.apache.catalina.core.ContainerBase.addChildInternal(ContainerBase.java:683)
	at org.apache.catalina.core.ContainerBase.addChild(ContainerBase.java:658)
	at org.apache.catalina.core.StandardHost.addChild(StandardHost.java:661)
	at org.apache.catalina.startup.HostConfig.deployDirectory(HostConfig.java:1184)
	at org.apache.catalina.startup.HostConfig$DeployDirectory.run(HostConfig.java:1932)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at org.apache.tomcat.util.threads.InlineExecutorService.execute(InlineExecutorService.java:75)
	at java.base/java.util.concurrent.AbstractExecutorService.submit(AbstractExecutorService.java:118)
	at org.apache.catalina.startup.HostConfig.deployDirectories(HostConfig.java:1094)
	at org.apache.catalina.startup.HostConfig.deployApps(HostConfig.java:476)
	at org.apache.catalina.startup.HostConfig.start(HostConfig.java:1617)
	at org.apache.catalina.startup.HostConfig.lifecycleEvent(HostConfig.java:318)
	at org.apache.catalina.util.LifecycleBase.fireLifecycleEvent(LifecycleBase.java:114)
	at org.apache.catalina.util.LifecycleBase.setStateInternal(LifecycleBase.java:402)
	at org.apache.catalina.util.LifecycleBase.setState(LifecycleBase.java:345)
	at org.apache.catalina.core.ContainerBase.startInternal(ContainerBase.java:893)
	at org.apache.catalina.core.StandardHost.startInternal(StandardHost.java:794)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:171)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1332)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1322)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at org.apache.tomcat.util.threads.InlineExecutorService.execute(InlineExecutorService.java:75)
	at java.base/java.util.concurrent.AbstractExecutorService.submit(AbstractExecutorService.java:140)
	at org.apache.catalina.core.ContainerBase.startInternal(ContainerBase.java:866)
	at org.apache.catalina.core.StandardEngine.startInternal(StandardEngine.java:248)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:171)
	at org.apache.catalina.core.StandardService.startInternal(StandardService.java:433)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:171)
	at org.apache.catalina.core.StandardServer.startInternal(StandardServer.java:921)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:171)
	at org.apache.catalina.startup.Catalina.start(Catalina.java:772)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.apache.catalina.startup.Bootstrap.start(Bootstrap.java:347)
	at org.apache.catalina.startup.Bootstrap.main(Bootstrap.java:478)
Caused by: org.jasypt.exceptions.EncryptionOperationNotPossibleException
	at org.jasypt.encryption.pbe.StandardPBEByteEncryptor.decrypt(StandardPBEByteEncryptor.java:1055)
	at org.jasypt.encryption.pbe.StandardPBEStringEncryptor.decrypt(StandardPBEStringEncryptor.java:725)
	at org.geoserver.security.password.GeoServerPBEPasswordEncoder.decode(GeoServerPBEPasswordEncoder.java:176)
	at org.geoserver.security.password.ConfigurationPasswordEncryptionHelper.decode(ConfigurationPasswordEncryptionHelper.java:208)
	at org.geoserver.security.password.ConfigurationPasswordEncryptionHelper.decode(ConfigurationPasswordEncryptionHelper.java:192)
	at org.geoserver.config.util.XStreamPersister$StoreInfoConverter.doUnmarshal(XStreamPersister.java:1875)
	at com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter.unmarshal(AbstractReflectionConverter.java:277)
	at com.thoughtworks.xstream.core.TreeUnmarshaller.convert(TreeUnmarshaller.java:74)
	... 140 more
17 Apr 14:57:18 WARN   [org.geoserver] - Failed to load data store 'historic_scottish_landuse'
com.thoughtworks.xstream.converters.ConversionException: 
---- Debugging information ----
cause-exception     : org.jasypt.exceptions.EncryptionOperationNotPossibleException
cause-message       : null
class               : org.geoserver.catalog.impl.DataStoreInfoImpl
required-type       : org.geoserver.catalog.impl.DataStoreInfoImpl
converter-type      : org.geoserver.config.util.XStreamPersister$StoreInfoConverter
line number         : 33
version             : 2.24.1
-------------------------------
	at com.thoughtworks.xstream.core.TreeUnmarshaller.convert(TreeUnmarshaller.java:81)
	at com.thoughtworks.xstream.core.TreeUnmarshaller.convertAnother(TreeUnmarshaller.java:68)
	at com.thoughtworks.xstream.core.TreeUnmarshaller.convertAnother(TreeUnmarshaller.java:52)
	at com.thoughtworks.xstream.core.TreeUnmarshaller.start(TreeUnmarshaller.java:136)
	at com.thoughtworks.xstream.core.AbstractTreeMarshallingStrategy.unmarshal(AbstractTreeMarshallingStrategy.java:32)
	at com.thoughtworks.xstream.XStream.unmarshal(XStream.java:1464)
	at com.thoughtworks.xstream.XStream.unmarshal(XStream.java:1441)
	at com.thoughtworks.xstream.XStream.fromXML(XStream.java:1330)
	at org.geoserver.config.util.XStreamPersister.load(XStreamPersister.java:721)
	at org.geoserver.config.GeoServerLoader.depersist(GeoServerLoader.java:1138)
	at org.geoserver.config.GeoServerLoader.loadDataStore(GeoServerLoader.java:820)
	at org.geoserver.config.GeoServerLoader.readCatalog(GeoServerLoader.java:664)
	at org.geoserver.config.GeoServerLoader.readCatalog(GeoServerLoader.java:479)
	at org.geoserver.config.DefaultGeoServerLoader.loadCatalog(DefaultGeoServerLoader.java:37)
	at org.geoserver.config.GeoServerLoader.postProcessBeforeInitializationCatalog(GeoServerLoader.java:329)
	at org.geoserver.config.GeoServerLoader.postProcessBeforeInitialization(GeoServerLoader.java:280)
	at org.geoserver.config.GeoServerLoaderProxy.postProcessBeforeInitialization(GeoServerLoaderProxy.java:61)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyBeanPostProcessorsBeforeInitialization(AbstractAutowireCapableBeanFactory.java:440)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1796)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:620)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:330)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:113)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveConstructorArguments(ConstructorResolver.java:707)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:198)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1372)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1222)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:582)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:322)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:330)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:113)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveConstructorArguments(ConstructorResolver.java:707)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:198)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1372)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1222)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:582)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:330)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:113)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveConstructorArguments(ConstructorResolver.java:707)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:198)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1372)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1222)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:582)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:330)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:113)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveConstructorArguments(ConstructorResolver.java:707)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:198)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1372)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1222)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:582)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.getBeansOfType(DefaultListableBeanFactory.java:673)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.getBeansOfType(DefaultListableBeanFactory.java:661)
	at org.springframework.context.support.AbstractApplicationContext.getBeansOfType(AbstractApplicationContext.java:1302)
	at org.geowebcache.GeoWebCacheExtensions.getBeansNamesOrderedByPriority(GeoWebCacheExtensions.java:158)
	at org.geowebcache.GeoWebCacheExtensions.extensions(GeoWebCacheExtensions.java:103)
	at org.geowebcache.config.XMLConfiguration.getConfiguredXStreamWithContext(XMLConfiguration.java:455)
	at org.geowebcache.config.XMLConfiguration.getConfiguredXStreamWithContext(XMLConfiguration.java:361)
	at org.geowebcache.config.XMLConfiguration.loadConfiguration(XMLConfiguration.java:327)
	at org.geowebcache.config.XMLConfiguration.loadConfiguration(XMLConfiguration.java:316)
	at org.geowebcache.config.XMLConfiguration.afterPropertiesSet(XMLConfiguration.java:841)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1863)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1800)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:620)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:955)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:920)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:583)
	at org.springframework.web.context.ContextLoader.configureAndRefreshWebApplicationContext(ContextLoader.java:399)
	at org.springframework.web.context.ContextLoader.initWebApplicationContext(ContextLoader.java:278)
	at org.springframework.web.context.ContextLoaderListener.contextInitialized(ContextLoaderListener.java:103)
	at org.geoserver.platform.GeoServerContextLoaderListener.contextInitialized(GeoServerContextLoaderListener.java:22)
	at org.apache.catalina.core.StandardContext.listenerStart(StandardContext.java:4462)
	at org.apache.catalina.core.StandardContext.startInternal(StandardContext.java:4914)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:171)
	at org.apache.catalina.core.ContainerBase.addChildInternal(ContainerBase.java:683)
	at org.apache.catalina.core.ContainerBase.addChild(ContainerBase.java:658)
	at org.apache.catalina.core.StandardHost.addChild(StandardHost.java:661)
	at org.apache.catalina.startup.HostConfig.deployDirectory(HostConfig.java:1184)
	at org.apache.catalina.startup.HostConfig$DeployDirectory.run(HostConfig.java:1932)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at org.apache.tomcat.util.threads.InlineExecutorService.execute(InlineExecutorService.java:75)
	at java.base/java.util.concurrent.AbstractExecutorService.submit(AbstractExecutorService.java:118)
	at org.apache.catalina.startup.HostConfig.deployDirectories(HostConfig.java:1094)
	at org.apache.catalina.startup.HostConfig.deployApps(HostConfig.java:476)
	at org.apache.catalina.startup.HostConfig.start(HostConfig.java:1617)
	at org.apache.catalina.startup.HostConfig.lifecycleEvent(HostConfig.java:318)
	at org.apache.catalina.util.LifecycleBase.fireLifecycleEvent(LifecycleBase.java:114)
	at org.apache.catalina.util.LifecycleBase.setStateInternal(LifecycleBase.java:402)
	at org.apache.catalina.util.LifecycleBase.setState(LifecycleBase.java:345)
	at org.apache.catalina.core.ContainerBase.startInternal(ContainerBase.java:893)
	at org.apache.catalina.core.StandardHost.startInternal(StandardHost.java:794)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:171)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1332)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1322)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at org.apache.tomcat.util.threads.InlineExecutorService.execute(InlineExecutorService.java:75)
	at java.base/java.util.concurrent.AbstractExecutorService.submit(AbstractExecutorService.java:140)
	at org.apache.catalina.core.ContainerBase.startInternal(ContainerBase.java:866)
	at org.apache.catalina.core.StandardEngine.startInternal(StandardEngine.java:248)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:171)
	at org.apache.catalina.core.StandardService.startInternal(StandardService.java:433)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:171)
	at org.apache.catalina.core.StandardServer.startInternal(StandardServer.java:921)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:171)
	at org.apache.catalina.startup.Catalina.start(Catalina.java:772)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.apache.catalina.startup.Bootstrap.start(Bootstrap.java:347)
	at org.apache.catalina.startup.Bootstrap.main(Bootstrap.java:478)
Caused by: org.jasypt.exceptions.EncryptionOperationNotPossibleException
	at org.jasypt.encryption.pbe.StandardPBEByteEncryptor.decrypt(StandardPBEByteEncryptor.java:1055)
	at org.jasypt.encryption.pbe.StandardPBEStringEncryptor.decrypt(StandardPBEStringEncryptor.java:725)
	at org.geoserver.security.password.GeoServerPBEPasswordEncoder.decode(GeoServerPBEPasswordEncoder.java:176)
	at org.geoserver.security.password.ConfigurationPasswordEncryptionHelper.decode(ConfigurationPasswordEncryptionHelper.java:208)
	at org.geoserver.security.password.ConfigurationPasswordEncryptionHelper.decode(ConfigurationPasswordEncryptionHelper.java:192)
	at org.geoserver.config.util.XStreamPersister$StoreInfoConverter.doUnmarshal(XStreamPersister.java:1875)
	at com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter.unmarshal(AbstractReflectionConverter.java:277)
	at com.thoughtworks.xstream.core.TreeUnmarshaller.convert(TreeUnmarshaller.java:74)
	... 140 more
17 Apr 14:57:18 WARN   [geoserver.security] - Could not find factory for store : DataStoreInfoImpl[mysql-stg]. Unable to encrypt connection parameters.
17 Apr 14:57:18 CONFIG [org.geoserver] - Loaded data store 'mysql-stg', enabled
17 Apr 14:57:18 CONFIG [org.geoserver] - Loaded feature type 'vw_pomsapp_place', enabled
17 Apr 14:57:18 CONFIG [org.geoserver] - Loaded layer 'vw_pomsapp_place'
17 Apr 14:57:18 CONFIG [org.geoserver] - Loaded coverage store 'sfdem', enabled
17 Apr 14:57:18 CONFIG [org.geoserver] - Loaded coverage 'sfdem', enabled
17 Apr 14:57:18 CONFIG [org.geoserver] - Loaded layer 'sfdem'
17 Apr 14:57:18 CONFIG [org.geoserver] - Loaded data store 'sf', enabled
17 Apr 14:57:18 CONFIG [org.geoserver] - Loaded feature type 'restricted', enabled
17 Apr 14:57:18 CONFIG [org.geoserver] - Loaded layer 'restricted'
17 Apr 14:57:18 CONFIG [org.geoserver] - Loaded feature type 'bugsites', enabled
17 Apr 14:57:18 CONFIG [org.geoserver] - Loaded layer 'bugsites'
17 Apr 14:57:18 CONFIG [org.geoserver] - Loaded feature type 'streams', enabled
17 Apr 14:57:18 CONFIG [org.geoserver] - Loaded layer 'streams'
17 Apr 14:57:18 CONFIG [org.geoserver] - Loaded feature type 'archsites', enabled
17 Apr 14:57:18 CONFIG [org.geoserver] - Loaded layer 'archsites'
17 Apr 14:57:18 CONFIG [org.geoserver] - Loaded feature type 'roads', enabled
17 Apr 14:57:18 CONFIG [org.geoserver] - Loaded layer 'roads'
17 Apr 14:57:18 CONFIG [org.geoserver] - Loaded data store 'taz_shapes', enabled
17 Apr 14:57:18 CONFIG [org.geoserver] - Loaded feature type 'tasmania_water_bodies', enabled
17 Apr 14:57:18 CONFIG [org.geoserver] - Loaded layer 'tasmania_water_bodies'
17 Apr 14:57:18 CONFIG [org.geoserver] - Loaded feature type 'tasmania_cities', enabled
17 Apr 14:57:18 CONFIG [org.geoserver] - Loaded layer 'tasmania_cities'
17 Apr 14:57:18 CONFIG [org.geoserver] - Loaded feature type 'tasmania_state_boundaries', enabled
17 Apr 14:57:18 CONFIG [org.geoserver] - Loaded layer 'tasmania_state_boundaries'
17 Apr 14:57:18 CONFIG [org.geoserver] - Loaded feature type 'tasmania_roads', enabled
17 Apr 14:57:18 CONFIG [org.geoserver] - Loaded layer 'tasmania_roads'
17 Apr 14:57:18 CONFIG [org.geoserver] - Loaded data store 'states_shapefile', enabled
17 Apr 14:57:18 CONFIG [org.geoserver] - Loaded feature type 'states', enabled
17 Apr 14:57:18 CONFIG [org.geoserver] - Loaded layer 'states'
17 Apr 14:57:18 CONFIG [org.geoserver] - Loaded data store 'NaturalEarth', enabled
17 Apr 14:57:18 CONFIG [org.geoserver] - Loaded feature type 'boundary_lines', enabled
17 Apr 14:57:18 CONFIG [org.geoserver] - Loaded layer 'boundary_lines'
17 Apr 14:57:18 CONFIG [org.geoserver] - Loaded feature type 'disputed_areas', enabled
17 Apr 14:57:18 CONFIG [org.geoserver] - Loaded layer 'disputed_areas'
17 Apr 14:57:18 CONFIG [org.geoserver] - Loaded feature type 'populated_places', enabled
17 Apr 14:57:18 CONFIG [org.geoserver] - Loaded layer 'populated_places'
17 Apr 14:57:18 CONFIG [org.geoserver] - Loaded feature type 'coastlines', enabled
17 Apr 14:57:18 CONFIG [org.geoserver] - Loaded layer 'coastlines'
17 Apr 14:57:18 CONFIG [org.geoserver] - Loaded feature type 'countries', enabled
17 Apr 14:57:18 CONFIG [org.geoserver] - Loaded layer 'countries'
17 Apr 14:57:18 CONFIG [org.geoserver] - Loaded layer group 'world'
17 Apr 14:57:18 CONFIG [org.geoserver] - Loaded layer group 'tiger-ny'
17 Apr 14:57:18 CONFIG [org.geoserver] - Loaded layer group 'aster_blend_test'
17 Apr 14:57:18 CONFIG [org.geoserver] - Loaded layer group 'world_simple'
17 Apr 14:57:18 CONFIG [org.geoserver] - Loaded layer group 'PDE_style_test'
17 Apr 14:57:18 CONFIG [org.geoserver] - Loaded layer group 'County_label'
17 Apr 14:57:18 CONFIG [org.geoserver] - Loaded layer group 'PDE_rivers'
17 Apr 14:57:18 CONFIG [org.geoserver] - Loaded layer group 'PDE_simple_backdrop'
17 Apr 14:57:18 CONFIG [org.geoserver] - Loaded layer group 'spearfish'
17 Apr 14:57:18 CONFIG [org.geoserver] - Loaded layer group 'koro_group'
17 Apr 14:57:18 CONFIG [org.geoserver] - Loaded layer group 'citywitness_finals'
17 Apr 14:57:19 CONFIG [org.geoserver] - Loaded layer group 'PDE_National_Borders'
17 Apr 14:57:19 CONFIG [org.geoserver] - Loaded layer group 'Scrapbook test'
17 Apr 14:57:19 CONFIG [org.geoserver] - Loaded layer group 'TMS_Style_CW'
17 Apr 14:57:19 CONFIG [org.geoserver] - Loaded layer group 'PDE_Rivers_2'
17 Apr 14:57:19 CONFIG [org.geoserver] - Loaded layer group 'tasmania'
17 Apr 14:57:19 CONFIG [org.geoserver] - Read catalog in 3.437 s
17 Apr 14:57:19 CONFIG [config.XMLConfiguration] - Initializing GridSets from gwc
17 Apr 14:57:19 CONFIG [config.XMLConfiguration] - Initializing layers from gwc
17 Apr 14:57:19 CONFIG [gwc.layer] - Initializing GWC configuration based on GeoServer's Catalog
17 Apr 14:57:19 CONFIG [gwc.layer] - GeoServer TileLayer store base directory is: gwc-layers
17 Apr 14:57:19 CONFIG [gwc.layer] - Loading tile layers from gwc-layers
17 Apr 14:57:19 CONFIG [gwc.layer] - Loaded 28 tile layers in 27.23 ms
17 Apr 14:57:19 CONFIG [storage.BlobStoreAggregator] - BlobStoreConfiguration gwc contained no blob store infos.
17 Apr 14:57:19 CONFIG [storage.DefaultStorageFinder] - Found system environment variableGEOSERVER_DATA_DIR set to /opt/geoserver_data/, using it as the default prefix.
17 Apr 14:57:19 CONFIG [geowebcache.GeoWebCacheDispatcher] - Invoked setServletPrefix(gwc)
17 Apr 14:57:19 CONFIG [wms.WMSService] - Will NOT recombine tiles for non-tiling clients.
17 Apr 14:57:19 CONFIG [wms.WMSService] - Will proxy requests to backend that are not getmap or getcapabilities.
17 Apr 14:57:19 CONFIG [org.geoserver] - Loaded service 'WMTSInfoImpl--288a2c05:1786a499f45:-7ff2', enabled
17 Apr 14:57:19 CONFIG [org.geoserver] - Loaded service 'wcs', enabled
17 Apr 14:57:19 CONFIG [org.geoserver] - Loaded service 'wfs', enabled
17 Apr 14:57:19 CONFIG [org.geoserver] - Loaded service 'wms', enabled
17 Apr 14:57:19 CONFIG [org.geoserver] - Loaded service 'WCSInfoImpl--19e1b629:13c90fa1a61:-7461', enabled
17 Apr 14:57:19 CONFIG [org.geoserver] - Loaded service 'WFSInfoImpl--19e1b629:13c90fa1a61:-7460', enabled
17 Apr 14:57:19 CONFIG [org.geoserver] - Loaded service 'WMSInfoImpl--19e1b629:13c90fa1a61:-745f', enabled
17 Apr 14:57:19 CONFIG [org.geoserver] - Loaded service 'WMTSInfoImpl-1c443fee:182c0f3f209:-7f98', enabled
17 Apr 14:57:19 CONFIG [org.geoserver] - Loaded service 'WCSInfoImpl-1c443fee:182c0f3f209:-7f96', enabled
17 Apr 14:57:19 CONFIG [org.geoserver] - Loaded service 'WFSInfoImpl-1c443fee:182c0f3f209:-7f97', enabled
17 Apr 14:57:19 CONFIG [org.geoserver] - Loaded service 'WMSInfoImpl-1c443fee:182c0f3f209:-7f99', enabled
17 Apr 14:57:19 CONFIG [gwc.config] - Initializing GeoServer specific GWC configuration from gwc-gs.xml
17 Apr 14:57:19 CONFIG [gwc.config] - Will look for 'geowebcache-diskquota.xml' in directory '/opt/geoserver_data/gwc'.
17 Apr 14:57:19 CONFIG [gwc.config] - Will look for 'geowebcache-diskquota-jdbc.xml' in directory '/opt/geoserver_data/gwc'.
17 Apr 14:57:19 CONFIG [diskquota.ConfigLoader] - DiskQuota configuration is not readable: gwc/geowebcache-diskquota.xml
17 Apr 14:57:19 CONFIG [diskquota.ConfigLoader] - DiskQuota configuration is not readable: gwc/geowebcache-diskquota.xml
17 Apr 14:57:25 CONFIG [diskquota.ConfigLoader] - DiskQuota configuration is not readable: gwc/geowebcache-diskquota.xml
17 Apr 14:57:25 CONFIG [diskquota.DiskQuotaMonitor] - Setting up disk quota periodic enforcement task
17 Apr 14:57:25 CONFIG [diskquota.DiskQuotaMonitor] - 0 layers configured with their own quotas. 
17 Apr 14:57:25 CONFIG [diskquota.DiskQuotaMonitor] - 28 layers attached to global quota 500.0 MB
17 Apr 14:57:25 CONFIG [diskquota.DiskQuotaMonitor] - Disk quota periodic enforcement task set up every 10 SECONDS
17 Apr 14:57:26 CONFIG [geoserver.security] - Start reloading user/groups for service named default
17 Apr 14:57:26 CONFIG [geoserver.security] - Reloading user/groups successful for service named default
17 Apr 14:57:26 CONFIG [geoserver.security] - AuthenticationCache Initialized with 1000 Max Entries, 300 seconds idle time, 600 seconds time to live and 3 concurrency level
17 Apr 14:57:26 CONFIG [geoserver.security] - AuthenticationCache Eviction Task created to run every 600 seconds
17 Apr 14:59:44 CONFIG [geoserver.logging] - Log4j 2 configuration set to DEFAULT_LOGGING.xml
17 Apr 14:59:46 CONFIG [gwc.config] - Will look for 'geowebcache.xml' in directory '/opt/geoserver_data/gwc'.
17 Apr 14:59:46 WARN   [config.XMLConfiguration] - GWC configuration validation error: cvc-elt.1.a: Cannot find the declaration of element 'gwcConfiguration'.
17 Apr 14:59:46 WARN   [config.XMLConfiguration] - Will try to use configuration anyway. Please check the order of declared elements against the schema.
17 Apr 14:59:46 CONFIG [org.geoserver] - GeoServer configuration lock is enabled
17 Apr 14:59:46 CONFIG [org.geoserver] - Loading catalog /opt/geoserver_data
17 Apr 14:59:46 CONFIG [org.geoserver] - Loaded style 'pophatch'
17 Apr 14:59:46 CONFIG [org.geoserver] - Loaded style 'simple_roads'
17 Apr 14:59:46 CONFIG [org.geoserver] - Loaded style 'burg'
17 Apr 14:59:46 CONFIG [org.geoserver] - Loaded style 'poi'
17 Apr 14:59:46 CONFIG [org.geoserver] - Loaded style 'giant_polygon'
17 Apr 14:59:46 CONFIG [org.geoserver] - Loaded style 'population'
17 Apr 14:59:46 CONFIG [org.geoserver] - Loaded style 'polygon'
17 Apr 14:59:46 CONFIG [org.geoserver] - Loaded style 'raster'
17 Apr 14:59:46 CONFIG [org.geoserver] - Loaded style 'simple_streams'
17 Apr 14:59:46 CONFIG [org.geoserver] - Loaded style 'tiger_roads'
17 Apr 14:59:46 CONFIG [org.geoserver] - Loaded style 'restricted'
17 Apr 14:59:46 CONFIG [org.geoserver] - Loaded style 'dem'
17 Apr 14:59:46 CONFIG [org.geoserver] - Loaded style 'point'
17 Apr 14:59:46 CONFIG [org.geoserver] - Loaded style 'poly_landmarks'
17 Apr 14:59:46 CONFIG [org.geoserver] - Loaded style 'generic'
17 Apr 14:59:46 CONFIG [org.geoserver] - Loaded style 'capitals'
17 Apr 14:59:46 CONFIG [org.geoserver] - Loaded style 'green'
17 Apr 14:59:46 CONFIG [org.geoserver] - Loaded style 'grass'
17 Apr 14:59:46 CONFIG [org.geoserver] - Loaded style 'rain'
17 Apr 14:59:46 CONFIG [org.geoserver] - Loaded style 'line'
17 Apr 14:59:46 CONFIG [org.geoserver] - Loaded style 'cite_lakes'
17 Apr 14:59:46 CONFIG [org.geoserver] - Loaded default workspace 'ne'
17 Apr 14:59:46 CONFIG [org.geoserver] - Loaded workspace 'cite'
17 Apr 14:59:46 CONFIG [org.geoserver] - Loaded workspace 'it.geosolutions'
17 Apr 14:59:46 CONFIG [org.geoserver] - Loaded workspace 'tiger'
17 Apr 14:59:46 CONFIG [org.geoserver] - Loaded workspace 'nurc'
17 Apr 14:59:46 CONFIG [org.geoserver] - Loaded workspace 'PoMS'
17 Apr 14:59:46 CONFIG [org.geoserver] - Loaded workspace 'PDE_Postgres'
17 Apr 14:59:46 CONFIG [org.geoserver] - Loaded workspace 'sf'
17 Apr 14:59:46 CONFIG [org.geoserver] - Loaded workspace 'sde'
17 Apr 14:59:46 CONFIG [org.geoserver] - Loaded workspace 'topp'
17 Apr 14:59:46 CONFIG [org.geoserver] - Loaded workspace 'ne'
17 Apr 14:59:46 CONFIG [org.geoserver] - Loaded style 'coastline'
17 Apr 14:59:46 CONFIG [org.geoserver] - Loaded style 'populated_places'
17 Apr 14:59:46 CONFIG [org.geoserver] - Loaded style 'boundary_lines'
17 Apr 14:59:46 CONFIG [org.geoserver] - Loaded style 'disputed'
17 Apr 14:59:46 CONFIG [org.geoserver] - Loaded style 'countries_mapcolor9'
17 Apr 14:59:46 CONFIG [org.geoserver] - Loaded style 'countries'
17 Apr 14:59:46 CONFIG [org.geoserver] - Loaded coverage store 'mosaic', enabled
17 Apr 14:59:47 CONFIG [org.geoserver] - Loaded coverage 'mosaic', enabled
17 Apr 14:59:47 CONFIG [org.geoserver] - Loaded layer 'mosaic'
17 Apr 14:59:47 CONFIG [org.geoserver] - Loaded coverage store 'img_sample2', enabled
17 Apr 14:59:47 CONFIG [org.geoserver] - Loaded coverage 'Pk50095', enabled
17 Apr 14:59:47 CONFIG [org.geoserver] - Loaded layer 'Pk50095'
17 Apr 14:59:47 CONFIG [org.geoserver] - Loaded coverage store 'arcGridSample', enabled
17 Apr 14:59:47 CONFIG [org.geoserver] - Loaded coverage 'Arc_Sample', enabled
17 Apr 14:59:47 CONFIG [org.geoserver] - Loaded layer 'Arc_Sample'
17 Apr 14:59:47 CONFIG [org.geoserver] - Loaded coverage store 'worldImageSample', enabled
17 Apr 14:59:47 CONFIG [org.geoserver] - Loaded coverage 'Img_Sample', enabled
17 Apr 14:59:47 CONFIG [org.geoserver] - Loaded layer 'Img_Sample'
17 Apr 14:59:47 CONFIG [org.geoserver] - Loaded data store 'nyc', enabled
17 Apr 14:59:47 CONFIG [org.geoserver] - Loaded feature type 'poly_landmarks', enabled
17 Apr 14:59:47 CONFIG [org.geoserver] - Loaded layer 'poly_landmarks'
17 Apr 14:59:47 CONFIG [org.geoserver] - Loaded feature type 'giant_polygon', enabled
17 Apr 14:59:47 CONFIG [org.geoserver] - Loaded layer 'giant_polygon'
17 Apr 14:59:47 CONFIG [org.geoserver] - Loaded feature type 'poi', enabled
17 Apr 14:59:47 CONFIG [org.geoserver] - Loaded layer 'poi'
17 Apr 14:59:47 CONFIG [org.geoserver] - Loaded feature type 'tiger_roads', enabled
17 Apr 14:59:47 CONFIG [org.geoserver] - Loaded layer 'tiger_roads'
17 Apr 14:59:48 WARN   [org.geoserver] - Failed to load data store 'PDE_tables'
com.thoughtworks.xstream.converters.ConversionException: 
---- Debugging information ----
cause-exception     : org.jasypt.exceptions.EncryptionOperationNotPossibleException
cause-message       : null
class               : org.geoserver.catalog.impl.DataStoreInfoImpl
required-type       : org.geoserver.catalog.impl.DataStoreInfoImpl
converter-type      : org.geoserver.config.util.XStreamPersister$StoreInfoConverter
line number         : 33
version             : 2.24.1
-------------------------------
	at com.thoughtworks.xstream.core.TreeUnmarshaller.convert(TreeUnmarshaller.java:81)
	at com.thoughtworks.xstream.core.TreeUnmarshaller.convertAnother(TreeUnmarshaller.java:68)
	at com.thoughtworks.xstream.core.TreeUnmarshaller.convertAnother(TreeUnmarshaller.java:52)
	at com.thoughtworks.xstream.core.TreeUnmarshaller.start(TreeUnmarshaller.java:136)
	at com.thoughtworks.xstream.core.AbstractTreeMarshallingStrategy.unmarshal(AbstractTreeMarshallingStrategy.java:32)
	at com.thoughtworks.xstream.XStream.unmarshal(XStream.java:1464)
	at com.thoughtworks.xstream.XStream.unmarshal(XStream.java:1441)
	at com.thoughtworks.xstream.XStream.fromXML(XStream.java:1330)
	at org.geoserver.config.util.XStreamPersister.load(XStreamPersister.java:721)
	at org.geoserver.config.GeoServerLoader.depersist(GeoServerLoader.java:1138)
	at org.geoserver.config.GeoServerLoader.loadDataStore(GeoServerLoader.java:820)
	at org.geoserver.config.GeoServerLoader.readCatalog(GeoServerLoader.java:664)
	at org.geoserver.config.GeoServerLoader.readCatalog(GeoServerLoader.java:479)
	at org.geoserver.config.DefaultGeoServerLoader.loadCatalog(DefaultGeoServerLoader.java:37)
	at org.geoserver.config.GeoServerLoader.postProcessBeforeInitializationCatalog(GeoServerLoader.java:329)
	at org.geoserver.config.GeoServerLoader.postProcessBeforeInitialization(GeoServerLoader.java:280)
	at org.geoserver.config.GeoServerLoaderProxy.postProcessBeforeInitialization(GeoServerLoaderProxy.java:61)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyBeanPostProcessorsBeforeInitialization(AbstractAutowireCapableBeanFactory.java:440)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1796)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:620)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:330)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:113)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveConstructorArguments(ConstructorResolver.java:707)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:198)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1372)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1222)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:582)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:322)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:330)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:113)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveConstructorArguments(ConstructorResolver.java:707)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:198)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1372)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1222)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:582)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:330)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:113)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveConstructorArguments(ConstructorResolver.java:707)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:198)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1372)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1222)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:582)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:330)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:113)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveConstructorArguments(ConstructorResolver.java:707)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:198)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1372)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1222)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:582)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.getBeansOfType(DefaultListableBeanFactory.java:673)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.getBeansOfType(DefaultListableBeanFactory.java:661)
	at org.springframework.context.support.AbstractApplicationContext.getBeansOfType(AbstractApplicationContext.java:1302)
	at org.geowebcache.GeoWebCacheExtensions.getBeansNamesOrderedByPriority(GeoWebCacheExtensions.java:158)
	at org.geowebcache.GeoWebCacheExtensions.extensions(GeoWebCacheExtensions.java:103)
	at org.geowebcache.config.XMLConfiguration.getConfiguredXStreamWithContext(XMLConfiguration.java:455)
	at org.geowebcache.config.XMLConfiguration.getConfiguredXStreamWithContext(XMLConfiguration.java:361)
	at org.geowebcache.config.XMLConfiguration.loadConfiguration(XMLConfiguration.java:327)
	at org.geowebcache.config.XMLConfiguration.loadConfiguration(XMLConfiguration.java:316)
	at org.geowebcache.config.XMLConfiguration.afterPropertiesSet(XMLConfiguration.java:841)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1863)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1800)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:620)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:955)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:920)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:583)
	at org.springframework.web.context.ContextLoader.configureAndRefreshWebApplicationContext(ContextLoader.java:399)
	at org.springframework.web.context.ContextLoader.initWebApplicationContext(ContextLoader.java:278)
	at org.springframework.web.context.ContextLoaderListener.contextInitialized(ContextLoaderListener.java:103)
	at org.geoserver.platform.GeoServerContextLoaderListener.contextInitialized(GeoServerContextLoaderListener.java:22)
	at org.apache.catalina.core.StandardContext.listenerStart(StandardContext.java:4462)
	at org.apache.catalina.core.StandardContext.startInternal(StandardContext.java:4914)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:171)
	at org.apache.catalina.core.ContainerBase.addChildInternal(ContainerBase.java:683)
	at org.apache.catalina.core.ContainerBase.addChild(ContainerBase.java:658)
	at org.apache.catalina.core.StandardHost.addChild(StandardHost.java:661)
	at org.apache.catalina.startup.HostConfig.deployDirectory(HostConfig.java:1184)
	at org.apache.catalina.startup.HostConfig$DeployDirectory.run(HostConfig.java:1932)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at org.apache.tomcat.util.threads.InlineExecutorService.execute(InlineExecutorService.java:75)
	at java.base/java.util.concurrent.AbstractExecutorService.submit(AbstractExecutorService.java:118)
	at org.apache.catalina.startup.HostConfig.deployDirectories(HostConfig.java:1094)
	at org.apache.catalina.startup.HostConfig.deployApps(HostConfig.java:476)
	at org.apache.catalina.startup.HostConfig.start(HostConfig.java:1617)
	at org.apache.catalina.startup.HostConfig.lifecycleEvent(HostConfig.java:318)
	at org.apache.catalina.util.LifecycleBase.fireLifecycleEvent(LifecycleBase.java:114)
	at org.apache.catalina.util.LifecycleBase.setStateInternal(LifecycleBase.java:402)
	at org.apache.catalina.util.LifecycleBase.setState(LifecycleBase.java:345)
	at org.apache.catalina.core.ContainerBase.startInternal(ContainerBase.java:893)
	at org.apache.catalina.core.StandardHost.startInternal(StandardHost.java:794)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:171)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1332)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1322)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at org.apache.tomcat.util.threads.InlineExecutorService.execute(InlineExecutorService.java:75)
	at java.base/java.util.concurrent.AbstractExecutorService.submit(AbstractExecutorService.java:140)
	at org.apache.catalina.core.ContainerBase.startInternal(ContainerBase.java:866)
	at org.apache.catalina.core.StandardEngine.startInternal(StandardEngine.java:248)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:171)
	at org.apache.catalina.core.StandardService.startInternal(StandardService.java:433)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:171)
	at org.apache.catalina.core.StandardServer.startInternal(StandardServer.java:921)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:171)
	at org.apache.catalina.startup.Catalina.start(Catalina.java:772)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.apache.catalina.startup.Bootstrap.start(Bootstrap.java:347)
	at org.apache.catalina.startup.Bootstrap.main(Bootstrap.java:478)
Caused by: org.jasypt.exceptions.EncryptionOperationNotPossibleException
	at org.jasypt.encryption.pbe.StandardPBEByteEncryptor.decrypt(StandardPBEByteEncryptor.java:1055)
	at org.jasypt.encryption.pbe.StandardPBEStringEncryptor.decrypt(StandardPBEStringEncryptor.java:725)
	at org.geoserver.security.password.GeoServerPBEPasswordEncoder.decode(GeoServerPBEPasswordEncoder.java:176)
	at org.geoserver.security.password.ConfigurationPasswordEncryptionHelper.decode(ConfigurationPasswordEncryptionHelper.java:208)
	at org.geoserver.security.password.ConfigurationPasswordEncryptionHelper.decode(ConfigurationPasswordEncryptionHelper.java:192)
	at org.geoserver.config.util.XStreamPersister$StoreInfoConverter.doUnmarshal(XStreamPersister.java:1875)
	at com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter.unmarshal(AbstractReflectionConverter.java:277)
	at com.thoughtworks.xstream.core.TreeUnmarshaller.convert(TreeUnmarshaller.java:74)
	... 140 more
17 Apr 14:59:48 WARN   [org.geoserver] - Failed to load data store 'Scotland'
com.thoughtworks.xstream.converters.ConversionException: 
---- Debugging information ----
cause-exception     : org.jasypt.exceptions.EncryptionOperationNotPossibleException
cause-message       : null
class               : org.geoserver.catalog.impl.DataStoreInfoImpl
required-type       : org.geoserver.catalog.impl.DataStoreInfoImpl
converter-type      : org.geoserver.config.util.XStreamPersister$StoreInfoConverter
line number         : 32
version             : 2.24.1
-------------------------------
	at com.thoughtworks.xstream.core.TreeUnmarshaller.convert(TreeUnmarshaller.java:81)
	at com.thoughtworks.xstream.core.TreeUnmarshaller.convertAnother(TreeUnmarshaller.java:68)
	at com.thoughtworks.xstream.core.TreeUnmarshaller.convertAnother(TreeUnmarshaller.java:52)
	at com.thoughtworks.xstream.core.TreeUnmarshaller.start(TreeUnmarshaller.java:136)
	at com.thoughtworks.xstream.core.AbstractTreeMarshallingStrategy.unmarshal(AbstractTreeMarshallingStrategy.java:32)
	at com.thoughtworks.xstream.XStream.unmarshal(XStream.java:1464)
	at com.thoughtworks.xstream.XStream.unmarshal(XStream.java:1441)
	at com.thoughtworks.xstream.XStream.fromXML(XStream.java:1330)
	at org.geoserver.config.util.XStreamPersister.load(XStreamPersister.java:721)
	at org.geoserver.config.GeoServerLoader.depersist(GeoServerLoader.java:1138)
	at org.geoserver.config.GeoServerLoader.loadDataStore(GeoServerLoader.java:820)
	at org.geoserver.config.GeoServerLoader.readCatalog(GeoServerLoader.java:664)
	at org.geoserver.config.GeoServerLoader.readCatalog(GeoServerLoader.java:479)
	at org.geoserver.config.DefaultGeoServerLoader.loadCatalog(DefaultGeoServerLoader.java:37)
	at org.geoserver.config.GeoServerLoader.postProcessBeforeInitializationCatalog(GeoServerLoader.java:329)
	at org.geoserver.config.GeoServerLoader.postProcessBeforeInitialization(GeoServerLoader.java:280)
	at org.geoserver.config.GeoServerLoaderProxy.postProcessBeforeInitialization(GeoServerLoaderProxy.java:61)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyBeanPostProcessorsBeforeInitialization(AbstractAutowireCapableBeanFactory.java:440)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1796)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:620)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:330)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:113)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveConstructorArguments(ConstructorResolver.java:707)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:198)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1372)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1222)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:582)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:322)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:330)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:113)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveConstructorArguments(ConstructorResolver.java:707)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:198)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1372)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1222)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:582)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:330)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:113)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveConstructorArguments(ConstructorResolver.java:707)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:198)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1372)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1222)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:582)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:330)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:113)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveConstructorArguments(ConstructorResolver.java:707)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:198)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1372)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1222)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:582)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.getBeansOfType(DefaultListableBeanFactory.java:673)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.getBeansOfType(DefaultListableBeanFactory.java:661)
	at org.springframework.context.support.AbstractApplicationContext.getBeansOfType(AbstractApplicationContext.java:1302)
	at org.geowebcache.GeoWebCacheExtensions.getBeansNamesOrderedByPriority(GeoWebCacheExtensions.java:158)
	at org.geowebcache.GeoWebCacheExtensions.extensions(GeoWebCacheExtensions.java:103)
	at org.geowebcache.config.XMLConfiguration.getConfiguredXStreamWithContext(XMLConfiguration.java:455)
	at org.geowebcache.config.XMLConfiguration.getConfiguredXStreamWithContext(XMLConfiguration.java:361)
	at org.geowebcache.config.XMLConfiguration.loadConfiguration(XMLConfiguration.java:327)
	at org.geowebcache.config.XMLConfiguration.loadConfiguration(XMLConfiguration.java:316)
	at org.geowebcache.config.XMLConfiguration.afterPropertiesSet(XMLConfiguration.java:841)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1863)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1800)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:620)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:955)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:920)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:583)
	at org.springframework.web.context.ContextLoader.configureAndRefreshWebApplicationContext(ContextLoader.java:399)
	at org.springframework.web.context.ContextLoader.initWebApplicationContext(ContextLoader.java:278)
	at org.springframework.web.context.ContextLoaderListener.contextInitialized(ContextLoaderListener.java:103)
	at org.geoserver.platform.GeoServerContextLoaderListener.contextInitialized(GeoServerContextLoaderListener.java:22)
	at org.apache.catalina.core.StandardContext.listenerStart(StandardContext.java:4462)
	at org.apache.catalina.core.StandardContext.startInternal(StandardContext.java:4914)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:171)
	at org.apache.catalina.core.ContainerBase.addChildInternal(ContainerBase.java:683)
	at org.apache.catalina.core.ContainerBase.addChild(ContainerBase.java:658)
	at org.apache.catalina.core.StandardHost.addChild(StandardHost.java:661)
	at org.apache.catalina.startup.HostConfig.deployDirectory(HostConfig.java:1184)
	at org.apache.catalina.startup.HostConfig$DeployDirectory.run(HostConfig.java:1932)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at org.apache.tomcat.util.threads.InlineExecutorService.execute(InlineExecutorService.java:75)
	at java.base/java.util.concurrent.AbstractExecutorService.submit(AbstractExecutorService.java:118)
	at org.apache.catalina.startup.HostConfig.deployDirectories(HostConfig.java:1094)
	at org.apache.catalina.startup.HostConfig.deployApps(HostConfig.java:476)
	at org.apache.catalina.startup.HostConfig.start(HostConfig.java:1617)
	at org.apache.catalina.startup.HostConfig.lifecycleEvent(HostConfig.java:318)
	at org.apache.catalina.util.LifecycleBase.fireLifecycleEvent(LifecycleBase.java:114)
	at org.apache.catalina.util.LifecycleBase.setStateInternal(LifecycleBase.java:402)
	at org.apache.catalina.util.LifecycleBase.setState(LifecycleBase.java:345)
	at org.apache.catalina.core.ContainerBase.startInternal(ContainerBase.java:893)
	at org.apache.catalina.core.StandardHost.startInternal(StandardHost.java:794)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:171)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1332)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1322)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at org.apache.tomcat.util.threads.InlineExecutorService.execute(InlineExecutorService.java:75)
	at java.base/java.util.concurrent.AbstractExecutorService.submit(AbstractExecutorService.java:140)
	at org.apache.catalina.core.ContainerBase.startInternal(ContainerBase.java:866)
	at org.apache.catalina.core.StandardEngine.startInternal(StandardEngine.java:248)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:171)
	at org.apache.catalina.core.StandardService.startInternal(StandardService.java:433)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:171)
	at org.apache.catalina.core.StandardServer.startInternal(StandardServer.java:921)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:171)
	at org.apache.catalina.startup.Catalina.start(Catalina.java:772)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.apache.catalina.startup.Bootstrap.start(Bootstrap.java:347)
	at org.apache.catalina.startup.Bootstrap.main(Bootstrap.java:478)
Caused by: org.jasypt.exceptions.EncryptionOperationNotPossibleException
	at org.jasypt.encryption.pbe.StandardPBEByteEncryptor.decrypt(StandardPBEByteEncryptor.java:1055)
	at org.jasypt.encryption.pbe.StandardPBEStringEncryptor.decrypt(StandardPBEStringEncryptor.java:725)
	at org.geoserver.security.password.GeoServerPBEPasswordEncoder.decode(GeoServerPBEPasswordEncoder.java:176)
	at org.geoserver.security.password.ConfigurationPasswordEncryptionHelper.decode(ConfigurationPasswordEncryptionHelper.java:208)
	at org.geoserver.security.password.ConfigurationPasswordEncryptionHelper.decode(ConfigurationPasswordEncryptionHelper.java:192)
	at org.geoserver.config.util.XStreamPersister$StoreInfoConverter.doUnmarshal(XStreamPersister.java:1875)
	at com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter.unmarshal(AbstractReflectionConverter.java:277)
	at com.thoughtworks.xstream.core.TreeUnmarshaller.convert(TreeUnmarshaller.java:74)
	... 140 more
17 Apr 14:59:48 WARN   [org.geoserver] - Failed to load data store 'Postgres_general'
com.thoughtworks.xstream.converters.ConversionException: 
---- Debugging information ----
cause-exception     : org.jasypt.exceptions.EncryptionOperationNotPossibleException
cause-message       : null
class               : org.geoserver.catalog.impl.DataStoreInfoImpl
required-type       : org.geoserver.catalog.impl.DataStoreInfoImpl
converter-type      : org.geoserver.config.util.XStreamPersister$StoreInfoConverter
line number         : 33
version             : 2.24.1
-------------------------------
	at com.thoughtworks.xstream.core.TreeUnmarshaller.convert(TreeUnmarshaller.java:81)
	at com.thoughtworks.xstream.core.TreeUnmarshaller.convertAnother(TreeUnmarshaller.java:68)
	at com.thoughtworks.xstream.core.TreeUnmarshaller.convertAnother(TreeUnmarshaller.java:52)
	at com.thoughtworks.xstream.core.TreeUnmarshaller.start(TreeUnmarshaller.java:136)
	at com.thoughtworks.xstream.core.AbstractTreeMarshallingStrategy.unmarshal(AbstractTreeMarshallingStrategy.java:32)
	at com.thoughtworks.xstream.XStream.unmarshal(XStream.java:1464)
	at com.thoughtworks.xstream.XStream.unmarshal(XStream.java:1441)
	at com.thoughtworks.xstream.XStream.fromXML(XStream.java:1330)
	at org.geoserver.config.util.XStreamPersister.load(XStreamPersister.java:721)
	at org.geoserver.config.GeoServerLoader.depersist(GeoServerLoader.java:1138)
	at org.geoserver.config.GeoServerLoader.loadDataStore(GeoServerLoader.java:820)
	at org.geoserver.config.GeoServerLoader.readCatalog(GeoServerLoader.java:664)
	at org.geoserver.config.GeoServerLoader.readCatalog(GeoServerLoader.java:479)
	at org.geoserver.config.DefaultGeoServerLoader.loadCatalog(DefaultGeoServerLoader.java:37)
	at org.geoserver.config.GeoServerLoader.postProcessBeforeInitializationCatalog(GeoServerLoader.java:329)
	at org.geoserver.config.GeoServerLoader.postProcessBeforeInitialization(GeoServerLoader.java:280)
	at org.geoserver.config.GeoServerLoaderProxy.postProcessBeforeInitialization(GeoServerLoaderProxy.java:61)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyBeanPostProcessorsBeforeInitialization(AbstractAutowireCapableBeanFactory.java:440)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1796)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:620)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:330)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:113)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveConstructorArguments(ConstructorResolver.java:707)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:198)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1372)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1222)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:582)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:322)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:330)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:113)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveConstructorArguments(ConstructorResolver.java:707)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:198)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1372)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1222)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:582)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:330)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:113)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveConstructorArguments(ConstructorResolver.java:707)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:198)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1372)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1222)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:582)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:330)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:113)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveConstructorArguments(ConstructorResolver.java:707)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:198)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1372)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1222)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:582)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.getBeansOfType(DefaultListableBeanFactory.java:673)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.getBeansOfType(DefaultListableBeanFactory.java:661)
	at org.springframework.context.support.AbstractApplicationContext.getBeansOfType(AbstractApplicationContext.java:1302)
	at org.geowebcache.GeoWebCacheExtensions.getBeansNamesOrderedByPriority(GeoWebCacheExtensions.java:158)
	at org.geowebcache.GeoWebCacheExtensions.extensions(GeoWebCacheExtensions.java:103)
	at org.geowebcache.config.XMLConfiguration.getConfiguredXStreamWithContext(XMLConfiguration.java:455)
	at org.geowebcache.config.XMLConfiguration.getConfiguredXStreamWithContext(XMLConfiguration.java:361)
	at org.geowebcache.config.XMLConfiguration.loadConfiguration(XMLConfiguration.java:327)
	at org.geowebcache.config.XMLConfiguration.loadConfiguration(XMLConfiguration.java:316)
	at org.geowebcache.config.XMLConfiguration.afterPropertiesSet(XMLConfiguration.java:841)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1863)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1800)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:620)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:955)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:920)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:583)
	at org.springframework.web.context.ContextLoader.configureAndRefreshWebApplicationContext(ContextLoader.java:399)
	at org.springframework.web.context.ContextLoader.initWebApplicationContext(ContextLoader.java:278)
	at org.springframework.web.context.ContextLoaderListener.contextInitialized(ContextLoaderListener.java:103)
	at org.geoserver.platform.GeoServerContextLoaderListener.contextInitialized(GeoServerContextLoaderListener.java:22)
	at org.apache.catalina.core.StandardContext.listenerStart(StandardContext.java:4462)
	at org.apache.catalina.core.StandardContext.startInternal(StandardContext.java:4914)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:171)
	at org.apache.catalina.core.ContainerBase.addChildInternal(ContainerBase.java:683)
	at org.apache.catalina.core.ContainerBase.addChild(ContainerBase.java:658)
	at org.apache.catalina.core.StandardHost.addChild(StandardHost.java:661)
	at org.apache.catalina.startup.HostConfig.deployDirectory(HostConfig.java:1184)
	at org.apache.catalina.startup.HostConfig$DeployDirectory.run(HostConfig.java:1932)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at org.apache.tomcat.util.threads.InlineExecutorService.execute(InlineExecutorService.java:75)
	at java.base/java.util.concurrent.AbstractExecutorService.submit(AbstractExecutorService.java:118)
	at org.apache.catalina.startup.HostConfig.deployDirectories(HostConfig.java:1094)
	at org.apache.catalina.startup.HostConfig.deployApps(HostConfig.java:476)
	at org.apache.catalina.startup.HostConfig.start(HostConfig.java:1617)
	at org.apache.catalina.startup.HostConfig.lifecycleEvent(HostConfig.java:318)
	at org.apache.catalina.util.LifecycleBase.fireLifecycleEvent(LifecycleBase.java:114)
	at org.apache.catalina.util.LifecycleBase.setStateInternal(LifecycleBase.java:402)
	at org.apache.catalina.util.LifecycleBase.setState(LifecycleBase.java:345)
	at org.apache.catalina.core.ContainerBase.startInternal(ContainerBase.java:893)
	at org.apache.catalina.core.StandardHost.startInternal(StandardHost.java:794)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:171)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1332)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1322)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at org.apache.tomcat.util.threads.InlineExecutorService.execute(InlineExecutorService.java:75)
	at java.base/java.util.concurrent.AbstractExecutorService.submit(AbstractExecutorService.java:140)
	at org.apache.catalina.core.ContainerBase.startInternal(ContainerBase.java:866)
	at org.apache.catalina.core.StandardEngine.startInternal(StandardEngine.java:248)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:171)
	at org.apache.catalina.core.StandardService.startInternal(StandardService.java:433)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:171)
	at org.apache.catalina.core.StandardServer.startInternal(StandardServer.java:921)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:171)
	at org.apache.catalina.startup.Catalina.start(Catalina.java:772)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.apache.catalina.startup.Bootstrap.start(Bootstrap.java:347)
	at org.apache.catalina.startup.Bootstrap.main(Bootstrap.java:478)
Caused by: org.jasypt.exceptions.EncryptionOperationNotPossibleException
	at org.jasypt.encryption.pbe.StandardPBEByteEncryptor.decrypt(StandardPBEByteEncryptor.java:1055)
	at org.jasypt.encryption.pbe.StandardPBEStringEncryptor.decrypt(StandardPBEStringEncryptor.java:725)
	at org.geoserver.security.password.GeoServerPBEPasswordEncoder.decode(GeoServerPBEPasswordEncoder.java:176)
	at org.geoserver.security.password.ConfigurationPasswordEncryptionHelper.decode(ConfigurationPasswordEncryptionHelper.java:208)
	at org.geoserver.security.password.ConfigurationPasswordEncryptionHelper.decode(ConfigurationPasswordEncryptionHelper.java:192)
	at org.geoserver.config.util.XStreamPersister$StoreInfoConverter.doUnmarshal(XStreamPersister.java:1875)
	at com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter.unmarshal(AbstractReflectionConverter.java:277)
	at com.thoughtworks.xstream.core.TreeUnmarshaller.convert(TreeUnmarshaller.java:74)
	... 140 more
17 Apr 14:59:48 WARN   [org.geoserver] - Failed to load data store 'historic_scottish_landuse'
com.thoughtworks.xstream.converters.ConversionException: 
---- Debugging information ----
cause-exception     : org.jasypt.exceptions.EncryptionOperationNotPossibleException
cause-message       : null
class               : org.geoserver.catalog.impl.DataStoreInfoImpl
required-type       : org.geoserver.catalog.impl.DataStoreInfoImpl
converter-type      : org.geoserver.config.util.XStreamPersister$StoreInfoConverter
line number         : 33
version             : 2.24.1
-------------------------------
	at com.thoughtworks.xstream.core.TreeUnmarshaller.convert(TreeUnmarshaller.java:81)
	at com.thoughtworks.xstream.core.TreeUnmarshaller.convertAnother(TreeUnmarshaller.java:68)
	at com.thoughtworks.xstream.core.TreeUnmarshaller.convertAnother(TreeUnmarshaller.java:52)
	at com.thoughtworks.xstream.core.TreeUnmarshaller.start(TreeUnmarshaller.java:136)
	at com.thoughtworks.xstream.core.AbstractTreeMarshallingStrategy.unmarshal(AbstractTreeMarshallingStrategy.java:32)
	at com.thoughtworks.xstream.XStream.unmarshal(XStream.java:1464)
	at com.thoughtworks.xstream.XStream.unmarshal(XStream.java:1441)
	at com.thoughtworks.xstream.XStream.fromXML(XStream.java:1330)
	at org.geoserver.config.util.XStreamPersister.load(XStreamPersister.java:721)
	at org.geoserver.config.GeoServerLoader.depersist(GeoServerLoader.java:1138)
	at org.geoserver.config.GeoServerLoader.loadDataStore(GeoServerLoader.java:820)
	at org.geoserver.config.GeoServerLoader.readCatalog(GeoServerLoader.java:664)
	at org.geoserver.config.GeoServerLoader.readCatalog(GeoServerLoader.java:479)
	at org.geoserver.config.DefaultGeoServerLoader.loadCatalog(DefaultGeoServerLoader.java:37)
	at org.geoserver.config.GeoServerLoader.postProcessBeforeInitializationCatalog(GeoServerLoader.java:329)
	at org.geoserver.config.GeoServerLoader.postProcessBeforeInitialization(GeoServerLoader.java:280)
	at org.geoserver.config.GeoServerLoaderProxy.postProcessBeforeInitialization(GeoServerLoaderProxy.java:61)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyBeanPostProcessorsBeforeInitialization(AbstractAutowireCapableBeanFactory.java:440)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1796)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:620)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:330)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:113)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveConstructorArguments(ConstructorResolver.java:707)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:198)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1372)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1222)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:582)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:322)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:330)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:113)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveConstructorArguments(ConstructorResolver.java:707)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:198)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1372)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1222)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:582)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:330)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:113)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveConstructorArguments(ConstructorResolver.java:707)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:198)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1372)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1222)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:582)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:330)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:113)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveConstructorArguments(ConstructorResolver.java:707)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:198)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1372)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1222)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:582)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.getBeansOfType(DefaultListableBeanFactory.java:673)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.getBeansOfType(DefaultListableBeanFactory.java:661)
	at org.springframework.context.support.AbstractApplicationContext.getBeansOfType(AbstractApplicationContext.java:1302)
	at org.geowebcache.GeoWebCacheExtensions.getBeansNamesOrderedByPriority(GeoWebCacheExtensions.java:158)
	at org.geowebcache.GeoWebCacheExtensions.extensions(GeoWebCacheExtensions.java:103)
	at org.geowebcache.config.XMLConfiguration.getConfiguredXStreamWithContext(XMLConfiguration.java:455)
	at org.geowebcache.config.XMLConfiguration.getConfiguredXStreamWithContext(XMLConfiguration.java:361)
	at org.geowebcache.config.XMLConfiguration.loadConfiguration(XMLConfiguration.java:327)
	at org.geowebcache.config.XMLConfiguration.loadConfiguration(XMLConfiguration.java:316)
	at org.geowebcache.config.XMLConfiguration.afterPropertiesSet(XMLConfiguration.java:841)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1863)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1800)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:620)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:955)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:920)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:583)
	at org.springframework.web.context.ContextLoader.configureAndRefreshWebApplicationContext(ContextLoader.java:399)
	at org.springframework.web.context.ContextLoader.initWebApplicationContext(ContextLoader.java:278)
	at org.springframework.web.context.ContextLoaderListener.contextInitialized(ContextLoaderListener.java:103)
	at org.geoserver.platform.GeoServerContextLoaderListener.contextInitialized(GeoServerContextLoaderListener.java:22)
	at org.apache.catalina.core.StandardContext.listenerStart(StandardContext.java:4462)
	at org.apache.catalina.core.StandardContext.startInternal(StandardContext.java:4914)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:171)
	at org.apache.catalina.core.ContainerBase.addChildInternal(ContainerBase.java:683)
	at org.apache.catalina.core.ContainerBase.addChild(ContainerBase.java:658)
	at org.apache.catalina.core.StandardHost.addChild(StandardHost.java:661)
	at org.apache.catalina.startup.HostConfig.deployDirectory(HostConfig.java:1184)
	at org.apache.catalina.startup.HostConfig$DeployDirectory.run(HostConfig.java:1932)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at org.apache.tomcat.util.threads.InlineExecutorService.execute(InlineExecutorService.java:75)
	at java.base/java.util.concurrent.AbstractExecutorService.submit(AbstractExecutorService.java:118)
	at org.apache.catalina.startup.HostConfig.deployDirectories(HostConfig.java:1094)
	at org.apache.catalina.startup.HostConfig.deployApps(HostConfig.java:476)
	at org.apache.catalina.startup.HostConfig.start(HostConfig.java:1617)
	at org.apache.catalina.startup.HostConfig.lifecycleEvent(HostConfig.java:318)
	at org.apache.catalina.util.LifecycleBase.fireLifecycleEvent(LifecycleBase.java:114)
	at org.apache.catalina.util.LifecycleBase.setStateInternal(LifecycleBase.java:402)
	at org.apache.catalina.util.LifecycleBase.setState(LifecycleBase.java:345)
	at org.apache.catalina.core.ContainerBase.startInternal(ContainerBase.java:893)
	at org.apache.catalina.core.StandardHost.startInternal(StandardHost.java:794)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:171)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1332)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1322)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at org.apache.tomcat.util.threads.InlineExecutorService.execute(InlineExecutorService.java:75)
	at java.base/java.util.concurrent.AbstractExecutorService.submit(AbstractExecutorService.java:140)
	at org.apache.catalina.core.ContainerBase.startInternal(ContainerBase.java:866)
	at org.apache.catalina.core.StandardEngine.startInternal(StandardEngine.java:248)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:171)
	at org.apache.catalina.core.StandardService.startInternal(StandardService.java:433)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:171)
	at org.apache.catalina.core.StandardServer.startInternal(StandardServer.java:921)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:171)
	at org.apache.catalina.startup.Catalina.start(Catalina.java:772)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.apache.catalina.startup.Bootstrap.start(Bootstrap.java:347)
	at org.apache.catalina.startup.Bootstrap.main(Bootstrap.java:478)
Caused by: org.jasypt.exceptions.EncryptionOperationNotPossibleException
	at org.jasypt.encryption.pbe.StandardPBEByteEncryptor.decrypt(StandardPBEByteEncryptor.java:1055)
	at org.jasypt.encryption.pbe.StandardPBEStringEncryptor.decrypt(StandardPBEStringEncryptor.java:725)
	at org.geoserver.security.password.GeoServerPBEPasswordEncoder.decode(GeoServerPBEPasswordEncoder.java:176)
	at org.geoserver.security.password.ConfigurationPasswordEncryptionHelper.decode(ConfigurationPasswordEncryptionHelper.java:208)
	at org.geoserver.security.password.ConfigurationPasswordEncryptionHelper.decode(ConfigurationPasswordEncryptionHelper.java:192)
	at org.geoserver.config.util.XStreamPersister$StoreInfoConverter.doUnmarshal(XStreamPersister.java:1875)
	at com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter.unmarshal(AbstractReflectionConverter.java:277)
	at com.thoughtworks.xstream.core.TreeUnmarshaller.convert(TreeUnmarshaller.java:74)
	... 140 more
17 Apr 14:59:48 WARN   [geoserver.security] - Could not find factory for store : DataStoreInfoImpl[mysql-stg]. Unable to encrypt connection parameters.
17 Apr 14:59:48 CONFIG [org.geoserver] - Loaded data store 'mysql-stg', enabled
17 Apr 14:59:48 CONFIG [org.geoserver] - Loaded feature type 'vw_pomsapp_place', enabled
17 Apr 14:59:48 CONFIG [org.geoserver] - Loaded layer 'vw_pomsapp_place'
17 Apr 14:59:48 CONFIG [org.geoserver] - Loaded data store 'sf', enabled
17 Apr 14:59:48 CONFIG [org.geoserver] - Loaded feature type 'restricted', enabled
17 Apr 14:59:48 CONFIG [org.geoserver] - Loaded layer 'restricted'
17 Apr 14:59:48 CONFIG [org.geoserver] - Loaded feature type 'bugsites', enabled
17 Apr 14:59:48 CONFIG [org.geoserver] - Loaded layer 'bugsites'
17 Apr 14:59:48 CONFIG [org.geoserver] - Loaded feature type 'streams', enabled
17 Apr 14:59:48 CONFIG [org.geoserver] - Loaded layer 'streams'
17 Apr 14:59:48 CONFIG [org.geoserver] - Loaded feature type 'archsites', enabled
17 Apr 14:59:48 CONFIG [org.geoserver] - Loaded layer 'archsites'
17 Apr 14:59:48 CONFIG [org.geoserver] - Loaded feature type 'roads', enabled
17 Apr 14:59:48 CONFIG [org.geoserver] - Loaded layer 'roads'
17 Apr 14:59:48 CONFIG [org.geoserver] - Loaded coverage store 'sfdem', enabled
17 Apr 14:59:48 CONFIG [org.geoserver] - Loaded coverage 'sfdem', enabled
17 Apr 14:59:48 CONFIG [org.geoserver] - Loaded layer 'sfdem'
17 Apr 14:59:48 CONFIG [org.geoserver] - Loaded data store 'taz_shapes', enabled
17 Apr 14:59:48 CONFIG [org.geoserver] - Loaded feature type 'tasmania_water_bodies', enabled
17 Apr 14:59:48 CONFIG [org.geoserver] - Loaded layer 'tasmania_water_bodies'
17 Apr 14:59:48 CONFIG [org.geoserver] - Loaded feature type 'tasmania_cities', enabled
17 Apr 14:59:48 CONFIG [org.geoserver] - Loaded layer 'tasmania_cities'
17 Apr 14:59:48 CONFIG [org.geoserver] - Loaded feature type 'tasmania_state_boundaries', enabled
17 Apr 14:59:48 CONFIG [org.geoserver] - Loaded layer 'tasmania_state_boundaries'
17 Apr 14:59:48 CONFIG [org.geoserver] - Loaded feature type 'tasmania_roads', enabled
17 Apr 14:59:48 CONFIG [org.geoserver] - Loaded layer 'tasmania_roads'
17 Apr 14:59:48 CONFIG [org.geoserver] - Loaded data store 'states_shapefile', enabled
17 Apr 14:59:48 CONFIG [org.geoserver] - Loaded feature type 'states', enabled
17 Apr 14:59:48 CONFIG [org.geoserver] - Loaded layer 'states'
17 Apr 14:59:48 CONFIG [org.geoserver] - Loaded data store 'NaturalEarth', enabled
17 Apr 14:59:48 CONFIG [org.geoserver] - Loaded feature type 'disputed_areas', enabled
17 Apr 14:59:48 CONFIG [org.geoserver] - Loaded layer 'disputed_areas'
17 Apr 14:59:48 CONFIG [org.geoserver] - Loaded feature type 'boundary_lines', enabled
17 Apr 14:59:48 CONFIG [org.geoserver] - Loaded layer 'boundary_lines'
17 Apr 14:59:48 CONFIG [org.geoserver] - Loaded feature type 'coastlines', enabled
17 Apr 14:59:48 CONFIG [org.geoserver] - Loaded layer 'coastlines'
17 Apr 14:59:48 CONFIG [org.geoserver] - Loaded feature type 'populated_places', enabled
17 Apr 14:59:48 CONFIG [org.geoserver] - Loaded layer 'populated_places'
17 Apr 14:59:48 CONFIG [org.geoserver] - Loaded feature type 'countries', enabled
17 Apr 14:59:48 CONFIG [org.geoserver] - Loaded layer 'countries'
17 Apr 14:59:48 CONFIG [org.geoserver] - Loaded layer group 'world'
17 Apr 14:59:48 CONFIG [org.geoserver] - Loaded layer group 'tiger-ny'
17 Apr 14:59:48 CONFIG [org.geoserver] - Loaded layer group 'aster_blend_test'
17 Apr 14:59:48 CONFIG [org.geoserver] - Loaded layer group 'world_simple'
17 Apr 14:59:48 CONFIG [org.geoserver] - Loaded layer group 'PDE_style_test'
17 Apr 14:59:48 CONFIG [org.geoserver] - Loaded layer group 'County_label'
17 Apr 14:59:48 CONFIG [org.geoserver] - Loaded layer group 'PDE_rivers'
17 Apr 14:59:48 CONFIG [org.geoserver] - Loaded layer group 'PDE_simple_backdrop'
17 Apr 14:59:48 CONFIG [org.geoserver] - Loaded layer group 'spearfish'
17 Apr 14:59:48 CONFIG [org.geoserver] - Loaded layer group 'koro_group'
17 Apr 14:59:48 CONFIG [org.geoserver] - Loaded layer group 'citywitness_finals'
17 Apr 14:59:48 CONFIG [org.geoserver] - Loaded layer group 'PDE_National_Borders'
17 Apr 14:59:48 CONFIG [org.geoserver] - Loaded layer group 'Scrapbook test'
17 Apr 14:59:48 CONFIG [org.geoserver] - Loaded layer group 'TMS_Style_CW'
17 Apr 14:59:48 CONFIG [org.geoserver] - Loaded layer group 'PDE_Rivers_2'
17 Apr 14:59:48 CONFIG [org.geoserver] - Loaded layer group 'tasmania'
17 Apr 14:59:48 CONFIG [org.geoserver] - Read catalog in 2.381 s
17 Apr 14:59:48 CONFIG [config.XMLConfiguration] - Initializing GridSets from gwc
17 Apr 14:59:48 CONFIG [config.XMLConfiguration] - Initializing layers from gwc
17 Apr 14:59:48 CONFIG [gwc.layer] - Initializing GWC configuration based on GeoServer's Catalog
17 Apr 14:59:48 CONFIG [gwc.layer] - GeoServer TileLayer store base directory is: gwc-layers
17 Apr 14:59:48 CONFIG [gwc.layer] - Loading tile layers from gwc-layers
17 Apr 14:59:48 CONFIG [gwc.layer] - Loaded 28 tile layers in 26.70 ms
17 Apr 14:59:48 CONFIG [storage.BlobStoreAggregator] - BlobStoreConfiguration gwc contained no blob store infos.
17 Apr 14:59:48 CONFIG [storage.DefaultStorageFinder] - Found system environment variableGEOSERVER_DATA_DIR set to /opt/geoserver_data/, using it as the default prefix.
17 Apr 14:59:48 CONFIG [geowebcache.GeoWebCacheDispatcher] - Invoked setServletPrefix(gwc)
17 Apr 14:59:48 CONFIG [wms.WMSService] - Will NOT recombine tiles for non-tiling clients.
17 Apr 14:59:48 CONFIG [wms.WMSService] - Will proxy requests to backend that are not getmap or getcapabilities.
17 Apr 14:59:49 CONFIG [org.geoserver] - Loaded service 'WMTSInfoImpl--288a2c05:1786a499f45:-7ff2', enabled
17 Apr 14:59:49 CONFIG [org.geoserver] - Loaded service 'wcs', enabled
17 Apr 14:59:49 CONFIG [org.geoserver] - Loaded service 'wfs', enabled
17 Apr 14:59:49 CONFIG [org.geoserver] - Loaded service 'wms', enabled
17 Apr 14:59:49 CONFIG [org.geoserver] - Loaded service 'WCSInfoImpl--19e1b629:13c90fa1a61:-7461', enabled
17 Apr 14:59:49 CONFIG [org.geoserver] - Loaded service 'WFSInfoImpl--19e1b629:13c90fa1a61:-7460', enabled
17 Apr 14:59:49 CONFIG [org.geoserver] - Loaded service 'WMSInfoImpl--19e1b629:13c90fa1a61:-745f', enabled
17 Apr 14:59:49 CONFIG [org.geoserver] - Loaded service 'WMTSInfoImpl-1c443fee:182c0f3f209:-7f98', enabled
17 Apr 14:59:49 CONFIG [org.geoserver] - Loaded service 'WCSInfoImpl-1c443fee:182c0f3f209:-7f96', enabled
17 Apr 14:59:49 CONFIG [org.geoserver] - Loaded service 'WFSInfoImpl-1c443fee:182c0f3f209:-7f97', enabled
17 Apr 14:59:49 CONFIG [org.geoserver] - Loaded service 'WMSInfoImpl-1c443fee:182c0f3f209:-7f99', enabled
17 Apr 14:59:49 CONFIG [gwc.config] - Initializing GeoServer specific GWC configuration from gwc-gs.xml
17 Apr 14:59:49 CONFIG [gwc.config] - Will look for 'geowebcache-diskquota.xml' in directory '/opt/geoserver_data/gwc'.
17 Apr 14:59:49 CONFIG [gwc.config] - Will look for 'geowebcache-diskquota-jdbc.xml' in directory '/opt/geoserver_data/gwc'.
17 Apr 14:59:49 CONFIG [diskquota.ConfigLoader] - DiskQuota configuration is not readable: gwc/geowebcache-diskquota.xml
17 Apr 14:59:49 CONFIG [diskquota.ConfigLoader] - DiskQuota configuration is not readable: gwc/geowebcache-diskquota.xml
17 Apr 14:59:53 CONFIG [diskquota.ConfigLoader] - DiskQuota configuration is not readable: gwc/geowebcache-diskquota.xml
17 Apr 14:59:53 CONFIG [diskquota.DiskQuotaMonitor] - Setting up disk quota periodic enforcement task
17 Apr 14:59:53 CONFIG [diskquota.DiskQuotaMonitor] - 0 layers configured with their own quotas. 
17 Apr 14:59:53 CONFIG [diskquota.DiskQuotaMonitor] - 28 layers attached to global quota 500.0 MB
17 Apr 14:59:53 CONFIG [diskquota.DiskQuotaMonitor] - Disk quota periodic enforcement task set up every 10 SECONDS
17 Apr 14:59:53 CONFIG [geoserver.security] - Start reloading user/groups for service named default
17 Apr 14:59:53 CONFIG [geoserver.security] - Reloading user/groups successful for service named default
17 Apr 14:59:53 CONFIG [geoserver.security] - AuthenticationCache Initialized with 1000 Max Entries, 300 seconds idle time, 600 seconds time to live and 3 concurrency level
17 Apr 14:59:53 CONFIG [geoserver.security] - AuthenticationCache Eviction Task created to run every 600 seconds
19 Apr 08:39:36 CONFIG [gwc.layer] - GeoServer TileLayer store base directory is: gwc-layers
19 Apr 08:39:36 CONFIG [gwc.layer] - Loading tile layers from gwc-layers
19 Apr 08:39:36 CONFIG [gwc.layer] - Loaded 28 tile layers in 19.83 ms
19 Apr 08:39:36 WARN   [support.DisposableBeanAdapter] - Custom destroy method 'destroy' on bean with name 'gwcMemoryBlobStore' threw an exception: java.util.concurrent.RejectedExecutionException: Task java.util.concurrent.FutureTask@4774335b[Not completed, task = org.geowebcache.storage.blobstore.memory.MemoryBlobStore$BlobStoreTask@129d8d45] rejected from java.util.concurrent.ThreadPoolExecutor@4033f0f7[Terminated, pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 1]
19 Apr 08:39:36 INFO   [geoserver.logging] - Beginning GeoServer cleanup sequence
19 Apr 09:13:56 CONFIG [geoserver.logging] - Log4j 2 configuration set to DEFAULT_LOGGING.xml
19 Apr 09:13:59 CONFIG [gwc.config] - Will look for 'geowebcache.xml' in directory '/opt/geoserver_data/gwc'.
19 Apr 09:13:59 WARN   [config.XMLConfiguration] - GWC configuration validation error: cvc-elt.1.a: Cannot find the declaration of element 'gwcConfiguration'.
19 Apr 09:13:59 WARN   [config.XMLConfiguration] - Will try to use configuration anyway. Please check the order of declared elements against the schema.
19 Apr 09:13:59 CONFIG [org.geoserver] - GeoServer configuration lock is enabled
19 Apr 09:13:59 CONFIG [org.geoserver] - Loading catalog /opt/geoserver_data
19 Apr 09:13:59 CONFIG [org.geoserver] - Loaded style 'simple_roads'
19 Apr 09:13:59 CONFIG [org.geoserver] - Loaded style 'pophatch'
19 Apr 09:13:59 CONFIG [org.geoserver] - Loaded style 'giant_polygon'
19 Apr 09:13:59 CONFIG [org.geoserver] - Loaded style 'burg'
19 Apr 09:13:59 CONFIG [org.geoserver] - Loaded style 'poi'
19 Apr 09:13:59 CONFIG [org.geoserver] - Loaded style 'population'
19 Apr 09:13:59 CONFIG [org.geoserver] - Loaded style 'polygon'
19 Apr 09:13:59 CONFIG [org.geoserver] - Loaded style 'simple_streams'
19 Apr 09:13:59 CONFIG [org.geoserver] - Loaded style 'raster'
19 Apr 09:13:59 CONFIG [org.geoserver] - Loaded style 'tiger_roads'
19 Apr 09:13:59 CONFIG [org.geoserver] - Loaded style 'point'
19 Apr 09:13:59 CONFIG [org.geoserver] - Loaded style 'restricted'
19 Apr 09:13:59 CONFIG [org.geoserver] - Loaded style 'dem'
19 Apr 09:13:59 CONFIG [org.geoserver] - Loaded style 'poly_landmarks'
19 Apr 09:13:59 CONFIG [org.geoserver] - Loaded style 'grass'
19 Apr 09:13:59 CONFIG [org.geoserver] - Loaded style 'green'
19 Apr 09:13:59 CONFIG [org.geoserver] - Loaded style 'generic'
19 Apr 09:13:59 CONFIG [org.geoserver] - Loaded style 'capitals'
19 Apr 09:13:59 CONFIG [org.geoserver] - Loaded style 'line'
19 Apr 09:13:59 CONFIG [org.geoserver] - Loaded style 'cite_lakes'
19 Apr 09:13:59 CONFIG [org.geoserver] - Loaded style 'rain'
19 Apr 09:13:59 CONFIG [org.geoserver] - Loaded default workspace 'ne'
19 Apr 09:13:59 CONFIG [org.geoserver] - Loaded workspace 'it.geosolutions'
19 Apr 09:13:59 CONFIG [org.geoserver] - Loaded workspace 'tiger'
19 Apr 09:13:59 CONFIG [org.geoserver] - Loaded workspace 'cite'
19 Apr 09:13:59 CONFIG [org.geoserver] - Loaded workspace 'nurc'
19 Apr 09:13:59 CONFIG [org.geoserver] - Loaded workspace 'PoMS'
19 Apr 09:13:59 CONFIG [org.geoserver] - Loaded workspace 'sf'
19 Apr 09:13:59 CONFIG [org.geoserver] - Loaded workspace 'PDE_Postgres'
19 Apr 09:13:59 CONFIG [org.geoserver] - Loaded workspace 'sde'
19 Apr 09:13:59 CONFIG [org.geoserver] - Loaded workspace 'topp'
19 Apr 09:13:59 CONFIG [org.geoserver] - Loaded workspace 'ne'
19 Apr 09:13:59 CONFIG [org.geoserver] - Loaded style 'populated_places'
19 Apr 09:13:59 CONFIG [org.geoserver] - Loaded style 'coastline'
19 Apr 09:13:59 CONFIG [org.geoserver] - Loaded style 'boundary_lines'
19 Apr 09:13:59 CONFIG [org.geoserver] - Loaded style 'countries_mapcolor9'
19 Apr 09:13:59 CONFIG [org.geoserver] - Loaded style 'disputed'
19 Apr 09:13:59 CONFIG [org.geoserver] - Loaded style 'countries'
19 Apr 09:14:00 CONFIG [org.geoserver] - Loaded coverage store 'arcGridSample', enabled
19 Apr 09:14:01 CONFIG [org.geoserver] - Loaded coverage 'Arc_Sample', enabled
19 Apr 09:14:01 CONFIG [org.geoserver] - Loaded layer 'Arc_Sample'
19 Apr 09:14:01 CONFIG [org.geoserver] - Loaded coverage store 'mosaic', enabled
19 Apr 09:14:01 CONFIG [org.geoserver] - Loaded coverage 'mosaic', enabled
19 Apr 09:14:01 CONFIG [org.geoserver] - Loaded layer 'mosaic'
19 Apr 09:14:01 CONFIG [org.geoserver] - Loaded coverage store 'worldImageSample', enabled
19 Apr 09:14:01 CONFIG [org.geoserver] - Loaded coverage 'Img_Sample', enabled
19 Apr 09:14:01 CONFIG [org.geoserver] - Loaded layer 'Img_Sample'
19 Apr 09:14:01 CONFIG [org.geoserver] - Loaded coverage store 'img_sample2', enabled
19 Apr 09:14:01 CONFIG [org.geoserver] - Loaded coverage 'Pk50095', enabled
19 Apr 09:14:01 CONFIG [org.geoserver] - Loaded layer 'Pk50095'
19 Apr 09:14:01 CONFIG [org.geoserver] - Loaded data store 'nyc', enabled
19 Apr 09:14:01 CONFIG [org.geoserver] - Loaded feature type 'poly_landmarks', enabled
19 Apr 09:14:01 CONFIG [org.geoserver] - Loaded layer 'poly_landmarks'
19 Apr 09:14:01 CONFIG [org.geoserver] - Loaded feature type 'poi', enabled
19 Apr 09:14:01 CONFIG [org.geoserver] - Loaded layer 'poi'
19 Apr 09:14:01 CONFIG [org.geoserver] - Loaded feature type 'giant_polygon', enabled
19 Apr 09:14:01 CONFIG [org.geoserver] - Loaded layer 'giant_polygon'
19 Apr 09:14:01 CONFIG [org.geoserver] - Loaded feature type 'tiger_roads', enabled
19 Apr 09:14:01 CONFIG [org.geoserver] - Loaded layer 'tiger_roads'
19 Apr 09:14:02 WARN   [org.geoserver] - Failed to load data store 'PDE_tables'
com.thoughtworks.xstream.converters.ConversionException: 
---- Debugging information ----
cause-exception     : org.jasypt.exceptions.EncryptionOperationNotPossibleException
cause-message       : null
class               : org.geoserver.catalog.impl.DataStoreInfoImpl
required-type       : org.geoserver.catalog.impl.DataStoreInfoImpl
converter-type      : org.geoserver.config.util.XStreamPersister$StoreInfoConverter
line number         : 33
version             : 2.24.1
-------------------------------
	at com.thoughtworks.xstream.core.TreeUnmarshaller.convert(TreeUnmarshaller.java:81)
	at com.thoughtworks.xstream.core.TreeUnmarshaller.convertAnother(TreeUnmarshaller.java:68)
	at com.thoughtworks.xstream.core.TreeUnmarshaller.convertAnother(TreeUnmarshaller.java:52)
	at com.thoughtworks.xstream.core.TreeUnmarshaller.start(TreeUnmarshaller.java:136)
	at com.thoughtworks.xstream.core.AbstractTreeMarshallingStrategy.unmarshal(AbstractTreeMarshallingStrategy.java:32)
	at com.thoughtworks.xstream.XStream.unmarshal(XStream.java:1464)
	at com.thoughtworks.xstream.XStream.unmarshal(XStream.java:1441)
	at com.thoughtworks.xstream.XStream.fromXML(XStream.java:1330)
	at org.geoserver.config.util.XStreamPersister.load(XStreamPersister.java:721)
	at org.geoserver.config.GeoServerLoader.depersist(GeoServerLoader.java:1138)
	at org.geoserver.config.GeoServerLoader.loadDataStore(GeoServerLoader.java:820)
	at org.geoserver.config.GeoServerLoader.readCatalog(GeoServerLoader.java:664)
	at org.geoserver.config.GeoServerLoader.readCatalog(GeoServerLoader.java:479)
	at org.geoserver.config.DefaultGeoServerLoader.loadCatalog(DefaultGeoServerLoader.java:37)
	at org.geoserver.config.GeoServerLoader.postProcessBeforeInitializationCatalog(GeoServerLoader.java:329)
	at org.geoserver.config.GeoServerLoader.postProcessBeforeInitialization(GeoServerLoader.java:280)
	at org.geoserver.config.GeoServerLoaderProxy.postProcessBeforeInitialization(GeoServerLoaderProxy.java:61)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyBeanPostProcessorsBeforeInitialization(AbstractAutowireCapableBeanFactory.java:440)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1796)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:620)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:330)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:113)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveConstructorArguments(ConstructorResolver.java:707)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:198)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1372)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1222)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:582)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:322)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:330)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:113)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveConstructorArguments(ConstructorResolver.java:707)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:198)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1372)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1222)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:582)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:330)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:113)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveConstructorArguments(ConstructorResolver.java:707)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:198)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1372)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1222)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:582)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:330)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:113)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveConstructorArguments(ConstructorResolver.java:707)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:198)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1372)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1222)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:582)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.getBeansOfType(DefaultListableBeanFactory.java:673)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.getBeansOfType(DefaultListableBeanFactory.java:661)
	at org.springframework.context.support.AbstractApplicationContext.getBeansOfType(AbstractApplicationContext.java:1302)
	at org.geowebcache.GeoWebCacheExtensions.getBeansNamesOrderedByPriority(GeoWebCacheExtensions.java:158)
	at org.geowebcache.GeoWebCacheExtensions.extensions(GeoWebCacheExtensions.java:103)
	at org.geowebcache.config.XMLConfiguration.getConfiguredXStreamWithContext(XMLConfiguration.java:455)
	at org.geowebcache.config.XMLConfiguration.getConfiguredXStreamWithContext(XMLConfiguration.java:361)
	at org.geowebcache.config.XMLConfiguration.loadConfiguration(XMLConfiguration.java:327)
	at org.geowebcache.config.XMLConfiguration.loadConfiguration(XMLConfiguration.java:316)
	at org.geowebcache.config.XMLConfiguration.afterPropertiesSet(XMLConfiguration.java:841)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1863)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1800)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:620)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:955)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:920)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:583)
	at org.springframework.web.context.ContextLoader.configureAndRefreshWebApplicationContext(ContextLoader.java:399)
	at org.springframework.web.context.ContextLoader.initWebApplicationContext(ContextLoader.java:278)
	at org.springframework.web.context.ContextLoaderListener.contextInitialized(ContextLoaderListener.java:103)
	at org.geoserver.platform.GeoServerContextLoaderListener.contextInitialized(GeoServerContextLoaderListener.java:22)
	at org.apache.catalina.core.StandardContext.listenerStart(StandardContext.java:4462)
	at org.apache.catalina.core.StandardContext.startInternal(StandardContext.java:4914)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:171)
	at org.apache.catalina.core.ContainerBase.addChildInternal(ContainerBase.java:683)
	at org.apache.catalina.core.ContainerBase.addChild(ContainerBase.java:658)
	at org.apache.catalina.core.StandardHost.addChild(StandardHost.java:661)
	at org.apache.catalina.startup.HostConfig.deployDirectory(HostConfig.java:1184)
	at org.apache.catalina.startup.HostConfig$DeployDirectory.run(HostConfig.java:1932)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at org.apache.tomcat.util.threads.InlineExecutorService.execute(InlineExecutorService.java:75)
	at java.base/java.util.concurrent.AbstractExecutorService.submit(AbstractExecutorService.java:118)
	at org.apache.catalina.startup.HostConfig.deployDirectories(HostConfig.java:1094)
	at org.apache.catalina.startup.HostConfig.deployApps(HostConfig.java:476)
	at org.apache.catalina.startup.HostConfig.start(HostConfig.java:1617)
	at org.apache.catalina.startup.HostConfig.lifecycleEvent(HostConfig.java:318)
	at org.apache.catalina.util.LifecycleBase.fireLifecycleEvent(LifecycleBase.java:114)
	at org.apache.catalina.util.LifecycleBase.setStateInternal(LifecycleBase.java:402)
	at org.apache.catalina.util.LifecycleBase.setState(LifecycleBase.java:345)
	at org.apache.catalina.core.ContainerBase.startInternal(ContainerBase.java:893)
	at org.apache.catalina.core.StandardHost.startInternal(StandardHost.java:794)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:171)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1332)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1322)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at org.apache.tomcat.util.threads.InlineExecutorService.execute(InlineExecutorService.java:75)
	at java.base/java.util.concurrent.AbstractExecutorService.submit(AbstractExecutorService.java:140)
	at org.apache.catalina.core.ContainerBase.startInternal(ContainerBase.java:866)
	at org.apache.catalina.core.StandardEngine.startInternal(StandardEngine.java:248)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:171)
	at org.apache.catalina.core.StandardService.startInternal(StandardService.java:433)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:171)
	at org.apache.catalina.core.StandardServer.startInternal(StandardServer.java:921)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:171)
	at org.apache.catalina.startup.Catalina.start(Catalina.java:772)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.apache.catalina.startup.Bootstrap.start(Bootstrap.java:347)
	at org.apache.catalina.startup.Bootstrap.main(Bootstrap.java:478)
Caused by: org.jasypt.exceptions.EncryptionOperationNotPossibleException
	at org.jasypt.encryption.pbe.StandardPBEByteEncryptor.decrypt(StandardPBEByteEncryptor.java:1055)
	at org.jasypt.encryption.pbe.StandardPBEStringEncryptor.decrypt(StandardPBEStringEncryptor.java:725)
	at org.geoserver.security.password.GeoServerPBEPasswordEncoder.decode(GeoServerPBEPasswordEncoder.java:176)
	at org.geoserver.security.password.ConfigurationPasswordEncryptionHelper.decode(ConfigurationPasswordEncryptionHelper.java:208)
	at org.geoserver.security.password.ConfigurationPasswordEncryptionHelper.decode(ConfigurationPasswordEncryptionHelper.java:192)
	at org.geoserver.config.util.XStreamPersister$StoreInfoConverter.doUnmarshal(XStreamPersister.java:1875)
	at com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter.unmarshal(AbstractReflectionConverter.java:277)
	at com.thoughtworks.xstream.core.TreeUnmarshaller.convert(TreeUnmarshaller.java:74)
	... 140 more
19 Apr 09:14:02 WARN   [org.geoserver] - Failed to load data store 'Postgres_general'
com.thoughtworks.xstream.converters.ConversionException: 
---- Debugging information ----
cause-exception     : org.jasypt.exceptions.EncryptionOperationNotPossibleException
cause-message       : null
class               : org.geoserver.catalog.impl.DataStoreInfoImpl
required-type       : org.geoserver.catalog.impl.DataStoreInfoImpl
converter-type      : org.geoserver.config.util.XStreamPersister$StoreInfoConverter
line number         : 33
version             : 2.24.1
-------------------------------
	at com.thoughtworks.xstream.core.TreeUnmarshaller.convert(TreeUnmarshaller.java:81)
	at com.thoughtworks.xstream.core.TreeUnmarshaller.convertAnother(TreeUnmarshaller.java:68)
	at com.thoughtworks.xstream.core.TreeUnmarshaller.convertAnother(TreeUnmarshaller.java:52)
	at com.thoughtworks.xstream.core.TreeUnmarshaller.start(TreeUnmarshaller.java:136)
	at com.thoughtworks.xstream.core.AbstractTreeMarshallingStrategy.unmarshal(AbstractTreeMarshallingStrategy.java:32)
	at com.thoughtworks.xstream.XStream.unmarshal(XStream.java:1464)
	at com.thoughtworks.xstream.XStream.unmarshal(XStream.java:1441)
	at com.thoughtworks.xstream.XStream.fromXML(XStream.java:1330)
	at org.geoserver.config.util.XStreamPersister.load(XStreamPersister.java:721)
	at org.geoserver.config.GeoServerLoader.depersist(GeoServerLoader.java:1138)
	at org.geoserver.config.GeoServerLoader.loadDataStore(GeoServerLoader.java:820)
	at org.geoserver.config.GeoServerLoader.readCatalog(GeoServerLoader.java:664)
	at org.geoserver.config.GeoServerLoader.readCatalog(GeoServerLoader.java:479)
	at org.geoserver.config.DefaultGeoServerLoader.loadCatalog(DefaultGeoServerLoader.java:37)
	at org.geoserver.config.GeoServerLoader.postProcessBeforeInitializationCatalog(GeoServerLoader.java:329)
	at org.geoserver.config.GeoServerLoader.postProcessBeforeInitialization(GeoServerLoader.java:280)
	at org.geoserver.config.GeoServerLoaderProxy.postProcessBeforeInitialization(GeoServerLoaderProxy.java:61)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyBeanPostProcessorsBeforeInitialization(AbstractAutowireCapableBeanFactory.java:440)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1796)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:620)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:330)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:113)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveConstructorArguments(ConstructorResolver.java:707)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:198)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1372)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1222)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:582)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:322)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:330)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:113)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveConstructorArguments(ConstructorResolver.java:707)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:198)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1372)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1222)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:582)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:330)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:113)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveConstructorArguments(ConstructorResolver.java:707)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:198)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1372)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1222)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:582)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:330)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:113)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveConstructorArguments(ConstructorResolver.java:707)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:198)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1372)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1222)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:582)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.getBeansOfType(DefaultListableBeanFactory.java:673)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.getBeansOfType(DefaultListableBeanFactory.java:661)
	at org.springframework.context.support.AbstractApplicationContext.getBeansOfType(AbstractApplicationContext.java:1302)
	at org.geowebcache.GeoWebCacheExtensions.getBeansNamesOrderedByPriority(GeoWebCacheExtensions.java:158)
	at org.geowebcache.GeoWebCacheExtensions.extensions(GeoWebCacheExtensions.java:103)
	at org.geowebcache.config.XMLConfiguration.getConfiguredXStreamWithContext(XMLConfiguration.java:455)
	at org.geowebcache.config.XMLConfiguration.getConfiguredXStreamWithContext(XMLConfiguration.java:361)
	at org.geowebcache.config.XMLConfiguration.loadConfiguration(XMLConfiguration.java:327)
	at org.geowebcache.config.XMLConfiguration.loadConfiguration(XMLConfiguration.java:316)
	at org.geowebcache.config.XMLConfiguration.afterPropertiesSet(XMLConfiguration.java:841)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1863)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1800)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:620)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:955)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:920)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:583)
	at org.springframework.web.context.ContextLoader.configureAndRefreshWebApplicationContext(ContextLoader.java:399)
	at org.springframework.web.context.ContextLoader.initWebApplicationContext(ContextLoader.java:278)
	at org.springframework.web.context.ContextLoaderListener.contextInitialized(ContextLoaderListener.java:103)
	at org.geoserver.platform.GeoServerContextLoaderListener.contextInitialized(GeoServerContextLoaderListener.java:22)
	at org.apache.catalina.core.StandardContext.listenerStart(StandardContext.java:4462)
	at org.apache.catalina.core.StandardContext.startInternal(StandardContext.java:4914)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:171)
	at org.apache.catalina.core.ContainerBase.addChildInternal(ContainerBase.java:683)
	at org.apache.catalina.core.ContainerBase.addChild(ContainerBase.java:658)
	at org.apache.catalina.core.StandardHost.addChild(StandardHost.java:661)
	at org.apache.catalina.startup.HostConfig.deployDirectory(HostConfig.java:1184)
	at org.apache.catalina.startup.HostConfig$DeployDirectory.run(HostConfig.java:1932)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at org.apache.tomcat.util.threads.InlineExecutorService.execute(InlineExecutorService.java:75)
	at java.base/java.util.concurrent.AbstractExecutorService.submit(AbstractExecutorService.java:118)
	at org.apache.catalina.startup.HostConfig.deployDirectories(HostConfig.java:1094)
	at org.apache.catalina.startup.HostConfig.deployApps(HostConfig.java:476)
	at org.apache.catalina.startup.HostConfig.start(HostConfig.java:1617)
	at org.apache.catalina.startup.HostConfig.lifecycleEvent(HostConfig.java:318)
	at org.apache.catalina.util.LifecycleBase.fireLifecycleEvent(LifecycleBase.java:114)
	at org.apache.catalina.util.LifecycleBase.setStateInternal(LifecycleBase.java:402)
	at org.apache.catalina.util.LifecycleBase.setState(LifecycleBase.java:345)
	at org.apache.catalina.core.ContainerBase.startInternal(ContainerBase.java:893)
	at org.apache.catalina.core.StandardHost.startInternal(StandardHost.java:794)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:171)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1332)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1322)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at org.apache.tomcat.util.threads.InlineExecutorService.execute(InlineExecutorService.java:75)
	at java.base/java.util.concurrent.AbstractExecutorService.submit(AbstractExecutorService.java:140)
	at org.apache.catalina.core.ContainerBase.startInternal(ContainerBase.java:866)
	at org.apache.catalina.core.StandardEngine.startInternal(StandardEngine.java:248)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:171)
	at org.apache.catalina.core.StandardService.startInternal(StandardService.java:433)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:171)
	at org.apache.catalina.core.StandardServer.startInternal(StandardServer.java:921)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:171)
	at org.apache.catalina.startup.Catalina.start(Catalina.java:772)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.apache.catalina.startup.Bootstrap.start(Bootstrap.java:347)
	at org.apache.catalina.startup.Bootstrap.main(Bootstrap.java:478)
Caused by: org.jasypt.exceptions.EncryptionOperationNotPossibleException
	at org.jasypt.encryption.pbe.StandardPBEByteEncryptor.decrypt(StandardPBEByteEncryptor.java:1055)
	at org.jasypt.encryption.pbe.StandardPBEStringEncryptor.decrypt(StandardPBEStringEncryptor.java:725)
	at org.geoserver.security.password.GeoServerPBEPasswordEncoder.decode(GeoServerPBEPasswordEncoder.java:176)
	at org.geoserver.security.password.ConfigurationPasswordEncryptionHelper.decode(ConfigurationPasswordEncryptionHelper.java:208)
	at org.geoserver.security.password.ConfigurationPasswordEncryptionHelper.decode(ConfigurationPasswordEncryptionHelper.java:192)
	at org.geoserver.config.util.XStreamPersister$StoreInfoConverter.doUnmarshal(XStreamPersister.java:1875)
	at com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter.unmarshal(AbstractReflectionConverter.java:277)
	at com.thoughtworks.xstream.core.TreeUnmarshaller.convert(TreeUnmarshaller.java:74)
	... 140 more
19 Apr 09:14:02 WARN   [org.geoserver] - Failed to load data store 'Scotland'
com.thoughtworks.xstream.converters.ConversionException: 
---- Debugging information ----
cause-exception     : org.jasypt.exceptions.EncryptionOperationNotPossibleException
cause-message       : null
class               : org.geoserver.catalog.impl.DataStoreInfoImpl
required-type       : org.geoserver.catalog.impl.DataStoreInfoImpl
converter-type      : org.geoserver.config.util.XStreamPersister$StoreInfoConverter
line number         : 32
version             : 2.24.1
-------------------------------
	at com.thoughtworks.xstream.core.TreeUnmarshaller.convert(TreeUnmarshaller.java:81)
	at com.thoughtworks.xstream.core.TreeUnmarshaller.convertAnother(TreeUnmarshaller.java:68)
	at com.thoughtworks.xstream.core.TreeUnmarshaller.convertAnother(TreeUnmarshaller.java:52)
	at com.thoughtworks.xstream.core.TreeUnmarshaller.start(TreeUnmarshaller.java:136)
	at com.thoughtworks.xstream.core.AbstractTreeMarshallingStrategy.unmarshal(AbstractTreeMarshallingStrategy.java:32)
	at com.thoughtworks.xstream.XStream.unmarshal(XStream.java:1464)
	at com.thoughtworks.xstream.XStream.unmarshal(XStream.java:1441)
	at com.thoughtworks.xstream.XStream.fromXML(XStream.java:1330)
	at org.geoserver.config.util.XStreamPersister.load(XStreamPersister.java:721)
	at org.geoserver.config.GeoServerLoader.depersist(GeoServerLoader.java:1138)
	at org.geoserver.config.GeoServerLoader.loadDataStore(GeoServerLoader.java:820)
	at org.geoserver.config.GeoServerLoader.readCatalog(GeoServerLoader.java:664)
	at org.geoserver.config.GeoServerLoader.readCatalog(GeoServerLoader.java:479)
	at org.geoserver.config.DefaultGeoServerLoader.loadCatalog(DefaultGeoServerLoader.java:37)
	at org.geoserver.config.GeoServerLoader.postProcessBeforeInitializationCatalog(GeoServerLoader.java:329)
	at org.geoserver.config.GeoServerLoader.postProcessBeforeInitialization(GeoServerLoader.java:280)
	at org.geoserver.config.GeoServerLoaderProxy.postProcessBeforeInitialization(GeoServerLoaderProxy.java:61)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyBeanPostProcessorsBeforeInitialization(AbstractAutowireCapableBeanFactory.java:440)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1796)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:620)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:330)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:113)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveConstructorArguments(ConstructorResolver.java:707)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:198)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1372)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1222)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:582)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:322)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:330)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:113)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveConstructorArguments(ConstructorResolver.java:707)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:198)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1372)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1222)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:582)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:330)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:113)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveConstructorArguments(ConstructorResolver.java:707)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:198)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1372)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1222)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:582)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:330)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:113)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveConstructorArguments(ConstructorResolver.java:707)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:198)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1372)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1222)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:582)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.getBeansOfType(DefaultListableBeanFactory.java:673)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.getBeansOfType(DefaultListableBeanFactory.java:661)
	at org.springframework.context.support.AbstractApplicationContext.getBeansOfType(AbstractApplicationContext.java:1302)
	at org.geowebcache.GeoWebCacheExtensions.getBeansNamesOrderedByPriority(GeoWebCacheExtensions.java:158)
	at org.geowebcache.GeoWebCacheExtensions.extensions(GeoWebCacheExtensions.java:103)
	at org.geowebcache.config.XMLConfiguration.getConfiguredXStreamWithContext(XMLConfiguration.java:455)
	at org.geowebcache.config.XMLConfiguration.getConfiguredXStreamWithContext(XMLConfiguration.java:361)
	at org.geowebcache.config.XMLConfiguration.loadConfiguration(XMLConfiguration.java:327)
	at org.geowebcache.config.XMLConfiguration.loadConfiguration(XMLConfiguration.java:316)
	at org.geowebcache.config.XMLConfiguration.afterPropertiesSet(XMLConfiguration.java:841)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1863)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1800)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:620)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:955)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:920)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:583)
	at org.springframework.web.context.ContextLoader.configureAndRefreshWebApplicationContext(ContextLoader.java:399)
	at org.springframework.web.context.ContextLoader.initWebApplicationContext(ContextLoader.java:278)
	at org.springframework.web.context.ContextLoaderListener.contextInitialized(ContextLoaderListener.java:103)
	at org.geoserver.platform.GeoServerContextLoaderListener.contextInitialized(GeoServerContextLoaderListener.java:22)
	at org.apache.catalina.core.StandardContext.listenerStart(StandardContext.java:4462)
	at org.apache.catalina.core.StandardContext.startInternal(StandardContext.java:4914)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:171)
	at org.apache.catalina.core.ContainerBase.addChildInternal(ContainerBase.java:683)
	at org.apache.catalina.core.ContainerBase.addChild(ContainerBase.java:658)
	at org.apache.catalina.core.StandardHost.addChild(StandardHost.java:661)
	at org.apache.catalina.startup.HostConfig.deployDirectory(HostConfig.java:1184)
	at org.apache.catalina.startup.HostConfig$DeployDirectory.run(HostConfig.java:1932)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at org.apache.tomcat.util.threads.InlineExecutorService.execute(InlineExecutorService.java:75)
	at java.base/java.util.concurrent.AbstractExecutorService.submit(AbstractExecutorService.java:118)
	at org.apache.catalina.startup.HostConfig.deployDirectories(HostConfig.java:1094)
	at org.apache.catalina.startup.HostConfig.deployApps(HostConfig.java:476)
	at org.apache.catalina.startup.HostConfig.start(HostConfig.java:1617)
	at org.apache.catalina.startup.HostConfig.lifecycleEvent(HostConfig.java:318)
	at org.apache.catalina.util.LifecycleBase.fireLifecycleEvent(LifecycleBase.java:114)
	at org.apache.catalina.util.LifecycleBase.setStateInternal(LifecycleBase.java:402)
	at org.apache.catalina.util.LifecycleBase.setState(LifecycleBase.java:345)
	at org.apache.catalina.core.ContainerBase.startInternal(ContainerBase.java:893)
	at org.apache.catalina.core.StandardHost.startInternal(StandardHost.java:794)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:171)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1332)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1322)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at org.apache.tomcat.util.threads.InlineExecutorService.execute(InlineExecutorService.java:75)
	at java.base/java.util.concurrent.AbstractExecutorService.submit(AbstractExecutorService.java:140)
	at org.apache.catalina.core.ContainerBase.startInternal(ContainerBase.java:866)
	at org.apache.catalina.core.StandardEngine.startInternal(StandardEngine.java:248)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:171)
	at org.apache.catalina.core.StandardService.startInternal(StandardService.java:433)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:171)
	at org.apache.catalina.core.StandardServer.startInternal(StandardServer.java:921)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:171)
	at org.apache.catalina.startup.Catalina.start(Catalina.java:772)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.apache.catalina.startup.Bootstrap.start(Bootstrap.java:347)
	at org.apache.catalina.startup.Bootstrap.main(Bootstrap.java:478)
Caused by: org.jasypt.exceptions.EncryptionOperationNotPossibleException
	at org.jasypt.encryption.pbe.StandardPBEByteEncryptor.decrypt(StandardPBEByteEncryptor.java:1055)
	at org.jasypt.encryption.pbe.StandardPBEStringEncryptor.decrypt(StandardPBEStringEncryptor.java:725)
	at org.geoserver.security.password.GeoServerPBEPasswordEncoder.decode(GeoServerPBEPasswordEncoder.java:176)
	at org.geoserver.security.password.ConfigurationPasswordEncryptionHelper.decode(ConfigurationPasswordEncryptionHelper.java:208)
	at org.geoserver.security.password.ConfigurationPasswordEncryptionHelper.decode(ConfigurationPasswordEncryptionHelper.java:192)
	at org.geoserver.config.util.XStreamPersister$StoreInfoConverter.doUnmarshal(XStreamPersister.java:1875)
	at com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter.unmarshal(AbstractReflectionConverter.java:277)
	at com.thoughtworks.xstream.core.TreeUnmarshaller.convert(TreeUnmarshaller.java:74)
	... 140 more
19 Apr 09:14:02 CONFIG [org.geoserver] - Loaded data store 'historic_scottish_landuse', enabled
19 Apr 09:14:02 CONFIG [org.geoserver] - Loaded feature type 'scotland_parish_1930_4326', enabled
19 Apr 09:14:02 CONFIG [org.geoserver] - Loaded layer 'scotland_parish_1930_4326'
19 Apr 09:14:02 CONFIG [org.geoserver] - Loaded feature type 'historic_scottish_lu_from_tab_2015_08', enabled
19 Apr 09:14:02 CONFIG [org.geoserver] - Loaded layer 'historic_scottish_lu_from_tab_2015_08'
19 Apr 09:14:02 CONFIG [org.geoserver] - Loaded feature type 'scottish_medieval_landuse_2015_08', enabled
19 Apr 09:14:02 CONFIG [org.geoserver] - Loaded layer 'scottish_medieval_landuse_2015_08'
19 Apr 09:14:02 WARN   [geoserver.security] - Could not find factory for store : DataStoreInfoImpl[mysql-stg]. Unable to encrypt connection parameters.
19 Apr 09:14:02 CONFIG [org.geoserver] - Loaded data store 'mysql-stg', enabled
19 Apr 09:14:02 CONFIG [org.geoserver] - Loaded feature type 'vw_pomsapp_place', enabled
19 Apr 09:14:02 CONFIG [org.geoserver] - Loaded layer 'vw_pomsapp_place'
19 Apr 09:14:02 CONFIG [org.geoserver] - Loaded data store 'sf', enabled
19 Apr 09:14:02 CONFIG [org.geoserver] - Loaded feature type 'streams', enabled
19 Apr 09:14:02 CONFIG [org.geoserver] - Loaded layer 'streams'
19 Apr 09:14:02 CONFIG [org.geoserver] - Loaded feature type 'restricted', enabled
19 Apr 09:14:02 CONFIG [org.geoserver] - Loaded layer 'restricted'
19 Apr 09:14:02 CONFIG [org.geoserver] - Loaded feature type 'bugsites', enabled
19 Apr 09:14:02 CONFIG [org.geoserver] - Loaded layer 'bugsites'
19 Apr 09:14:02 CONFIG [org.geoserver] - Loaded feature type 'archsites', enabled
19 Apr 09:14:02 CONFIG [org.geoserver] - Loaded layer 'archsites'
19 Apr 09:14:02 CONFIG [org.geoserver] - Loaded feature type 'roads', enabled
19 Apr 09:14:02 CONFIG [org.geoserver] - Loaded layer 'roads'
19 Apr 09:14:02 CONFIG [org.geoserver] - Loaded coverage store 'sfdem', enabled
19 Apr 09:14:02 CONFIG [org.geoserver] - Loaded coverage 'sfdem', enabled
19 Apr 09:14:02 CONFIG [org.geoserver] - Loaded layer 'sfdem'
19 Apr 09:14:02 CONFIG [org.geoserver] - Loaded data store 'taz_shapes', enabled
19 Apr 09:14:02 CONFIG [org.geoserver] - Loaded feature type 'tasmania_water_bodies', enabled
19 Apr 09:14:02 CONFIG [org.geoserver] - Loaded layer 'tasmania_water_bodies'
19 Apr 09:14:02 CONFIG [org.geoserver] - Loaded feature type 'tasmania_cities', enabled
19 Apr 09:14:02 CONFIG [org.geoserver] - Loaded layer 'tasmania_cities'
19 Apr 09:14:02 CONFIG [org.geoserver] - Loaded feature type 'tasmania_state_boundaries', enabled
19 Apr 09:14:02 CONFIG [org.geoserver] - Loaded layer 'tasmania_state_boundaries'
19 Apr 09:14:02 CONFIG [org.geoserver] - Loaded feature type 'tasmania_roads', enabled
19 Apr 09:14:02 CONFIG [org.geoserver] - Loaded layer 'tasmania_roads'
19 Apr 09:14:02 CONFIG [org.geoserver] - Loaded data store 'states_shapefile', enabled
19 Apr 09:14:02 CONFIG [org.geoserver] - Loaded feature type 'states', enabled
19 Apr 09:14:02 CONFIG [org.geoserver] - Loaded layer 'states'
19 Apr 09:14:02 CONFIG [org.geoserver] - Loaded data store 'NaturalEarth', enabled
19 Apr 09:14:02 CONFIG [org.geoserver] - Loaded feature type 'boundary_lines', enabled
19 Apr 09:14:02 CONFIG [org.geoserver] - Loaded layer 'boundary_lines'
19 Apr 09:14:02 CONFIG [org.geoserver] - Loaded feature type 'disputed_areas', enabled
19 Apr 09:14:02 CONFIG [org.geoserver] - Loaded layer 'disputed_areas'
19 Apr 09:14:02 CONFIG [org.geoserver] - Loaded feature type 'populated_places', enabled
19 Apr 09:14:02 CONFIG [org.geoserver] - Loaded layer 'populated_places'
19 Apr 09:14:02 CONFIG [org.geoserver] - Loaded feature type 'coastlines', enabled
19 Apr 09:14:02 CONFIG [org.geoserver] - Loaded layer 'coastlines'
19 Apr 09:14:02 CONFIG [org.geoserver] - Loaded feature type 'countries', enabled
19 Apr 09:14:02 CONFIG [org.geoserver] - Loaded layer 'countries'
19 Apr 09:14:02 CONFIG [org.geoserver] - Loaded layer group 'world'
19 Apr 09:14:02 CONFIG [org.geoserver] - Loaded layer group 'tiger-ny'
19 Apr 09:14:02 CONFIG [org.geoserver] - Loaded layer group 'aster_blend_test'
19 Apr 09:14:02 CONFIG [org.geoserver] - Loaded layer group 'world_simple'
19 Apr 09:14:02 CONFIG [org.geoserver] - Loaded layer group 'PDE_style_test'
19 Apr 09:14:02 CONFIG [org.geoserver] - Loaded layer group 'PDE_simple_backdrop'
19 Apr 09:14:02 CONFIG [org.geoserver] - Loaded layer group 'County_label'
19 Apr 09:14:02 CONFIG [org.geoserver] - Loaded layer group 'PDE_rivers'
19 Apr 09:14:02 CONFIG [org.geoserver] - Loaded layer group 'koro_group'
19 Apr 09:14:02 CONFIG [org.geoserver] - Loaded layer group 'spearfish'
19 Apr 09:14:02 CONFIG [org.geoserver] - Loaded layer group 'citywitness_finals'
19 Apr 09:14:02 CONFIG [org.geoserver] - Loaded layer group 'PDE_National_Borders'
19 Apr 09:14:02 CONFIG [org.geoserver] - Loaded layer group 'Scrapbook test'
19 Apr 09:14:02 CONFIG [org.geoserver] - Loaded layer group 'TMS_Style_CW'
19 Apr 09:14:02 CONFIG [org.geoserver] - Loaded layer group 'PDE_Rivers_2'
19 Apr 09:14:02 CONFIG [org.geoserver] - Loaded layer group 'tasmania'
19 Apr 09:14:02 CONFIG [org.geoserver] - Read catalog in 3.316 s
19 Apr 09:14:02 CONFIG [config.XMLConfiguration] - Initializing GridSets from gwc
19 Apr 09:14:02 CONFIG [config.XMLConfiguration] - Initializing layers from gwc
19 Apr 09:14:02 CONFIG [gwc.layer] - Initializing GWC configuration based on GeoServer's Catalog
19 Apr 09:14:02 CONFIG [gwc.layer] - GeoServer TileLayer store base directory is: gwc-layers
19 Apr 09:14:02 CONFIG [gwc.layer] - Loading tile layers from gwc-layers
19 Apr 09:14:02 CONFIG [gwc.layer] - Loaded 28 tile layers in 32.85 ms
19 Apr 09:14:02 CONFIG [storage.BlobStoreAggregator] - BlobStoreConfiguration gwc contained no blob store infos.
19 Apr 09:14:02 CONFIG [storage.DefaultStorageFinder] - Found system environment variableGEOSERVER_DATA_DIR set to /opt/geoserver_data/, using it as the default prefix.
19 Apr 09:14:03 CONFIG [geowebcache.GeoWebCacheDispatcher] - Invoked setServletPrefix(gwc)
19 Apr 09:14:03 CONFIG [wms.WMSService] - Will NOT recombine tiles for non-tiling clients.
19 Apr 09:14:03 CONFIG [wms.WMSService] - Will proxy requests to backend that are not getmap or getcapabilities.
19 Apr 09:14:03 CONFIG [org.geoserver] - Loaded service 'WMTSInfoImpl--288a2c05:1786a499f45:-7ff2', enabled
19 Apr 09:14:03 CONFIG [org.geoserver] - Loaded service 'wcs', enabled
19 Apr 09:14:03 CONFIG [org.geoserver] - Loaded service 'wfs', enabled
19 Apr 09:14:03 CONFIG [org.geoserver] - Loaded service 'wms', enabled
19 Apr 09:14:03 CONFIG [org.geoserver] - Loaded service 'WCSInfoImpl--19e1b629:13c90fa1a61:-7461', enabled
19 Apr 09:14:03 CONFIG [org.geoserver] - Loaded service 'WFSInfoImpl--19e1b629:13c90fa1a61:-7460', enabled
19 Apr 09:14:03 CONFIG [org.geoserver] - Loaded service 'WMSInfoImpl--19e1b629:13c90fa1a61:-745f', enabled
19 Apr 09:14:03 CONFIG [org.geoserver] - Loaded service 'WMTSInfoImpl-1c443fee:182c0f3f209:-7f98', enabled
19 Apr 09:14:03 CONFIG [org.geoserver] - Loaded service 'WCSInfoImpl-1c443fee:182c0f3f209:-7f96', enabled
19 Apr 09:14:03 CONFIG [org.geoserver] - Loaded service 'WFSInfoImpl-1c443fee:182c0f3f209:-7f97', enabled
19 Apr 09:14:03 CONFIG [org.geoserver] - Loaded service 'WMSInfoImpl-1c443fee:182c0f3f209:-7f99', enabled
19 Apr 09:14:03 CONFIG [gwc.config] - Initializing GeoServer specific GWC configuration from gwc-gs.xml
19 Apr 09:14:03 CONFIG [gwc.config] - Will look for 'geowebcache-diskquota.xml' in directory '/opt/geoserver_data/gwc'.
19 Apr 09:14:03 CONFIG [gwc.config] - Will look for 'geowebcache-diskquota-jdbc.xml' in directory '/opt/geoserver_data/gwc'.
19 Apr 09:14:03 CONFIG [diskquota.ConfigLoader] - DiskQuota configuration is not readable: gwc/geowebcache-diskquota.xml
19 Apr 09:14:03 CONFIG [diskquota.ConfigLoader] - DiskQuota configuration is not readable: gwc/geowebcache-diskquota.xml
19 Apr 09:14:07 CONFIG [diskquota.ConfigLoader] - DiskQuota configuration is not readable: gwc/geowebcache-diskquota.xml
19 Apr 09:14:07 CONFIG [diskquota.DiskQuotaMonitor] - Setting up disk quota periodic enforcement task
19 Apr 09:14:07 CONFIG [diskquota.DiskQuotaMonitor] - 0 layers configured with their own quotas. 
19 Apr 09:14:07 CONFIG [diskquota.DiskQuotaMonitor] - 28 layers attached to global quota 500.0 MB
19 Apr 09:14:07 CONFIG [diskquota.DiskQuotaMonitor] - Disk quota periodic enforcement task set up every 10 SECONDS
19 Apr 09:14:07 CONFIG [geoserver.security] - Start reloading user/groups for service named default
19 Apr 09:14:07 CONFIG [geoserver.security] - Reloading user/groups successful for service named default
19 Apr 09:14:07 CONFIG [geoserver.security] - AuthenticationCache Initialized with 1000 Max Entries, 300 seconds idle time, 600 seconds time to live and 3 concurrency level
19 Apr 09:14:07 CONFIG [geoserver.security] - AuthenticationCache Eviction Task created to run every 600 seconds
19 Apr 09:19:05 CONFIG [gwc.layer] - GeoServer TileLayer store base directory is: gwc-layers
19 Apr 09:19:05 CONFIG [gwc.layer] - Loading tile layers from gwc-layers
19 Apr 09:19:05 CONFIG [gwc.layer] - Loaded 28 tile layers in 17.88 ms
19 Apr 09:19:05 WARN   [support.DisposableBeanAdapter] - Custom destroy method 'destroy' on bean with name 'gwcMemoryBlobStore' threw an exception: java.util.concurrent.RejectedExecutionException: Task java.util.concurrent.FutureTask@6563ffd1[Not completed, task = org.geowebcache.storage.blobstore.memory.MemoryBlobStore$BlobStoreTask@33f855d5] rejected from java.util.concurrent.ThreadPoolExecutor@3836bda3[Terminated, pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 1]
19 Apr 09:19:05 INFO   [geoserver.logging] - Beginning GeoServer cleanup sequence
19 Apr 09:20:02 CONFIG [geoserver.logging] - Log4j 2 configuration set to DEFAULT_LOGGING.xml
19 Apr 09:20:04 CONFIG [gwc.config] - Will look for 'geowebcache.xml' in directory '/opt/geoserver_data/gwc'.
19 Apr 09:20:05 WARN   [config.XMLConfiguration] - GWC configuration validation error: cvc-elt.1.a: Cannot find the declaration of element 'gwcConfiguration'.
19 Apr 09:20:05 WARN   [config.XMLConfiguration] - Will try to use configuration anyway. Please check the order of declared elements against the schema.
19 Apr 09:20:05 CONFIG [org.geoserver] - GeoServer configuration lock is enabled
19 Apr 09:20:05 CONFIG [org.geoserver] - Loading catalog /opt/geoserver_data
19 Apr 09:20:05 CONFIG [org.geoserver] - Loaded style 'pophatch'
19 Apr 09:20:05 CONFIG [org.geoserver] - Loaded style 'simple_roads'
19 Apr 09:20:05 CONFIG [org.geoserver] - Loaded style 'burg'
19 Apr 09:20:05 CONFIG [org.geoserver] - Loaded style 'giant_polygon'
19 Apr 09:20:05 CONFIG [org.geoserver] - Loaded style 'polygon'
19 Apr 09:20:05 CONFIG [org.geoserver] - Loaded style 'poi'
19 Apr 09:20:05 CONFIG [org.geoserver] - Loaded style 'population'
19 Apr 09:20:05 CONFIG [org.geoserver] - Loaded style 'raster'
19 Apr 09:20:05 CONFIG [org.geoserver] - Loaded style 'simple_streams'
19 Apr 09:20:05 CONFIG [org.geoserver] - Loaded style 'tiger_roads'
19 Apr 09:20:05 CONFIG [org.geoserver] - Loaded style 'point'
19 Apr 09:20:05 CONFIG [org.geoserver] - Loaded style 'restricted'
19 Apr 09:20:05 CONFIG [org.geoserver] - Loaded style 'grass'
19 Apr 09:20:05 CONFIG [org.geoserver] - Loaded style 'poly_landmarks'
19 Apr 09:20:05 CONFIG [org.geoserver] - Loaded style 'dem'
19 Apr 09:20:05 CONFIG [org.geoserver] - Loaded style 'green'
19 Apr 09:20:05 CONFIG [org.geoserver] - Loaded style 'generic'
19 Apr 09:20:05 CONFIG [org.geoserver] - Loaded style 'capitals'
19 Apr 09:20:05 CONFIG [org.geoserver] - Loaded style 'line'
19 Apr 09:20:05 CONFIG [org.geoserver] - Loaded style 'cite_lakes'
19 Apr 09:20:05 CONFIG [org.geoserver] - Loaded style 'rain'
19 Apr 09:20:05 CONFIG [org.geoserver] - Loaded default workspace 'ne'
19 Apr 09:20:05 CONFIG [org.geoserver] - Loaded workspace 'cite'
19 Apr 09:20:05 CONFIG [org.geoserver] - Loaded workspace 'it.geosolutions'
19 Apr 09:20:05 CONFIG [org.geoserver] - Loaded workspace 'nurc'
19 Apr 09:20:05 CONFIG [org.geoserver] - Loaded workspace 'tiger'
19 Apr 09:20:05 CONFIG [org.geoserver] - Loaded workspace 'PoMS'
19 Apr 09:20:05 CONFIG [org.geoserver] - Loaded workspace 'PDE_Postgres'
19 Apr 09:20:05 CONFIG [org.geoserver] - Loaded workspace 'sde'
19 Apr 09:20:05 CONFIG [org.geoserver] - Loaded workspace 'sf'
19 Apr 09:20:05 CONFIG [org.geoserver] - Loaded workspace 'topp'
19 Apr 09:20:05 CONFIG [org.geoserver] - Loaded workspace 'ne'
19 Apr 09:20:05 CONFIG [org.geoserver] - Loaded style 'coastline'
19 Apr 09:20:05 CONFIG [org.geoserver] - Loaded style 'populated_places'
19 Apr 09:20:05 CONFIG [org.geoserver] - Loaded style 'boundary_lines'
19 Apr 09:20:05 CONFIG [org.geoserver] - Loaded style 'countries_mapcolor9'
19 Apr 09:20:05 CONFIG [org.geoserver] - Loaded style 'countries'
19 Apr 09:20:05 CONFIG [org.geoserver] - Loaded style 'disputed'
19 Apr 09:20:05 CONFIG [org.geoserver] - Loaded coverage store 'mosaic', enabled
19 Apr 09:20:06 CONFIG [org.geoserver] - Loaded coverage 'mosaic', enabled
19 Apr 09:20:06 CONFIG [org.geoserver] - Loaded layer 'mosaic'
19 Apr 09:20:06 CONFIG [org.geoserver] - Loaded coverage store 'arcGridSample', enabled
19 Apr 09:20:06 CONFIG [org.geoserver] - Loaded coverage 'Arc_Sample', enabled
19 Apr 09:20:06 CONFIG [org.geoserver] - Loaded layer 'Arc_Sample'
19 Apr 09:20:06 CONFIG [org.geoserver] - Loaded coverage store 'img_sample2', enabled
19 Apr 09:20:06 CONFIG [org.geoserver] - Loaded coverage 'Pk50095', enabled
19 Apr 09:20:06 CONFIG [org.geoserver] - Loaded layer 'Pk50095'
19 Apr 09:20:06 CONFIG [org.geoserver] - Loaded coverage store 'worldImageSample', enabled
19 Apr 09:20:06 CONFIG [org.geoserver] - Loaded coverage 'Img_Sample', enabled
19 Apr 09:20:06 CONFIG [org.geoserver] - Loaded layer 'Img_Sample'
19 Apr 09:20:07 CONFIG [org.geoserver] - Loaded data store 'nyc', enabled
19 Apr 09:20:07 CONFIG [org.geoserver] - Loaded feature type 'poly_landmarks', enabled
19 Apr 09:20:07 CONFIG [org.geoserver] - Loaded layer 'poly_landmarks'
19 Apr 09:20:07 CONFIG [org.geoserver] - Loaded feature type 'giant_polygon', enabled
19 Apr 09:20:07 CONFIG [org.geoserver] - Loaded layer 'giant_polygon'
19 Apr 09:20:07 CONFIG [org.geoserver] - Loaded feature type 'poi', enabled
19 Apr 09:20:07 CONFIG [org.geoserver] - Loaded layer 'poi'
19 Apr 09:20:07 CONFIG [org.geoserver] - Loaded feature type 'tiger_roads', enabled
19 Apr 09:20:07 CONFIG [org.geoserver] - Loaded layer 'tiger_roads'
19 Apr 09:20:07 WARN   [org.geoserver] - Failed to load data store 'PDE_tables'
com.thoughtworks.xstream.converters.ConversionException: 
---- Debugging information ----
cause-exception     : org.jasypt.exceptions.EncryptionOperationNotPossibleException
cause-message       : null
class               : org.geoserver.catalog.impl.DataStoreInfoImpl
required-type       : org.geoserver.catalog.impl.DataStoreInfoImpl
converter-type      : org.geoserver.config.util.XStreamPersister$StoreInfoConverter
line number         : 33
version             : 2.24.1
-------------------------------
	at com.thoughtworks.xstream.core.TreeUnmarshaller.convert(TreeUnmarshaller.java:81)
	at com.thoughtworks.xstream.core.TreeUnmarshaller.convertAnother(TreeUnmarshaller.java:68)
	at com.thoughtworks.xstream.core.TreeUnmarshaller.convertAnother(TreeUnmarshaller.java:52)
	at com.thoughtworks.xstream.core.TreeUnmarshaller.start(TreeUnmarshaller.java:136)
	at com.thoughtworks.xstream.core.AbstractTreeMarshallingStrategy.unmarshal(AbstractTreeMarshallingStrategy.java:32)
	at com.thoughtworks.xstream.XStream.unmarshal(XStream.java:1464)
	at com.thoughtworks.xstream.XStream.unmarshal(XStream.java:1441)
	at com.thoughtworks.xstream.XStream.fromXML(XStream.java:1330)
	at org.geoserver.config.util.XStreamPersister.load(XStreamPersister.java:721)
	at org.geoserver.config.GeoServerLoader.depersist(GeoServerLoader.java:1138)
	at org.geoserver.config.GeoServerLoader.loadDataStore(GeoServerLoader.java:820)
	at org.geoserver.config.GeoServerLoader.readCatalog(GeoServerLoader.java:664)
	at org.geoserver.config.GeoServerLoader.readCatalog(GeoServerLoader.java:479)
	at org.geoserver.config.DefaultGeoServerLoader.loadCatalog(DefaultGeoServerLoader.java:37)
	at org.geoserver.config.GeoServerLoader.postProcessBeforeInitializationCatalog(GeoServerLoader.java:329)
	at org.geoserver.config.GeoServerLoader.postProcessBeforeInitialization(GeoServerLoader.java:280)
	at org.geoserver.config.GeoServerLoaderProxy.postProcessBeforeInitialization(GeoServerLoaderProxy.java:61)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyBeanPostProcessorsBeforeInitialization(AbstractAutowireCapableBeanFactory.java:440)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1796)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:620)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:330)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:113)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveConstructorArguments(ConstructorResolver.java:707)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:198)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1372)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1222)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:582)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:322)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:330)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:113)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveConstructorArguments(ConstructorResolver.java:707)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:198)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1372)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1222)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:582)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:330)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:113)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveConstructorArguments(ConstructorResolver.java:707)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:198)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1372)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1222)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:582)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:330)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:113)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveConstructorArguments(ConstructorResolver.java:707)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:198)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1372)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1222)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:582)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.getBeansOfType(DefaultListableBeanFactory.java:673)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.getBeansOfType(DefaultListableBeanFactory.java:661)
	at org.springframework.context.support.AbstractApplicationContext.getBeansOfType(AbstractApplicationContext.java:1302)
	at org.geowebcache.GeoWebCacheExtensions.getBeansNamesOrderedByPriority(GeoWebCacheExtensions.java:158)
	at org.geowebcache.GeoWebCacheExtensions.extensions(GeoWebCacheExtensions.java:103)
	at org.geowebcache.config.XMLConfiguration.getConfiguredXStreamWithContext(XMLConfiguration.java:455)
	at org.geowebcache.config.XMLConfiguration.getConfiguredXStreamWithContext(XMLConfiguration.java:361)
	at org.geowebcache.config.XMLConfiguration.loadConfiguration(XMLConfiguration.java:327)
	at org.geowebcache.config.XMLConfiguration.loadConfiguration(XMLConfiguration.java:316)
	at org.geowebcache.config.XMLConfiguration.afterPropertiesSet(XMLConfiguration.java:841)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1863)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1800)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:620)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:955)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:920)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:583)
	at org.springframework.web.context.ContextLoader.configureAndRefreshWebApplicationContext(ContextLoader.java:399)
	at org.springframework.web.context.ContextLoader.initWebApplicationContext(ContextLoader.java:278)
	at org.springframework.web.context.ContextLoaderListener.contextInitialized(ContextLoaderListener.java:103)
	at org.geoserver.platform.GeoServerContextLoaderListener.contextInitialized(GeoServerContextLoaderListener.java:22)
	at org.apache.catalina.core.StandardContext.listenerStart(StandardContext.java:4462)
	at org.apache.catalina.core.StandardContext.startInternal(StandardContext.java:4914)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:171)
	at org.apache.catalina.core.ContainerBase.addChildInternal(ContainerBase.java:683)
	at org.apache.catalina.core.ContainerBase.addChild(ContainerBase.java:658)
	at org.apache.catalina.core.StandardHost.addChild(StandardHost.java:661)
	at org.apache.catalina.startup.HostConfig.deployDirectory(HostConfig.java:1184)
	at org.apache.catalina.startup.HostConfig$DeployDirectory.run(HostConfig.java:1932)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at org.apache.tomcat.util.threads.InlineExecutorService.execute(InlineExecutorService.java:75)
	at java.base/java.util.concurrent.AbstractExecutorService.submit(AbstractExecutorService.java:118)
	at org.apache.catalina.startup.HostConfig.deployDirectories(HostConfig.java:1094)
	at org.apache.catalina.startup.HostConfig.deployApps(HostConfig.java:476)
	at org.apache.catalina.startup.HostConfig.start(HostConfig.java:1617)
	at org.apache.catalina.startup.HostConfig.lifecycleEvent(HostConfig.java:318)
	at org.apache.catalina.util.LifecycleBase.fireLifecycleEvent(LifecycleBase.java:114)
	at org.apache.catalina.util.LifecycleBase.setStateInternal(LifecycleBase.java:402)
	at org.apache.catalina.util.LifecycleBase.setState(LifecycleBase.java:345)
	at org.apache.catalina.core.ContainerBase.startInternal(ContainerBase.java:893)
	at org.apache.catalina.core.StandardHost.startInternal(StandardHost.java:794)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:171)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1332)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1322)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at org.apache.tomcat.util.threads.InlineExecutorService.execute(InlineExecutorService.java:75)
	at java.base/java.util.concurrent.AbstractExecutorService.submit(AbstractExecutorService.java:140)
	at org.apache.catalina.core.ContainerBase.startInternal(ContainerBase.java:866)
	at org.apache.catalina.core.StandardEngine.startInternal(StandardEngine.java:248)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:171)
	at org.apache.catalina.core.StandardService.startInternal(StandardService.java:433)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:171)
	at org.apache.catalina.core.StandardServer.startInternal(StandardServer.java:921)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:171)
	at org.apache.catalina.startup.Catalina.start(Catalina.java:772)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.apache.catalina.startup.Bootstrap.start(Bootstrap.java:347)
	at org.apache.catalina.startup.Bootstrap.main(Bootstrap.java:478)
Caused by: org.jasypt.exceptions.EncryptionOperationNotPossibleException
	at org.jasypt.encryption.pbe.StandardPBEByteEncryptor.decrypt(StandardPBEByteEncryptor.java:1055)
	at org.jasypt.encryption.pbe.StandardPBEStringEncryptor.decrypt(StandardPBEStringEncryptor.java:725)
	at org.geoserver.security.password.GeoServerPBEPasswordEncoder.decode(GeoServerPBEPasswordEncoder.java:176)
	at org.geoserver.security.password.ConfigurationPasswordEncryptionHelper.decode(ConfigurationPasswordEncryptionHelper.java:208)
	at org.geoserver.security.password.ConfigurationPasswordEncryptionHelper.decode(ConfigurationPasswordEncryptionHelper.java:192)
	at org.geoserver.config.util.XStreamPersister$StoreInfoConverter.doUnmarshal(XStreamPersister.java:1875)
	at com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter.unmarshal(AbstractReflectionConverter.java:277)
	at com.thoughtworks.xstream.core.TreeUnmarshaller.convert(TreeUnmarshaller.java:74)
	... 140 more
19 Apr 09:20:07 WARN   [org.geoserver] - Failed to load data store 'Postgres_general'
com.thoughtworks.xstream.converters.ConversionException: 
---- Debugging information ----
cause-exception     : org.jasypt.exceptions.EncryptionOperationNotPossibleException
cause-message       : null
class               : org.geoserver.catalog.impl.DataStoreInfoImpl
required-type       : org.geoserver.catalog.impl.DataStoreInfoImpl
converter-type      : org.geoserver.config.util.XStreamPersister$StoreInfoConverter
line number         : 33
version             : 2.24.1
-------------------------------
	at com.thoughtworks.xstream.core.TreeUnmarshaller.convert(TreeUnmarshaller.java:81)
	at com.thoughtworks.xstream.core.TreeUnmarshaller.convertAnother(TreeUnmarshaller.java:68)
	at com.thoughtworks.xstream.core.TreeUnmarshaller.convertAnother(TreeUnmarshaller.java:52)
	at com.thoughtworks.xstream.core.TreeUnmarshaller.start(TreeUnmarshaller.java:136)
	at com.thoughtworks.xstream.core.AbstractTreeMarshallingStrategy.unmarshal(AbstractTreeMarshallingStrategy.java:32)
	at com.thoughtworks.xstream.XStream.unmarshal(XStream.java:1464)
	at com.thoughtworks.xstream.XStream.unmarshal(XStream.java:1441)
	at com.thoughtworks.xstream.XStream.fromXML(XStream.java:1330)
	at org.geoserver.config.util.XStreamPersister.load(XStreamPersister.java:721)
	at org.geoserver.config.GeoServerLoader.depersist(GeoServerLoader.java:1138)
	at org.geoserver.config.GeoServerLoader.loadDataStore(GeoServerLoader.java:820)
	at org.geoserver.config.GeoServerLoader.readCatalog(GeoServerLoader.java:664)
	at org.geoserver.config.GeoServerLoader.readCatalog(GeoServerLoader.java:479)
	at org.geoserver.config.DefaultGeoServerLoader.loadCatalog(DefaultGeoServerLoader.java:37)
	at org.geoserver.config.GeoServerLoader.postProcessBeforeInitializationCatalog(GeoServerLoader.java:329)
	at org.geoserver.config.GeoServerLoader.postProcessBeforeInitialization(GeoServerLoader.java:280)
	at org.geoserver.config.GeoServerLoaderProxy.postProcessBeforeInitialization(GeoServerLoaderProxy.java:61)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyBeanPostProcessorsBeforeInitialization(AbstractAutowireCapableBeanFactory.java:440)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1796)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:620)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:330)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:113)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveConstructorArguments(ConstructorResolver.java:707)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:198)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1372)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1222)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:582)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:322)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:330)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:113)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveConstructorArguments(ConstructorResolver.java:707)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:198)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1372)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1222)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:582)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:330)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:113)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveConstructorArguments(ConstructorResolver.java:707)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:198)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1372)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1222)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:582)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:330)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:113)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveConstructorArguments(ConstructorResolver.java:707)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:198)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1372)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1222)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:582)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.getBeansOfType(DefaultListableBeanFactory.java:673)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.getBeansOfType(DefaultListableBeanFactory.java:661)
	at org.springframework.context.support.AbstractApplicationContext.getBeansOfType(AbstractApplicationContext.java:1302)
	at org.geowebcache.GeoWebCacheExtensions.getBeansNamesOrderedByPriority(GeoWebCacheExtensions.java:158)
	at org.geowebcache.GeoWebCacheExtensions.extensions(GeoWebCacheExtensions.java:103)
	at org.geowebcache.config.XMLConfiguration.getConfiguredXStreamWithContext(XMLConfiguration.java:455)
	at org.geowebcache.config.XMLConfiguration.getConfiguredXStreamWithContext(XMLConfiguration.java:361)
	at org.geowebcache.config.XMLConfiguration.loadConfiguration(XMLConfiguration.java:327)
	at org.geowebcache.config.XMLConfiguration.loadConfiguration(XMLConfiguration.java:316)
	at org.geowebcache.config.XMLConfiguration.afterPropertiesSet(XMLConfiguration.java:841)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1863)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1800)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:620)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:955)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:920)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:583)
	at org.springframework.web.context.ContextLoader.configureAndRefreshWebApplicationContext(ContextLoader.java:399)
	at org.springframework.web.context.ContextLoader.initWebApplicationContext(ContextLoader.java:278)
	at org.springframework.web.context.ContextLoaderListener.contextInitialized(ContextLoaderListener.java:103)
	at org.geoserver.platform.GeoServerContextLoaderListener.contextInitialized(GeoServerContextLoaderListener.java:22)
	at org.apache.catalina.core.StandardContext.listenerStart(StandardContext.java:4462)
	at org.apache.catalina.core.StandardContext.startInternal(StandardContext.java:4914)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:171)
	at org.apache.catalina.core.ContainerBase.addChildInternal(ContainerBase.java:683)
	at org.apache.catalina.core.ContainerBase.addChild(ContainerBase.java:658)
	at org.apache.catalina.core.StandardHost.addChild(StandardHost.java:661)
	at org.apache.catalina.startup.HostConfig.deployDirectory(HostConfig.java:1184)
	at org.apache.catalina.startup.HostConfig$DeployDirectory.run(HostConfig.java:1932)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at org.apache.tomcat.util.threads.InlineExecutorService.execute(InlineExecutorService.java:75)
	at java.base/java.util.concurrent.AbstractExecutorService.submit(AbstractExecutorService.java:118)
	at org.apache.catalina.startup.HostConfig.deployDirectories(HostConfig.java:1094)
	at org.apache.catalina.startup.HostConfig.deployApps(HostConfig.java:476)
	at org.apache.catalina.startup.HostConfig.start(HostConfig.java:1617)
	at org.apache.catalina.startup.HostConfig.lifecycleEvent(HostConfig.java:318)
	at org.apache.catalina.util.LifecycleBase.fireLifecycleEvent(LifecycleBase.java:114)
	at org.apache.catalina.util.LifecycleBase.setStateInternal(LifecycleBase.java:402)
	at org.apache.catalina.util.LifecycleBase.setState(LifecycleBase.java:345)
	at org.apache.catalina.core.ContainerBase.startInternal(ContainerBase.java:893)
	at org.apache.catalina.core.StandardHost.startInternal(StandardHost.java:794)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:171)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1332)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1322)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at org.apache.tomcat.util.threads.InlineExecutorService.execute(InlineExecutorService.java:75)
	at java.base/java.util.concurrent.AbstractExecutorService.submit(AbstractExecutorService.java:140)
	at org.apache.catalina.core.ContainerBase.startInternal(ContainerBase.java:866)
	at org.apache.catalina.core.StandardEngine.startInternal(StandardEngine.java:248)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:171)
	at org.apache.catalina.core.StandardService.startInternal(StandardService.java:433)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:171)
	at org.apache.catalina.core.StandardServer.startInternal(StandardServer.java:921)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:171)
	at org.apache.catalina.startup.Catalina.start(Catalina.java:772)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.apache.catalina.startup.Bootstrap.start(Bootstrap.java:347)
	at org.apache.catalina.startup.Bootstrap.main(Bootstrap.java:478)
Caused by: org.jasypt.exceptions.EncryptionOperationNotPossibleException
	at org.jasypt.encryption.pbe.StandardPBEByteEncryptor.decrypt(StandardPBEByteEncryptor.java:1055)
	at org.jasypt.encryption.pbe.StandardPBEStringEncryptor.decrypt(StandardPBEStringEncryptor.java:725)
	at org.geoserver.security.password.GeoServerPBEPasswordEncoder.decode(GeoServerPBEPasswordEncoder.java:176)
	at org.geoserver.security.password.ConfigurationPasswordEncryptionHelper.decode(ConfigurationPasswordEncryptionHelper.java:208)
	at org.geoserver.security.password.ConfigurationPasswordEncryptionHelper.decode(ConfigurationPasswordEncryptionHelper.java:192)
	at org.geoserver.config.util.XStreamPersister$StoreInfoConverter.doUnmarshal(XStreamPersister.java:1875)
	at com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter.unmarshal(AbstractReflectionConverter.java:277)
	at com.thoughtworks.xstream.core.TreeUnmarshaller.convert(TreeUnmarshaller.java:74)
	... 140 more
19 Apr 09:20:07 WARN   [org.geoserver] - Failed to load data store 'Scotland'
com.thoughtworks.xstream.converters.ConversionException: 
---- Debugging information ----
cause-exception     : org.jasypt.exceptions.EncryptionOperationNotPossibleException
cause-message       : null
class               : org.geoserver.catalog.impl.DataStoreInfoImpl
required-type       : org.geoserver.catalog.impl.DataStoreInfoImpl
converter-type      : org.geoserver.config.util.XStreamPersister$StoreInfoConverter
line number         : 32
version             : 2.24.1
-------------------------------
	at com.thoughtworks.xstream.core.TreeUnmarshaller.convert(TreeUnmarshaller.java:81)
	at com.thoughtworks.xstream.core.TreeUnmarshaller.convertAnother(TreeUnmarshaller.java:68)
	at com.thoughtworks.xstream.core.TreeUnmarshaller.convertAnother(TreeUnmarshaller.java:52)
	at com.thoughtworks.xstream.core.TreeUnmarshaller.start(TreeUnmarshaller.java:136)
	at com.thoughtworks.xstream.core.AbstractTreeMarshallingStrategy.unmarshal(AbstractTreeMarshallingStrategy.java:32)
	at com.thoughtworks.xstream.XStream.unmarshal(XStream.java:1464)
	at com.thoughtworks.xstream.XStream.unmarshal(XStream.java:1441)
	at com.thoughtworks.xstream.XStream.fromXML(XStream.java:1330)
	at org.geoserver.config.util.XStreamPersister.load(XStreamPersister.java:721)
	at org.geoserver.config.GeoServerLoader.depersist(GeoServerLoader.java:1138)
	at org.geoserver.config.GeoServerLoader.loadDataStore(GeoServerLoader.java:820)
	at org.geoserver.config.GeoServerLoader.readCatalog(GeoServerLoader.java:664)
	at org.geoserver.config.GeoServerLoader.readCatalog(GeoServerLoader.java:479)
	at org.geoserver.config.DefaultGeoServerLoader.loadCatalog(DefaultGeoServerLoader.java:37)
	at org.geoserver.config.GeoServerLoader.postProcessBeforeInitializationCatalog(GeoServerLoader.java:329)
	at org.geoserver.config.GeoServerLoader.postProcessBeforeInitialization(GeoServerLoader.java:280)
	at org.geoserver.config.GeoServerLoaderProxy.postProcessBeforeInitialization(GeoServerLoaderProxy.java:61)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyBeanPostProcessorsBeforeInitialization(AbstractAutowireCapableBeanFactory.java:440)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1796)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:620)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:330)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:113)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveConstructorArguments(ConstructorResolver.java:707)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:198)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1372)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1222)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:582)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:322)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:330)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:113)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveConstructorArguments(ConstructorResolver.java:707)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:198)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1372)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1222)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:582)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:330)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:113)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveConstructorArguments(ConstructorResolver.java:707)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:198)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1372)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1222)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:582)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:330)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:113)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveConstructorArguments(ConstructorResolver.java:707)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:198)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1372)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1222)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:582)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.getBeansOfType(DefaultListableBeanFactory.java:673)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.getBeansOfType(DefaultListableBeanFactory.java:661)
	at org.springframework.context.support.AbstractApplicationContext.getBeansOfType(AbstractApplicationContext.java:1302)
	at org.geowebcache.GeoWebCacheExtensions.getBeansNamesOrderedByPriority(GeoWebCacheExtensions.java:158)
	at org.geowebcache.GeoWebCacheExtensions.extensions(GeoWebCacheExtensions.java:103)
	at org.geowebcache.config.XMLConfiguration.getConfiguredXStreamWithContext(XMLConfiguration.java:455)
	at org.geowebcache.config.XMLConfiguration.getConfiguredXStreamWithContext(XMLConfiguration.java:361)
	at org.geowebcache.config.XMLConfiguration.loadConfiguration(XMLConfiguration.java:327)
	at org.geowebcache.config.XMLConfiguration.loadConfiguration(XMLConfiguration.java:316)
	at org.geowebcache.config.XMLConfiguration.afterPropertiesSet(XMLConfiguration.java:841)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1863)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1800)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:620)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:955)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:920)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:583)
	at org.springframework.web.context.ContextLoader.configureAndRefreshWebApplicationContext(ContextLoader.java:399)
	at org.springframework.web.context.ContextLoader.initWebApplicationContext(ContextLoader.java:278)
	at org.springframework.web.context.ContextLoaderListener.contextInitialized(ContextLoaderListener.java:103)
	at org.geoserver.platform.GeoServerContextLoaderListener.contextInitialized(GeoServerContextLoaderListener.java:22)
	at org.apache.catalina.core.StandardContext.listenerStart(StandardContext.java:4462)
	at org.apache.catalina.core.StandardContext.startInternal(StandardContext.java:4914)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:171)
	at org.apache.catalina.core.ContainerBase.addChildInternal(ContainerBase.java:683)
	at org.apache.catalina.core.ContainerBase.addChild(ContainerBase.java:658)
	at org.apache.catalina.core.StandardHost.addChild(StandardHost.java:661)
	at org.apache.catalina.startup.HostConfig.deployDirectory(HostConfig.java:1184)
	at org.apache.catalina.startup.HostConfig$DeployDirectory.run(HostConfig.java:1932)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at org.apache.tomcat.util.threads.InlineExecutorService.execute(InlineExecutorService.java:75)
	at java.base/java.util.concurrent.AbstractExecutorService.submit(AbstractExecutorService.java:118)
	at org.apache.catalina.startup.HostConfig.deployDirectories(HostConfig.java:1094)
	at org.apache.catalina.startup.HostConfig.deployApps(HostConfig.java:476)
	at org.apache.catalina.startup.HostConfig.start(HostConfig.java:1617)
	at org.apache.catalina.startup.HostConfig.lifecycleEvent(HostConfig.java:318)
	at org.apache.catalina.util.LifecycleBase.fireLifecycleEvent(LifecycleBase.java:114)
	at org.apache.catalina.util.LifecycleBase.setStateInternal(LifecycleBase.java:402)
	at org.apache.catalina.util.LifecycleBase.setState(LifecycleBase.java:345)
	at org.apache.catalina.core.ContainerBase.startInternal(ContainerBase.java:893)
	at org.apache.catalina.core.StandardHost.startInternal(StandardHost.java:794)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:171)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1332)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1322)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at org.apache.tomcat.util.threads.InlineExecutorService.execute(InlineExecutorService.java:75)
	at java.base/java.util.concurrent.AbstractExecutorService.submit(AbstractExecutorService.java:140)
	at org.apache.catalina.core.ContainerBase.startInternal(ContainerBase.java:866)
	at org.apache.catalina.core.StandardEngine.startInternal(StandardEngine.java:248)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:171)
	at org.apache.catalina.core.StandardService.startInternal(StandardService.java:433)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:171)
	at org.apache.catalina.core.StandardServer.startInternal(StandardServer.java:921)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:171)
	at org.apache.catalina.startup.Catalina.start(Catalina.java:772)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.apache.catalina.startup.Bootstrap.start(Bootstrap.java:347)
	at org.apache.catalina.startup.Bootstrap.main(Bootstrap.java:478)
Caused by: org.jasypt.exceptions.EncryptionOperationNotPossibleException
	at org.jasypt.encryption.pbe.StandardPBEByteEncryptor.decrypt(StandardPBEByteEncryptor.java:1055)
	at org.jasypt.encryption.pbe.StandardPBEStringEncryptor.decrypt(StandardPBEStringEncryptor.java:725)
	at org.geoserver.security.password.GeoServerPBEPasswordEncoder.decode(GeoServerPBEPasswordEncoder.java:176)
	at org.geoserver.security.password.ConfigurationPasswordEncryptionHelper.decode(ConfigurationPasswordEncryptionHelper.java:208)
	at org.geoserver.security.password.ConfigurationPasswordEncryptionHelper.decode(ConfigurationPasswordEncryptionHelper.java:192)
	at org.geoserver.config.util.XStreamPersister$StoreInfoConverter.doUnmarshal(XStreamPersister.java:1875)
	at com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter.unmarshal(AbstractReflectionConverter.java:277)
	at com.thoughtworks.xstream.core.TreeUnmarshaller.convert(TreeUnmarshaller.java:74)
	... 140 more
19 Apr 09:20:07 WARN   [geoserver.security] - Could not find factory for store : DataStoreInfoImpl[mysql-stg]. Unable to encrypt connection parameters.
19 Apr 09:20:07 CONFIG [org.geoserver] - Loaded data store 'mysql-stg', enabled
19 Apr 09:20:07 CONFIG [org.geoserver] - Loaded feature type 'vw_pomsapp_place', enabled
19 Apr 09:20:07 CONFIG [org.geoserver] - Loaded layer 'vw_pomsapp_place'
19 Apr 09:20:07 CONFIG [org.geoserver] - Loaded data store 'historic_scottish_landuse', enabled
19 Apr 09:20:07 CONFIG [org.geoserver] - Loaded feature type 'historic_scottish_lu_from_tab_2015_08', enabled
19 Apr 09:20:07 CONFIG [org.geoserver] - Loaded layer 'historic_scottish_lu_from_tab_2015_08'
19 Apr 09:20:07 CONFIG [org.geoserver] - Loaded feature type 'scotland_parish_1930_4326', enabled
19 Apr 09:20:07 CONFIG [org.geoserver] - Loaded layer 'scotland_parish_1930_4326'
19 Apr 09:20:07 CONFIG [org.geoserver] - Loaded feature type 'scottish_medieval_landuse_2015_08', enabled
19 Apr 09:20:07 CONFIG [org.geoserver] - Loaded layer 'scottish_medieval_landuse_2015_08'
19 Apr 09:20:07 CONFIG [org.geoserver] - Loaded data store 'sf', enabled
19 Apr 09:20:07 CONFIG [org.geoserver] - Loaded feature type 'restricted', enabled
19 Apr 09:20:07 CONFIG [org.geoserver] - Loaded layer 'restricted'
19 Apr 09:20:07 CONFIG [org.geoserver] - Loaded feature type 'bugsites', enabled
19 Apr 09:20:07 CONFIG [org.geoserver] - Loaded layer 'bugsites'
19 Apr 09:20:07 CONFIG [org.geoserver] - Loaded feature type 'streams', enabled
19 Apr 09:20:07 CONFIG [org.geoserver] - Loaded layer 'streams'
19 Apr 09:20:07 CONFIG [org.geoserver] - Loaded feature type 'archsites', enabled
19 Apr 09:20:07 CONFIG [org.geoserver] - Loaded layer 'archsites'
19 Apr 09:20:07 CONFIG [org.geoserver] - Loaded feature type 'roads', enabled
19 Apr 09:20:07 CONFIG [org.geoserver] - Loaded layer 'roads'
19 Apr 09:20:07 CONFIG [org.geoserver] - Loaded coverage store 'sfdem', enabled
19 Apr 09:20:07 CONFIG [org.geoserver] - Loaded coverage 'sfdem', enabled
19 Apr 09:20:07 CONFIG [org.geoserver] - Loaded layer 'sfdem'
19 Apr 09:20:07 CONFIG [org.geoserver] - Loaded data store 'taz_shapes', enabled
19 Apr 09:20:07 CONFIG [org.geoserver] - Loaded feature type 'tasmania_water_bodies', enabled
19 Apr 09:20:07 CONFIG [org.geoserver] - Loaded layer 'tasmania_water_bodies'
19 Apr 09:20:07 CONFIG [org.geoserver] - Loaded feature type 'tasmania_cities', enabled
19 Apr 09:20:07 CONFIG [org.geoserver] - Loaded layer 'tasmania_cities'
19 Apr 09:20:07 CONFIG [org.geoserver] - Loaded feature type 'tasmania_state_boundaries', enabled
19 Apr 09:20:07 CONFIG [org.geoserver] - Loaded layer 'tasmania_state_boundaries'
19 Apr 09:20:07 CONFIG [org.geoserver] - Loaded feature type 'tasmania_roads', enabled
19 Apr 09:20:07 CONFIG [org.geoserver] - Loaded layer 'tasmania_roads'
19 Apr 09:20:07 CONFIG [org.geoserver] - Loaded data store 'states_shapefile', enabled
19 Apr 09:20:07 CONFIG [org.geoserver] - Loaded feature type 'states', enabled
19 Apr 09:20:07 CONFIG [org.geoserver] - Loaded layer 'states'
19 Apr 09:20:07 CONFIG [org.geoserver] - Loaded data store 'NaturalEarth', enabled
19 Apr 09:20:07 CONFIG [org.geoserver] - Loaded feature type 'boundary_lines', enabled
19 Apr 09:20:07 CONFIG [org.geoserver] - Loaded layer 'boundary_lines'
19 Apr 09:20:07 CONFIG [org.geoserver] - Loaded feature type 'disputed_areas', enabled
19 Apr 09:20:07 CONFIG [org.geoserver] - Loaded layer 'disputed_areas'
19 Apr 09:20:07 CONFIG [org.geoserver] - Loaded feature type 'populated_places', enabled
19 Apr 09:20:07 CONFIG [org.geoserver] - Loaded layer 'populated_places'
19 Apr 09:20:07 CONFIG [org.geoserver] - Loaded feature type 'coastlines', enabled
19 Apr 09:20:07 CONFIG [org.geoserver] - Loaded layer 'coastlines'
19 Apr 09:20:07 CONFIG [org.geoserver] - Loaded feature type 'countries', enabled
19 Apr 09:20:07 CONFIG [org.geoserver] - Loaded layer 'countries'
19 Apr 09:20:07 CONFIG [org.geoserver] - Loaded layer group 'world'
19 Apr 09:20:07 CONFIG [org.geoserver] - Loaded layer group 'tiger-ny'
19 Apr 09:20:07 CONFIG [org.geoserver] - Loaded layer group 'aster_blend_test'
19 Apr 09:20:07 CONFIG [org.geoserver] - Loaded layer group 'world_simple'
19 Apr 09:20:07 CONFIG [org.geoserver] - Loaded layer group 'PDE_style_test'
19 Apr 09:20:07 CONFIG [org.geoserver] - Loaded layer group 'County_label'
19 Apr 09:20:07 CONFIG [org.geoserver] - Loaded layer group 'PDE_rivers'
19 Apr 09:20:07 CONFIG [org.geoserver] - Loaded layer group 'PDE_simple_backdrop'
19 Apr 09:20:07 CONFIG [org.geoserver] - Loaded layer group 'spearfish'
19 Apr 09:20:07 CONFIG [org.geoserver] - Loaded layer group 'koro_group'
19 Apr 09:20:07 CONFIG [org.geoserver] - Loaded layer group 'citywitness_finals'
19 Apr 09:20:07 CONFIG [org.geoserver] - Loaded layer group 'PDE_National_Borders'
19 Apr 09:20:07 CONFIG [org.geoserver] - Loaded layer group 'Scrapbook test'
19 Apr 09:20:07 CONFIG [org.geoserver] - Loaded layer group 'TMS_Style_CW'
19 Apr 09:20:07 CONFIG [org.geoserver] - Loaded layer group 'tasmania'
19 Apr 09:20:07 CONFIG [org.geoserver] - Loaded layer group 'PDE_Rivers_2'
19 Apr 09:20:07 CONFIG [org.geoserver] - Read catalog in 2.661 s
19 Apr 09:20:07 CONFIG [config.XMLConfiguration] - Initializing GridSets from gwc
19 Apr 09:20:07 CONFIG [config.XMLConfiguration] - Initializing layers from gwc
19 Apr 09:20:07 CONFIG [gwc.layer] - Initializing GWC configuration based on GeoServer's Catalog
19 Apr 09:20:07 CONFIG [gwc.layer] - GeoServer TileLayer store base directory is: gwc-layers
19 Apr 09:20:07 CONFIG [gwc.layer] - Loading tile layers from gwc-layers
19 Apr 09:20:07 CONFIG [gwc.layer] - Loaded 28 tile layers in 27.31 ms
19 Apr 09:20:07 CONFIG [storage.BlobStoreAggregator] - BlobStoreConfiguration gwc contained no blob store infos.
19 Apr 09:20:07 CONFIG [storage.DefaultStorageFinder] - Found system environment variableGEOSERVER_DATA_DIR set to /opt/geoserver_data/, using it as the default prefix.
19 Apr 09:20:08 CONFIG [geowebcache.GeoWebCacheDispatcher] - Invoked setServletPrefix(gwc)
19 Apr 09:20:08 CONFIG [wms.WMSService] - Will NOT recombine tiles for non-tiling clients.
19 Apr 09:20:08 CONFIG [wms.WMSService] - Will proxy requests to backend that are not getmap or getcapabilities.
19 Apr 09:20:08 CONFIG [org.geoserver] - Loaded service 'WMTSInfoImpl--288a2c05:1786a499f45:-7ff2', enabled
19 Apr 09:20:08 CONFIG [org.geoserver] - Loaded service 'wcs', enabled
19 Apr 09:20:08 CONFIG [org.geoserver] - Loaded service 'wfs', enabled
19 Apr 09:20:08 CONFIG [org.geoserver] - Loaded service 'wms', enabled
19 Apr 09:20:08 CONFIG [org.geoserver] - Loaded service 'WCSInfoImpl--19e1b629:13c90fa1a61:-7461', enabled
19 Apr 09:20:08 CONFIG [org.geoserver] - Loaded service 'WFSInfoImpl--19e1b629:13c90fa1a61:-7460', enabled
19 Apr 09:20:08 CONFIG [org.geoserver] - Loaded service 'WMSInfoImpl--19e1b629:13c90fa1a61:-745f', enabled
19 Apr 09:20:08 CONFIG [org.geoserver] - Loaded service 'WMTSInfoImpl-1c443fee:182c0f3f209:-7f98', enabled
19 Apr 09:20:08 CONFIG [org.geoserver] - Loaded service 'WCSInfoImpl-1c443fee:182c0f3f209:-7f96', enabled
19 Apr 09:20:08 CONFIG [org.geoserver] - Loaded service 'WFSInfoImpl-1c443fee:182c0f3f209:-7f97', enabled
19 Apr 09:20:08 CONFIG [org.geoserver] - Loaded service 'WMSInfoImpl-1c443fee:182c0f3f209:-7f99', enabled
19 Apr 09:20:08 CONFIG [gwc.config] - Initializing GeoServer specific GWC configuration from gwc-gs.xml
19 Apr 09:20:08 CONFIG [gwc.config] - Will look for 'geowebcache-diskquota.xml' in directory '/opt/geoserver_data/gwc'.
19 Apr 09:20:08 CONFIG [gwc.config] - Will look for 'geowebcache-diskquota-jdbc.xml' in directory '/opt/geoserver_data/gwc'.
19 Apr 09:20:08 CONFIG [diskquota.ConfigLoader] - DiskQuota configuration is not readable: gwc/geowebcache-diskquota.xml
19 Apr 09:20:08 CONFIG [diskquota.ConfigLoader] - DiskQuota configuration is not readable: gwc/geowebcache-diskquota.xml
19 Apr 09:20:12 CONFIG [diskquota.ConfigLoader] - DiskQuota configuration is not readable: gwc/geowebcache-diskquota.xml
19 Apr 09:20:12 CONFIG [diskquota.DiskQuotaMonitor] - Setting up disk quota periodic enforcement task
19 Apr 09:20:12 CONFIG [diskquota.DiskQuotaMonitor] - 0 layers configured with their own quotas. 
19 Apr 09:20:12 CONFIG [diskquota.DiskQuotaMonitor] - 28 layers attached to global quota 500.0 MB
19 Apr 09:20:12 CONFIG [diskquota.DiskQuotaMonitor] - Disk quota periodic enforcement task set up every 10 SECONDS
19 Apr 09:20:12 CONFIG [geoserver.security] - Start reloading user/groups for service named default
19 Apr 09:20:12 CONFIG [geoserver.security] - Reloading user/groups successful for service named default
19 Apr 09:20:12 CONFIG [geoserver.security] - AuthenticationCache Initialized with 1000 Max Entries, 300 seconds idle time, 600 seconds time to live and 3 concurrency level
19 Apr 09:20:12 CONFIG [geoserver.security] - AuthenticationCache Eviction Task created to run every 600 seconds
19 Apr 09:22:16 CONFIG [gwc.layer] - GeoServer TileLayer store base directory is: gwc-layers
19 Apr 09:22:16 CONFIG [gwc.layer] - Loading tile layers from gwc-layers
19 Apr 09:22:16 CONFIG [gwc.layer] - Loaded 28 tile layers in 20.31 ms
19 Apr 09:22:16 WARN   [support.DisposableBeanAdapter] - Custom destroy method 'destroy' on bean with name 'gwcMemoryBlobStore' threw an exception: java.util.concurrent.RejectedExecutionException: Task java.util.concurrent.FutureTask@79a1f45c[Not completed, task = org.geowebcache.storage.blobstore.memory.MemoryBlobStore$BlobStoreTask@451a0188] rejected from java.util.concurrent.ThreadPoolExecutor@1080bcb1[Terminated, pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 1]
19 Apr 09:22:16 INFO   [geoserver.logging] - Beginning GeoServer cleanup sequence
19 Apr 09:22:38 CONFIG [geoserver.logging] - Log4j 2 configuration set to DEFAULT_LOGGING.xml
19 Apr 09:22:40 CONFIG [gwc.config] - Will look for 'geowebcache.xml' in directory '/opt/geoserver_data/gwc'.
19 Apr 09:22:40 WARN   [config.XMLConfiguration] - GWC configuration validation error: cvc-elt.1.a: Cannot find the declaration of element 'gwcConfiguration'.
19 Apr 09:22:40 WARN   [config.XMLConfiguration] - Will try to use configuration anyway. Please check the order of declared elements against the schema.
19 Apr 09:22:40 CONFIG [org.geoserver] - GeoServer configuration lock is enabled
19 Apr 09:22:40 CONFIG [org.geoserver] - Loading catalog /opt/geoserver_data
19 Apr 09:22:40 CONFIG [org.geoserver] - Loaded style 'simple_roads'
19 Apr 09:22:40 CONFIG [org.geoserver] - Loaded style 'pophatch'
19 Apr 09:22:40 CONFIG [org.geoserver] - Loaded style 'burg'
19 Apr 09:22:40 CONFIG [org.geoserver] - Loaded style 'giant_polygon'
19 Apr 09:22:40 CONFIG [org.geoserver] - Loaded style 'population'
19 Apr 09:22:40 CONFIG [org.geoserver] - Loaded style 'poi'
19 Apr 09:22:40 CONFIG [org.geoserver] - Loaded style 'polygon'
19 Apr 09:22:40 CONFIG [org.geoserver] - Loaded style 'raster'
19 Apr 09:22:40 CONFIG [org.geoserver] - Loaded style 'simple_streams'
19 Apr 09:22:40 CONFIG [org.geoserver] - Loaded style 'restricted'
19 Apr 09:22:40 CONFIG [org.geoserver] - Loaded style 'point'
19 Apr 09:22:40 CONFIG [org.geoserver] - Loaded style 'tiger_roads'
19 Apr 09:22:40 CONFIG [org.geoserver] - Loaded style 'green'
19 Apr 09:22:40 CONFIG [org.geoserver] - Loaded style 'grass'
19 Apr 09:22:40 CONFIG [org.geoserver] - Loaded style 'poly_landmarks'
19 Apr 09:22:40 CONFIG [org.geoserver] - Loaded style 'dem'
19 Apr 09:22:40 CONFIG [org.geoserver] - Loaded style 'capitals'
19 Apr 09:22:40 CONFIG [org.geoserver] - Loaded style 'line'
19 Apr 09:22:40 CONFIG [org.geoserver] - Loaded style 'generic'
19 Apr 09:22:40 CONFIG [org.geoserver] - Loaded style 'cite_lakes'
19 Apr 09:22:40 CONFIG [org.geoserver] - Loaded style 'rain'
19 Apr 09:22:40 CONFIG [org.geoserver] - Loaded default workspace 'ne'
19 Apr 09:22:40 CONFIG [org.geoserver] - Loaded workspace 'nurc'
19 Apr 09:22:40 CONFIG [org.geoserver] - Loaded workspace 'cite'
19 Apr 09:22:40 CONFIG [org.geoserver] - Loaded workspace 'tiger'
19 Apr 09:22:40 CONFIG [org.geoserver] - Loaded workspace 'it.geosolutions'
19 Apr 09:22:40 CONFIG [org.geoserver] - Loaded workspace 'PoMS'
19 Apr 09:22:40 CONFIG [org.geoserver] - Loaded workspace 'PDE_Postgres'
19 Apr 09:22:40 CONFIG [org.geoserver] - Loaded workspace 'sf'
19 Apr 09:22:40 CONFIG [org.geoserver] - Loaded workspace 'sde'
19 Apr 09:22:40 CONFIG [org.geoserver] - Loaded workspace 'topp'
19 Apr 09:22:40 CONFIG [org.geoserver] - Loaded workspace 'ne'
19 Apr 09:22:40 CONFIG [org.geoserver] - Loaded style 'coastline'
19 Apr 09:22:40 CONFIG [org.geoserver] - Loaded style 'populated_places'
19 Apr 09:22:40 CONFIG [org.geoserver] - Loaded style 'boundary_lines'
19 Apr 09:22:40 CONFIG [org.geoserver] - Loaded style 'countries_mapcolor9'
19 Apr 09:22:40 CONFIG [org.geoserver] - Loaded style 'disputed'
19 Apr 09:22:40 CONFIG [org.geoserver] - Loaded style 'countries'
19 Apr 09:22:41 CONFIG [org.geoserver] - Loaded coverage store 'mosaic', enabled
19 Apr 09:22:41 CONFIG [org.geoserver] - Loaded coverage 'mosaic', enabled
19 Apr 09:22:41 CONFIG [org.geoserver] - Loaded layer 'mosaic'
19 Apr 09:22:41 CONFIG [org.geoserver] - Loaded coverage store 'arcGridSample', enabled
19 Apr 09:22:41 CONFIG [org.geoserver] - Loaded coverage 'Arc_Sample', enabled
19 Apr 09:22:41 CONFIG [org.geoserver] - Loaded layer 'Arc_Sample'
19 Apr 09:22:41 CONFIG [org.geoserver] - Loaded coverage store 'img_sample2', enabled
19 Apr 09:22:41 CONFIG [org.geoserver] - Loaded coverage 'Pk50095', enabled
19 Apr 09:22:41 CONFIG [org.geoserver] - Loaded layer 'Pk50095'
19 Apr 09:22:41 CONFIG [org.geoserver] - Loaded coverage store 'worldImageSample', enabled
19 Apr 09:22:41 CONFIG [org.geoserver] - Loaded coverage 'Img_Sample', enabled
19 Apr 09:22:41 CONFIG [org.geoserver] - Loaded layer 'Img_Sample'
19 Apr 09:22:42 CONFIG [org.geoserver] - Loaded data store 'nyc', enabled
19 Apr 09:22:42 CONFIG [org.geoserver] - Loaded feature type 'poly_landmarks', enabled
19 Apr 09:22:42 CONFIG [org.geoserver] - Loaded layer 'poly_landmarks'
19 Apr 09:22:42 CONFIG [org.geoserver] - Loaded feature type 'poi', enabled
19 Apr 09:22:42 CONFIG [org.geoserver] - Loaded layer 'poi'
19 Apr 09:22:42 CONFIG [org.geoserver] - Loaded feature type 'giant_polygon', enabled
19 Apr 09:22:42 CONFIG [org.geoserver] - Loaded layer 'giant_polygon'
19 Apr 09:22:42 CONFIG [org.geoserver] - Loaded feature type 'tiger_roads', enabled
19 Apr 09:22:42 CONFIG [org.geoserver] - Loaded layer 'tiger_roads'
19 Apr 09:22:42 WARN   [org.geoserver] - Failed to load data store 'PDE_tables'
com.thoughtworks.xstream.converters.ConversionException: 
---- Debugging information ----
cause-exception     : org.jasypt.exceptions.EncryptionOperationNotPossibleException
cause-message       : null
class               : org.geoserver.catalog.impl.DataStoreInfoImpl
required-type       : org.geoserver.catalog.impl.DataStoreInfoImpl
converter-type      : org.geoserver.config.util.XStreamPersister$StoreInfoConverter
line number         : 33
version             : 2.24.1
-------------------------------
	at com.thoughtworks.xstream.core.TreeUnmarshaller.convert(TreeUnmarshaller.java:81)
	at com.thoughtworks.xstream.core.TreeUnmarshaller.convertAnother(TreeUnmarshaller.java:68)
	at com.thoughtworks.xstream.core.TreeUnmarshaller.convertAnother(TreeUnmarshaller.java:52)
	at com.thoughtworks.xstream.core.TreeUnmarshaller.start(TreeUnmarshaller.java:136)
	at com.thoughtworks.xstream.core.AbstractTreeMarshallingStrategy.unmarshal(AbstractTreeMarshallingStrategy.java:32)
	at com.thoughtworks.xstream.XStream.unmarshal(XStream.java:1464)
	at com.thoughtworks.xstream.XStream.unmarshal(XStream.java:1441)
	at com.thoughtworks.xstream.XStream.fromXML(XStream.java:1330)
	at org.geoserver.config.util.XStreamPersister.load(XStreamPersister.java:721)
	at org.geoserver.config.GeoServerLoader.depersist(GeoServerLoader.java:1138)
	at org.geoserver.config.GeoServerLoader.loadDataStore(GeoServerLoader.java:820)
	at org.geoserver.config.GeoServerLoader.readCatalog(GeoServerLoader.java:664)
	at org.geoserver.config.GeoServerLoader.readCatalog(GeoServerLoader.java:479)
	at org.geoserver.config.DefaultGeoServerLoader.loadCatalog(DefaultGeoServerLoader.java:37)
	at org.geoserver.config.GeoServerLoader.postProcessBeforeInitializationCatalog(GeoServerLoader.java:329)
	at org.geoserver.config.GeoServerLoader.postProcessBeforeInitialization(GeoServerLoader.java:280)
	at org.geoserver.config.GeoServerLoaderProxy.postProcessBeforeInitialization(GeoServerLoaderProxy.java:61)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyBeanPostProcessorsBeforeInitialization(AbstractAutowireCapableBeanFactory.java:440)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1796)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:620)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:330)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:113)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveConstructorArguments(ConstructorResolver.java:707)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:198)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1372)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1222)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:582)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:322)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:330)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:113)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveConstructorArguments(ConstructorResolver.java:707)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:198)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1372)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1222)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:582)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:330)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:113)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveConstructorArguments(ConstructorResolver.java:707)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:198)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1372)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1222)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:582)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:330)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:113)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveConstructorArguments(ConstructorResolver.java:707)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:198)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1372)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1222)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:582)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.getBeansOfType(DefaultListableBeanFactory.java:673)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.getBeansOfType(DefaultListableBeanFactory.java:661)
	at org.springframework.context.support.AbstractApplicationContext.getBeansOfType(AbstractApplicationContext.java:1302)
	at org.geowebcache.GeoWebCacheExtensions.getBeansNamesOrderedByPriority(GeoWebCacheExtensions.java:158)
	at org.geowebcache.GeoWebCacheExtensions.extensions(GeoWebCacheExtensions.java:103)
	at org.geowebcache.config.XMLConfiguration.getConfiguredXStreamWithContext(XMLConfiguration.java:455)
	at org.geowebcache.config.XMLConfiguration.getConfiguredXStreamWithContext(XMLConfiguration.java:361)
	at org.geowebcache.config.XMLConfiguration.loadConfiguration(XMLConfiguration.java:327)
	at org.geowebcache.config.XMLConfiguration.loadConfiguration(XMLConfiguration.java:316)
	at org.geowebcache.config.XMLConfiguration.afterPropertiesSet(XMLConfiguration.java:841)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1863)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1800)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:620)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:955)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:920)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:583)
	at org.springframework.web.context.ContextLoader.configureAndRefreshWebApplicationContext(ContextLoader.java:399)
	at org.springframework.web.context.ContextLoader.initWebApplicationContext(ContextLoader.java:278)
	at org.springframework.web.context.ContextLoaderListener.contextInitialized(ContextLoaderListener.java:103)
	at org.geoserver.platform.GeoServerContextLoaderListener.contextInitialized(GeoServerContextLoaderListener.java:22)
	at org.apache.catalina.core.StandardContext.listenerStart(StandardContext.java:4462)
	at org.apache.catalina.core.StandardContext.startInternal(StandardContext.java:4914)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:171)
	at org.apache.catalina.core.ContainerBase.addChildInternal(ContainerBase.java:683)
	at org.apache.catalina.core.ContainerBase.addChild(ContainerBase.java:658)
	at org.apache.catalina.core.StandardHost.addChild(StandardHost.java:661)
	at org.apache.catalina.startup.HostConfig.deployDirectory(HostConfig.java:1184)
	at org.apache.catalina.startup.HostConfig$DeployDirectory.run(HostConfig.java:1932)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at org.apache.tomcat.util.threads.InlineExecutorService.execute(InlineExecutorService.java:75)
	at java.base/java.util.concurrent.AbstractExecutorService.submit(AbstractExecutorService.java:118)
	at org.apache.catalina.startup.HostConfig.deployDirectories(HostConfig.java:1094)
	at org.apache.catalina.startup.HostConfig.deployApps(HostConfig.java:476)
	at org.apache.catalina.startup.HostConfig.start(HostConfig.java:1617)
	at org.apache.catalina.startup.HostConfig.lifecycleEvent(HostConfig.java:318)
	at org.apache.catalina.util.LifecycleBase.fireLifecycleEvent(LifecycleBase.java:114)
	at org.apache.catalina.util.LifecycleBase.setStateInternal(LifecycleBase.java:402)
	at org.apache.catalina.util.LifecycleBase.setState(LifecycleBase.java:345)
	at org.apache.catalina.core.ContainerBase.startInternal(ContainerBase.java:893)
	at org.apache.catalina.core.StandardHost.startInternal(StandardHost.java:794)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:171)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1332)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1322)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at org.apache.tomcat.util.threads.InlineExecutorService.execute(InlineExecutorService.java:75)
	at java.base/java.util.concurrent.AbstractExecutorService.submit(AbstractExecutorService.java:140)
	at org.apache.catalina.core.ContainerBase.startInternal(ContainerBase.java:866)
	at org.apache.catalina.core.StandardEngine.startInternal(StandardEngine.java:248)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:171)
	at org.apache.catalina.core.StandardService.startInternal(StandardService.java:433)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:171)
	at org.apache.catalina.core.StandardServer.startInternal(StandardServer.java:921)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:171)
	at org.apache.catalina.startup.Catalina.start(Catalina.java:772)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.apache.catalina.startup.Bootstrap.start(Bootstrap.java:347)
	at org.apache.catalina.startup.Bootstrap.main(Bootstrap.java:478)
Caused by: org.jasypt.exceptions.EncryptionOperationNotPossibleException
	at org.jasypt.encryption.pbe.StandardPBEByteEncryptor.decrypt(StandardPBEByteEncryptor.java:1055)
	at org.jasypt.encryption.pbe.StandardPBEStringEncryptor.decrypt(StandardPBEStringEncryptor.java:725)
	at org.geoserver.security.password.GeoServerPBEPasswordEncoder.decode(GeoServerPBEPasswordEncoder.java:176)
	at org.geoserver.security.password.ConfigurationPasswordEncryptionHelper.decode(ConfigurationPasswordEncryptionHelper.java:208)
	at org.geoserver.security.password.ConfigurationPasswordEncryptionHelper.decode(ConfigurationPasswordEncryptionHelper.java:192)
	at org.geoserver.config.util.XStreamPersister$StoreInfoConverter.doUnmarshal(XStreamPersister.java:1875)
	at com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter.unmarshal(AbstractReflectionConverter.java:277)
	at com.thoughtworks.xstream.core.TreeUnmarshaller.convert(TreeUnmarshaller.java:74)
	... 140 more
19 Apr 09:22:42 WARN   [org.geoserver] - Failed to load data store 'Scotland'
com.thoughtworks.xstream.converters.ConversionException: 
---- Debugging information ----
cause-exception     : org.jasypt.exceptions.EncryptionOperationNotPossibleException
cause-message       : null
class               : org.geoserver.catalog.impl.DataStoreInfoImpl
required-type       : org.geoserver.catalog.impl.DataStoreInfoImpl
converter-type      : org.geoserver.config.util.XStreamPersister$StoreInfoConverter
line number         : 32
version             : 2.24.1
-------------------------------
	at com.thoughtworks.xstream.core.TreeUnmarshaller.convert(TreeUnmarshaller.java:81)
	at com.thoughtworks.xstream.core.TreeUnmarshaller.convertAnother(TreeUnmarshaller.java:68)
	at com.thoughtworks.xstream.core.TreeUnmarshaller.convertAnother(TreeUnmarshaller.java:52)
	at com.thoughtworks.xstream.core.TreeUnmarshaller.start(TreeUnmarshaller.java:136)
	at com.thoughtworks.xstream.core.AbstractTreeMarshallingStrategy.unmarshal(AbstractTreeMarshallingStrategy.java:32)
	at com.thoughtworks.xstream.XStream.unmarshal(XStream.java:1464)
	at com.thoughtworks.xstream.XStream.unmarshal(XStream.java:1441)
	at com.thoughtworks.xstream.XStream.fromXML(XStream.java:1330)
	at org.geoserver.config.util.XStreamPersister.load(XStreamPersister.java:721)
	at org.geoserver.config.GeoServerLoader.depersist(GeoServerLoader.java:1138)
	at org.geoserver.config.GeoServerLoader.loadDataStore(GeoServerLoader.java:820)
	at org.geoserver.config.GeoServerLoader.readCatalog(GeoServerLoader.java:664)
	at org.geoserver.config.GeoServerLoader.readCatalog(GeoServerLoader.java:479)
	at org.geoserver.config.DefaultGeoServerLoader.loadCatalog(DefaultGeoServerLoader.java:37)
	at org.geoserver.config.GeoServerLoader.postProcessBeforeInitializationCatalog(GeoServerLoader.java:329)
	at org.geoserver.config.GeoServerLoader.postProcessBeforeInitialization(GeoServerLoader.java:280)
	at org.geoserver.config.GeoServerLoaderProxy.postProcessBeforeInitialization(GeoServerLoaderProxy.java:61)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyBeanPostProcessorsBeforeInitialization(AbstractAutowireCapableBeanFactory.java:440)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1796)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:620)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:330)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:113)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveConstructorArguments(ConstructorResolver.java:707)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:198)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1372)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1222)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:582)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:322)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:330)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:113)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveConstructorArguments(ConstructorResolver.java:707)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:198)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1372)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1222)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:582)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:330)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:113)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveConstructorArguments(ConstructorResolver.java:707)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:198)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1372)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1222)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:582)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:330)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:113)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveConstructorArguments(ConstructorResolver.java:707)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:198)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1372)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1222)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:582)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.getBeansOfType(DefaultListableBeanFactory.java:673)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.getBeansOfType(DefaultListableBeanFactory.java:661)
	at org.springframework.context.support.AbstractApplicationContext.getBeansOfType(AbstractApplicationContext.java:1302)
	at org.geowebcache.GeoWebCacheExtensions.getBeansNamesOrderedByPriority(GeoWebCacheExtensions.java:158)
	at org.geowebcache.GeoWebCacheExtensions.extensions(GeoWebCacheExtensions.java:103)
	at org.geowebcache.config.XMLConfiguration.getConfiguredXStreamWithContext(XMLConfiguration.java:455)
	at org.geowebcache.config.XMLConfiguration.getConfiguredXStreamWithContext(XMLConfiguration.java:361)
	at org.geowebcache.config.XMLConfiguration.loadConfiguration(XMLConfiguration.java:327)
	at org.geowebcache.config.XMLConfiguration.loadConfiguration(XMLConfiguration.java:316)
	at org.geowebcache.config.XMLConfiguration.afterPropertiesSet(XMLConfiguration.java:841)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1863)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1800)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:620)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:955)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:920)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:583)
	at org.springframework.web.context.ContextLoader.configureAndRefreshWebApplicationContext(ContextLoader.java:399)
	at org.springframework.web.context.ContextLoader.initWebApplicationContext(ContextLoader.java:278)
	at org.springframework.web.context.ContextLoaderListener.contextInitialized(ContextLoaderListener.java:103)
	at org.geoserver.platform.GeoServerContextLoaderListener.contextInitialized(GeoServerContextLoaderListener.java:22)
	at org.apache.catalina.core.StandardContext.listenerStart(StandardContext.java:4462)
	at org.apache.catalina.core.StandardContext.startInternal(StandardContext.java:4914)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:171)
	at org.apache.catalina.core.ContainerBase.addChildInternal(ContainerBase.java:683)
	at org.apache.catalina.core.ContainerBase.addChild(ContainerBase.java:658)
	at org.apache.catalina.core.StandardHost.addChild(StandardHost.java:661)
	at org.apache.catalina.startup.HostConfig.deployDirectory(HostConfig.java:1184)
	at org.apache.catalina.startup.HostConfig$DeployDirectory.run(HostConfig.java:1932)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at org.apache.tomcat.util.threads.InlineExecutorService.execute(InlineExecutorService.java:75)
	at java.base/java.util.concurrent.AbstractExecutorService.submit(AbstractExecutorService.java:118)
	at org.apache.catalina.startup.HostConfig.deployDirectories(HostConfig.java:1094)
	at org.apache.catalina.startup.HostConfig.deployApps(HostConfig.java:476)
	at org.apache.catalina.startup.HostConfig.start(HostConfig.java:1617)
	at org.apache.catalina.startup.HostConfig.lifecycleEvent(HostConfig.java:318)
	at org.apache.catalina.util.LifecycleBase.fireLifecycleEvent(LifecycleBase.java:114)
	at org.apache.catalina.util.LifecycleBase.setStateInternal(LifecycleBase.java:402)
	at org.apache.catalina.util.LifecycleBase.setState(LifecycleBase.java:345)
	at org.apache.catalina.core.ContainerBase.startInternal(ContainerBase.java:893)
	at org.apache.catalina.core.StandardHost.startInternal(StandardHost.java:794)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:171)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1332)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1322)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at org.apache.tomcat.util.threads.InlineExecutorService.execute(InlineExecutorService.java:75)
	at java.base/java.util.concurrent.AbstractExecutorService.submit(AbstractExecutorService.java:140)
	at org.apache.catalina.core.ContainerBase.startInternal(ContainerBase.java:866)
	at org.apache.catalina.core.StandardEngine.startInternal(StandardEngine.java:248)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:171)
	at org.apache.catalina.core.StandardService.startInternal(StandardService.java:433)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:171)
	at org.apache.catalina.core.StandardServer.startInternal(StandardServer.java:921)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:171)
	at org.apache.catalina.startup.Catalina.start(Catalina.java:772)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.apache.catalina.startup.Bootstrap.start(Bootstrap.java:347)
	at org.apache.catalina.startup.Bootstrap.main(Bootstrap.java:478)
Caused by: org.jasypt.exceptions.EncryptionOperationNotPossibleException
	at org.jasypt.encryption.pbe.StandardPBEByteEncryptor.decrypt(StandardPBEByteEncryptor.java:1055)
	at org.jasypt.encryption.pbe.StandardPBEStringEncryptor.decrypt(StandardPBEStringEncryptor.java:725)
	at org.geoserver.security.password.GeoServerPBEPasswordEncoder.decode(GeoServerPBEPasswordEncoder.java:176)
	at org.geoserver.security.password.ConfigurationPasswordEncryptionHelper.decode(ConfigurationPasswordEncryptionHelper.java:208)
	at org.geoserver.security.password.ConfigurationPasswordEncryptionHelper.decode(ConfigurationPasswordEncryptionHelper.java:192)
	at org.geoserver.config.util.XStreamPersister$StoreInfoConverter.doUnmarshal(XStreamPersister.java:1875)
	at com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter.unmarshal(AbstractReflectionConverter.java:277)
	at com.thoughtworks.xstream.core.TreeUnmarshaller.convert(TreeUnmarshaller.java:74)
	... 140 more
19 Apr 09:22:42 WARN   [org.geoserver] - Failed to load data store 'Postgres_general'
com.thoughtworks.xstream.converters.ConversionException: 
---- Debugging information ----
cause-exception     : org.jasypt.exceptions.EncryptionOperationNotPossibleException
cause-message       : null
class               : org.geoserver.catalog.impl.DataStoreInfoImpl
required-type       : org.geoserver.catalog.impl.DataStoreInfoImpl
converter-type      : org.geoserver.config.util.XStreamPersister$StoreInfoConverter
line number         : 33
version             : 2.24.1
-------------------------------
	at com.thoughtworks.xstream.core.TreeUnmarshaller.convert(TreeUnmarshaller.java:81)
	at com.thoughtworks.xstream.core.TreeUnmarshaller.convertAnother(TreeUnmarshaller.java:68)
	at com.thoughtworks.xstream.core.TreeUnmarshaller.convertAnother(TreeUnmarshaller.java:52)
	at com.thoughtworks.xstream.core.TreeUnmarshaller.start(TreeUnmarshaller.java:136)
	at com.thoughtworks.xstream.core.AbstractTreeMarshallingStrategy.unmarshal(AbstractTreeMarshallingStrategy.java:32)
	at com.thoughtworks.xstream.XStream.unmarshal(XStream.java:1464)
	at com.thoughtworks.xstream.XStream.unmarshal(XStream.java:1441)
	at com.thoughtworks.xstream.XStream.fromXML(XStream.java:1330)
	at org.geoserver.config.util.XStreamPersister.load(XStreamPersister.java:721)
	at org.geoserver.config.GeoServerLoader.depersist(GeoServerLoader.java:1138)
	at org.geoserver.config.GeoServerLoader.loadDataStore(GeoServerLoader.java:820)
	at org.geoserver.config.GeoServerLoader.readCatalog(GeoServerLoader.java:664)
	at org.geoserver.config.GeoServerLoader.readCatalog(GeoServerLoader.java:479)
	at org.geoserver.config.DefaultGeoServerLoader.loadCatalog(DefaultGeoServerLoader.java:37)
	at org.geoserver.config.GeoServerLoader.postProcessBeforeInitializationCatalog(GeoServerLoader.java:329)
	at org.geoserver.config.GeoServerLoader.postProcessBeforeInitialization(GeoServerLoader.java:280)
	at org.geoserver.config.GeoServerLoaderProxy.postProcessBeforeInitialization(GeoServerLoaderProxy.java:61)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyBeanPostProcessorsBeforeInitialization(AbstractAutowireCapableBeanFactory.java:440)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1796)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:620)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:330)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:113)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveConstructorArguments(ConstructorResolver.java:707)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:198)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1372)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1222)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:582)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:322)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:330)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:113)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveConstructorArguments(ConstructorResolver.java:707)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:198)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1372)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1222)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:582)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:330)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:113)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveConstructorArguments(ConstructorResolver.java:707)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:198)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1372)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1222)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:582)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:330)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:113)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveConstructorArguments(ConstructorResolver.java:707)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:198)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1372)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1222)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:582)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.getBeansOfType(DefaultListableBeanFactory.java:673)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.getBeansOfType(DefaultListableBeanFactory.java:661)
	at org.springframework.context.support.AbstractApplicationContext.getBeansOfType(AbstractApplicationContext.java:1302)
	at org.geowebcache.GeoWebCacheExtensions.getBeansNamesOrderedByPriority(GeoWebCacheExtensions.java:158)
	at org.geowebcache.GeoWebCacheExtensions.extensions(GeoWebCacheExtensions.java:103)
	at org.geowebcache.config.XMLConfiguration.getConfiguredXStreamWithContext(XMLConfiguration.java:455)
	at org.geowebcache.config.XMLConfiguration.getConfiguredXStreamWithContext(XMLConfiguration.java:361)
	at org.geowebcache.config.XMLConfiguration.loadConfiguration(XMLConfiguration.java:327)
	at org.geowebcache.config.XMLConfiguration.loadConfiguration(XMLConfiguration.java:316)
	at org.geowebcache.config.XMLConfiguration.afterPropertiesSet(XMLConfiguration.java:841)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1863)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1800)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:620)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:955)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:920)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:583)
	at org.springframework.web.context.ContextLoader.configureAndRefreshWebApplicationContext(ContextLoader.java:399)
	at org.springframework.web.context.ContextLoader.initWebApplicationContext(ContextLoader.java:278)
	at org.springframework.web.context.ContextLoaderListener.contextInitialized(ContextLoaderListener.java:103)
	at org.geoserver.platform.GeoServerContextLoaderListener.contextInitialized(GeoServerContextLoaderListener.java:22)
	at org.apache.catalina.core.StandardContext.listenerStart(StandardContext.java:4462)
	at org.apache.catalina.core.StandardContext.startInternal(StandardContext.java:4914)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:171)
	at org.apache.catalina.core.ContainerBase.addChildInternal(ContainerBase.java:683)
	at org.apache.catalina.core.ContainerBase.addChild(ContainerBase.java:658)
	at org.apache.catalina.core.StandardHost.addChild(StandardHost.java:661)
	at org.apache.catalina.startup.HostConfig.deployDirectory(HostConfig.java:1184)
	at org.apache.catalina.startup.HostConfig$DeployDirectory.run(HostConfig.java:1932)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at org.apache.tomcat.util.threads.InlineExecutorService.execute(InlineExecutorService.java:75)
	at java.base/java.util.concurrent.AbstractExecutorService.submit(AbstractExecutorService.java:118)
	at org.apache.catalina.startup.HostConfig.deployDirectories(HostConfig.java:1094)
	at org.apache.catalina.startup.HostConfig.deployApps(HostConfig.java:476)
	at org.apache.catalina.startup.HostConfig.start(HostConfig.java:1617)
	at org.apache.catalina.startup.HostConfig.lifecycleEvent(HostConfig.java:318)
	at org.apache.catalina.util.LifecycleBase.fireLifecycleEvent(LifecycleBase.java:114)
	at org.apache.catalina.util.LifecycleBase.setStateInternal(LifecycleBase.java:402)
	at org.apache.catalina.util.LifecycleBase.setState(LifecycleBase.java:345)
	at org.apache.catalina.core.ContainerBase.startInternal(ContainerBase.java:893)
	at org.apache.catalina.core.StandardHost.startInternal(StandardHost.java:794)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:171)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1332)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1322)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at org.apache.tomcat.util.threads.InlineExecutorService.execute(InlineExecutorService.java:75)
	at java.base/java.util.concurrent.AbstractExecutorService.submit(AbstractExecutorService.java:140)
	at org.apache.catalina.core.ContainerBase.startInternal(ContainerBase.java:866)
	at org.apache.catalina.core.StandardEngine.startInternal(StandardEngine.java:248)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:171)
	at org.apache.catalina.core.StandardService.startInternal(StandardService.java:433)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:171)
	at org.apache.catalina.core.StandardServer.startInternal(StandardServer.java:921)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:171)
	at org.apache.catalina.startup.Catalina.start(Catalina.java:772)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.apache.catalina.startup.Bootstrap.start(Bootstrap.java:347)
	at org.apache.catalina.startup.Bootstrap.main(Bootstrap.java:478)
Caused by: org.jasypt.exceptions.EncryptionOperationNotPossibleException
	at org.jasypt.encryption.pbe.StandardPBEByteEncryptor.decrypt(StandardPBEByteEncryptor.java:1055)
	at org.jasypt.encryption.pbe.StandardPBEStringEncryptor.decrypt(StandardPBEStringEncryptor.java:725)
	at org.geoserver.security.password.GeoServerPBEPasswordEncoder.decode(GeoServerPBEPasswordEncoder.java:176)
	at org.geoserver.security.password.ConfigurationPasswordEncryptionHelper.decode(ConfigurationPasswordEncryptionHelper.java:208)
	at org.geoserver.security.password.ConfigurationPasswordEncryptionHelper.decode(ConfigurationPasswordEncryptionHelper.java:192)
	at org.geoserver.config.util.XStreamPersister$StoreInfoConverter.doUnmarshal(XStreamPersister.java:1875)
	at com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter.unmarshal(AbstractReflectionConverter.java:277)
	at com.thoughtworks.xstream.core.TreeUnmarshaller.convert(TreeUnmarshaller.java:74)
	... 140 more
19 Apr 09:22:42 CONFIG [org.geoserver] - Loaded data store 'historic_scottish_landuse', enabled
19 Apr 09:22:42 CONFIG [org.geoserver] - Loaded feature type 'historic_scottish_lu_from_tab_2015_08', enabled
19 Apr 09:22:42 CONFIG [org.geoserver] - Loaded layer 'historic_scottish_lu_from_tab_2015_08'
19 Apr 09:22:42 CONFIG [org.geoserver] - Loaded feature type 'scottish_medieval_landuse_2015_08', enabled
19 Apr 09:22:42 CONFIG [org.geoserver] - Loaded layer 'scottish_medieval_landuse_2015_08'
19 Apr 09:22:42 CONFIG [org.geoserver] - Loaded feature type 'scotland_parish_1930_4326', enabled
19 Apr 09:22:42 CONFIG [org.geoserver] - Loaded layer 'scotland_parish_1930_4326'
19 Apr 09:22:42 WARN   [geoserver.security] - Could not find factory for store : DataStoreInfoImpl[mysql-stg]. Unable to encrypt connection parameters.
19 Apr 09:22:42 CONFIG [org.geoserver] - Loaded data store 'mysql-stg', enabled
19 Apr 09:22:42 CONFIG [org.geoserver] - Loaded feature type 'vw_pomsapp_place', enabled
19 Apr 09:22:42 CONFIG [org.geoserver] - Loaded layer 'vw_pomsapp_place'
19 Apr 09:22:42 CONFIG [org.geoserver] - Loaded data store 'sf', enabled
19 Apr 09:22:42 CONFIG [org.geoserver] - Loaded feature type 'restricted', enabled
19 Apr 09:22:42 CONFIG [org.geoserver] - Loaded layer 'restricted'
19 Apr 09:22:42 CONFIG [org.geoserver] - Loaded feature type 'bugsites', enabled
19 Apr 09:22:42 CONFIG [org.geoserver] - Loaded layer 'bugsites'
19 Apr 09:22:42 CONFIG [org.geoserver] - Loaded feature type 'streams', enabled
19 Apr 09:22:42 CONFIG [org.geoserver] - Loaded layer 'streams'
19 Apr 09:22:42 CONFIG [org.geoserver] - Loaded feature type 'archsites', enabled
19 Apr 09:22:42 CONFIG [org.geoserver] - Loaded layer 'archsites'
19 Apr 09:22:42 CONFIG [org.geoserver] - Loaded feature type 'roads', enabled
19 Apr 09:22:42 CONFIG [org.geoserver] - Loaded layer 'roads'
19 Apr 09:22:42 CONFIG [org.geoserver] - Loaded coverage store 'sfdem', enabled
19 Apr 09:22:42 CONFIG [org.geoserver] - Loaded coverage 'sfdem', enabled
19 Apr 09:22:42 CONFIG [org.geoserver] - Loaded layer 'sfdem'
19 Apr 09:22:42 CONFIG [org.geoserver] - Loaded data store 'taz_shapes', enabled
19 Apr 09:22:42 CONFIG [org.geoserver] - Loaded feature type 'tasmania_water_bodies', enabled
19 Apr 09:22:42 CONFIG [org.geoserver] - Loaded layer 'tasmania_water_bodies'
19 Apr 09:22:42 CONFIG [org.geoserver] - Loaded feature type 'tasmania_state_boundaries', enabled
19 Apr 09:22:42 CONFIG [org.geoserver] - Loaded layer 'tasmania_state_boundaries'
19 Apr 09:22:42 CONFIG [org.geoserver] - Loaded feature type 'tasmania_cities', enabled
19 Apr 09:22:42 CONFIG [org.geoserver] - Loaded layer 'tasmania_cities'
19 Apr 09:22:42 CONFIG [org.geoserver] - Loaded feature type 'tasmania_roads', enabled
19 Apr 09:22:42 CONFIG [org.geoserver] - Loaded layer 'tasmania_roads'
19 Apr 09:22:42 CONFIG [org.geoserver] - Loaded data store 'states_shapefile', enabled
19 Apr 09:22:42 CONFIG [org.geoserver] - Loaded feature type 'states', enabled
19 Apr 09:22:42 CONFIG [org.geoserver] - Loaded layer 'states'
19 Apr 09:22:42 CONFIG [org.geoserver] - Loaded data store 'NaturalEarth', enabled
19 Apr 09:22:42 CONFIG [org.geoserver] - Loaded feature type 'boundary_lines', enabled
19 Apr 09:22:42 CONFIG [org.geoserver] - Loaded layer 'boundary_lines'
19 Apr 09:22:42 CONFIG [org.geoserver] - Loaded feature type 'disputed_areas', enabled
19 Apr 09:22:42 CONFIG [org.geoserver] - Loaded layer 'disputed_areas'
19 Apr 09:22:42 CONFIG [org.geoserver] - Loaded feature type 'populated_places', enabled
19 Apr 09:22:42 CONFIG [org.geoserver] - Loaded layer 'populated_places'
19 Apr 09:22:42 CONFIG [org.geoserver] - Loaded feature type 'coastlines', enabled
19 Apr 09:22:42 CONFIG [org.geoserver] - Loaded layer 'coastlines'
19 Apr 09:22:42 CONFIG [org.geoserver] - Loaded feature type 'countries', enabled
19 Apr 09:22:42 CONFIG [org.geoserver] - Loaded layer 'countries'
19 Apr 09:22:42 CONFIG [org.geoserver] - Loaded layer group 'world'
19 Apr 09:22:42 CONFIG [org.geoserver] - Loaded layer group 'tiger-ny'
19 Apr 09:22:42 CONFIG [org.geoserver] - Loaded layer group 'aster_blend_test'
19 Apr 09:22:42 CONFIG [org.geoserver] - Loaded layer group 'world_simple'
19 Apr 09:22:42 CONFIG [org.geoserver] - Loaded layer group 'PDE_style_test'
19 Apr 09:22:42 CONFIG [org.geoserver] - Loaded layer group 'County_label'
19 Apr 09:22:42 CONFIG [org.geoserver] - Loaded layer group 'PDE_rivers'
19 Apr 09:22:42 CONFIG [org.geoserver] - Loaded layer group 'PDE_simple_backdrop'
19 Apr 09:22:42 CONFIG [org.geoserver] - Loaded layer group 'spearfish'
19 Apr 09:22:42 CONFIG [org.geoserver] - Loaded layer group 'koro_group'
19 Apr 09:22:42 CONFIG [org.geoserver] - Loaded layer group 'citywitness_finals'
19 Apr 09:22:42 CONFIG [org.geoserver] - Loaded layer group 'PDE_National_Borders'
19 Apr 09:22:42 CONFIG [org.geoserver] - Loaded layer group 'Scrapbook test'
19 Apr 09:22:42 CONFIG [org.geoserver] - Loaded layer group 'PDE_Rivers_2'
19 Apr 09:22:42 CONFIG [org.geoserver] - Loaded layer group 'TMS_Style_CW'
19 Apr 09:22:42 CONFIG [org.geoserver] - Loaded layer group 'tasmania'
19 Apr 09:22:42 CONFIG [org.geoserver] - Read catalog in 2.365 s
19 Apr 09:22:43 CONFIG [config.XMLConfiguration] - Initializing GridSets from gwc
19 Apr 09:22:43 CONFIG [config.XMLConfiguration] - Initializing layers from gwc
19 Apr 09:22:43 CONFIG [gwc.layer] - Initializing GWC configuration based on GeoServer's Catalog
19 Apr 09:22:43 CONFIG [gwc.layer] - GeoServer TileLayer store base directory is: gwc-layers
19 Apr 09:22:43 CONFIG [gwc.layer] - Loading tile layers from gwc-layers
19 Apr 09:22:43 CONFIG [gwc.layer] - Loaded 28 tile layers in 25.18 ms
19 Apr 09:22:43 CONFIG [storage.BlobStoreAggregator] - BlobStoreConfiguration gwc contained no blob store infos.
19 Apr 09:22:43 CONFIG [storage.DefaultStorageFinder] - Found system environment variableGEOSERVER_DATA_DIR set to /opt/geoserver_data/, using it as the default prefix.
19 Apr 09:22:43 CONFIG [geowebcache.GeoWebCacheDispatcher] - Invoked setServletPrefix(gwc)
19 Apr 09:22:43 CONFIG [wms.WMSService] - Will NOT recombine tiles for non-tiling clients.
19 Apr 09:22:43 CONFIG [wms.WMSService] - Will proxy requests to backend that are not getmap or getcapabilities.
19 Apr 09:22:43 CONFIG [org.geoserver] - Loaded service 'WMTSInfoImpl--288a2c05:1786a499f45:-7ff2', enabled
19 Apr 09:22:43 CONFIG [org.geoserver] - Loaded service 'wcs', enabled
19 Apr 09:22:43 CONFIG [org.geoserver] - Loaded service 'wfs', enabled
19 Apr 09:22:43 CONFIG [org.geoserver] - Loaded service 'wms', enabled
19 Apr 09:22:43 CONFIG [org.geoserver] - Loaded service 'WCSInfoImpl--19e1b629:13c90fa1a61:-7461', enabled
19 Apr 09:22:43 CONFIG [org.geoserver] - Loaded service 'WFSInfoImpl--19e1b629:13c90fa1a61:-7460', enabled
19 Apr 09:22:43 CONFIG [org.geoserver] - Loaded service 'WMSInfoImpl--19e1b629:13c90fa1a61:-745f', enabled
19 Apr 09:22:43 CONFIG [org.geoserver] - Loaded service 'WMTSInfoImpl-1c443fee:182c0f3f209:-7f98', enabled
19 Apr 09:22:43 CONFIG [org.geoserver] - Loaded service 'WCSInfoImpl-1c443fee:182c0f3f209:-7f96', enabled
19 Apr 09:22:43 CONFIG [org.geoserver] - Loaded service 'WFSInfoImpl-1c443fee:182c0f3f209:-7f97', enabled
19 Apr 09:22:43 CONFIG [org.geoserver] - Loaded service 'WMSInfoImpl-1c443fee:182c0f3f209:-7f99', enabled
19 Apr 09:22:43 CONFIG [gwc.config] - Initializing GeoServer specific GWC configuration from gwc-gs.xml
19 Apr 09:22:43 CONFIG [gwc.config] - Will look for 'geowebcache-diskquota.xml' in directory '/opt/geoserver_data/gwc'.
19 Apr 09:22:43 CONFIG [gwc.config] - Will look for 'geowebcache-diskquota-jdbc.xml' in directory '/opt/geoserver_data/gwc'.
19 Apr 09:22:43 CONFIG [diskquota.ConfigLoader] - DiskQuota configuration is not readable: gwc/geowebcache-diskquota.xml
19 Apr 09:22:43 CONFIG [diskquota.ConfigLoader] - DiskQuota configuration is not readable: gwc/geowebcache-diskquota.xml
19 Apr 09:22:47 CONFIG [diskquota.ConfigLoader] - DiskQuota configuration is not readable: gwc/geowebcache-diskquota.xml
19 Apr 09:22:47 CONFIG [diskquota.DiskQuotaMonitor] - Setting up disk quota periodic enforcement task
19 Apr 09:22:47 CONFIG [diskquota.DiskQuotaMonitor] - 0 layers configured with their own quotas. 
19 Apr 09:22:47 CONFIG [diskquota.DiskQuotaMonitor] - 28 layers attached to global quota 500.0 MB
19 Apr 09:22:47 CONFIG [diskquota.DiskQuotaMonitor] - Disk quota periodic enforcement task set up every 10 SECONDS
19 Apr 09:22:47 CONFIG [geoserver.security] - Start reloading user/groups for service named default
19 Apr 09:22:47 CONFIG [geoserver.security] - Reloading user/groups successful for service named default
19 Apr 09:22:47 CONFIG [geoserver.security] - AuthenticationCache Initialized with 1000 Max Entries, 300 seconds idle time, 600 seconds time to live and 3 concurrency level
19 Apr 09:22:47 CONFIG [geoserver.security] - AuthenticationCache Eviction Task created to run every 600 seconds
19 Apr 10:01:33 CONFIG [gwc.layer] - GeoServer TileLayer store base directory is: gwc-layers
19 Apr 10:01:33 CONFIG [gwc.layer] - Loading tile layers from gwc-layers
19 Apr 10:01:33 CONFIG [gwc.layer] - Loaded 28 tile layers in 63.46 ms
19 Apr 10:01:33 WARN   [support.DisposableBeanAdapter] - Custom destroy method 'destroy' on bean with name 'gwcMemoryBlobStore' threw an exception: java.util.concurrent.RejectedExecutionException: Task java.util.concurrent.FutureTask@3efffc0[Not completed, task = org.geowebcache.storage.blobstore.memory.MemoryBlobStore$BlobStoreTask@6bc66022] rejected from java.util.concurrent.ThreadPoolExecutor@4201243a[Terminated, pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 1]
19 Apr 10:01:33 INFO   [geoserver.logging] - Beginning GeoServer cleanup sequence
19 Apr 10:01:51 CONFIG [geoserver.logging] - Log4j 2 configuration set to DEFAULT_LOGGING.xml
19 Apr 10:01:53 CONFIG [gwc.config] - Will look for 'geowebcache.xml' in directory '/opt/geoserver_data/gwc'.
19 Apr 10:01:53 WARN   [config.XMLConfiguration] - GWC configuration validation error: cvc-elt.1.a: Cannot find the declaration of element 'gwcConfiguration'.
19 Apr 10:01:53 WARN   [config.XMLConfiguration] - Will try to use configuration anyway. Please check the order of declared elements against the schema.
19 Apr 10:01:53 CONFIG [org.geoserver] - GeoServer configuration lock is enabled
19 Apr 10:01:53 CONFIG [org.geoserver] - Loading catalog /opt/geoserver_data
19 Apr 10:01:54 CONFIG [org.geoserver] - Loaded style 'simple_roads'
19 Apr 10:01:54 CONFIG [org.geoserver] - Loaded style 'pophatch'
19 Apr 10:01:54 CONFIG [org.geoserver] - Loaded style 'burg'
19 Apr 10:01:54 CONFIG [org.geoserver] - Loaded style 'giant_polygon'
19 Apr 10:01:54 CONFIG [org.geoserver] - Loaded style 'poi'
19 Apr 10:01:54 CONFIG [org.geoserver] - Loaded style 'population'
19 Apr 10:01:54 CONFIG [org.geoserver] - Loaded style 'polygon'
19 Apr 10:01:54 CONFIG [org.geoserver] - Loaded style 'simple_streams'
19 Apr 10:01:54 CONFIG [org.geoserver] - Loaded style 'restricted'
19 Apr 10:01:54 CONFIG [org.geoserver] - Loaded style 'raster'
19 Apr 10:01:54 CONFIG [org.geoserver] - Loaded style 'point'
19 Apr 10:01:54 CONFIG [org.geoserver] - Loaded style 'grass'
19 Apr 10:01:54 CONFIG [org.geoserver] - Loaded style 'tiger_roads'
19 Apr 10:01:54 CONFIG [org.geoserver] - Loaded style 'dem'
19 Apr 10:01:54 CONFIG [org.geoserver] - Loaded style 'generic'
19 Apr 10:01:54 CONFIG [org.geoserver] - Loaded style 'poly_landmarks'
19 Apr 10:01:54 CONFIG [org.geoserver] - Loaded style 'green'
19 Apr 10:01:54 CONFIG [org.geoserver] - Loaded style 'capitals'
19 Apr 10:01:54 CONFIG [org.geoserver] - Loaded style 'line'
19 Apr 10:01:54 CONFIG [org.geoserver] - Loaded style 'rain'
19 Apr 10:01:54 CONFIG [org.geoserver] - Loaded style 'cite_lakes'
19 Apr 10:01:54 CONFIG [org.geoserver] - Loaded default workspace 'ne'
19 Apr 10:01:54 CONFIG [org.geoserver] - Loaded workspace 'it.geosolutions'
19 Apr 10:01:54 CONFIG [org.geoserver] - Loaded workspace 'tiger'
19 Apr 10:01:54 CONFIG [org.geoserver] - Loaded workspace 'nurc'
19 Apr 10:01:54 CONFIG [org.geoserver] - Loaded workspace 'cite'
19 Apr 10:01:54 CONFIG [org.geoserver] - Loaded workspace 'sde'
19 Apr 10:01:54 CONFIG [org.geoserver] - Loaded workspace 'PoMS'
19 Apr 10:01:54 CONFIG [org.geoserver] - Loaded workspace 'PDE_Postgres'
19 Apr 10:01:54 CONFIG [org.geoserver] - Loaded workspace 'sf'
19 Apr 10:01:54 CONFIG [org.geoserver] - Loaded workspace 'ne'
19 Apr 10:01:54 CONFIG [org.geoserver] - Loaded style 'populated_places'
19 Apr 10:01:54 CONFIG [org.geoserver] - Loaded style 'coastline'
19 Apr 10:01:54 CONFIG [org.geoserver] - Loaded style 'boundary_lines'
19 Apr 10:01:54 CONFIG [org.geoserver] - Loaded style 'countries'
19 Apr 10:01:54 CONFIG [org.geoserver] - Loaded style 'disputed'
19 Apr 10:01:54 CONFIG [org.geoserver] - Loaded style 'countries_mapcolor9'
19 Apr 10:01:54 CONFIG [org.geoserver] - Loaded workspace 'topp'
19 Apr 10:01:54 CONFIG [org.geoserver] - Loaded coverage store 'mosaic', enabled
19 Apr 10:01:55 CONFIG [org.geoserver] - Loaded coverage 'mosaic', enabled
19 Apr 10:01:55 CONFIG [org.geoserver] - Loaded layer 'mosaic'
19 Apr 10:01:55 CONFIG [org.geoserver] - Loaded coverage store 'arcGridSample', enabled
19 Apr 10:01:55 CONFIG [org.geoserver] - Loaded coverage 'Arc_Sample', enabled
19 Apr 10:01:55 CONFIG [org.geoserver] - Loaded layer 'Arc_Sample'
19 Apr 10:01:55 CONFIG [org.geoserver] - Loaded coverage store 'img_sample2', enabled
19 Apr 10:01:55 CONFIG [org.geoserver] - Loaded coverage 'Pk50095', enabled
19 Apr 10:01:55 CONFIG [org.geoserver] - Loaded layer 'Pk50095'
19 Apr 10:01:55 CONFIG [org.geoserver] - Loaded coverage store 'worldImageSample', enabled
19 Apr 10:01:55 CONFIG [org.geoserver] - Loaded coverage 'Img_Sample', enabled
19 Apr 10:01:55 CONFIG [org.geoserver] - Loaded layer 'Img_Sample'
19 Apr 10:01:55 CONFIG [org.geoserver] - Loaded data store 'nyc', enabled
19 Apr 10:01:55 CONFIG [org.geoserver] - Loaded feature type 'poly_landmarks', enabled
19 Apr 10:01:55 CONFIG [org.geoserver] - Loaded layer 'poly_landmarks'
19 Apr 10:01:55 CONFIG [org.geoserver] - Loaded feature type 'poi', enabled
19 Apr 10:01:55 CONFIG [org.geoserver] - Loaded layer 'poi'
19 Apr 10:01:55 CONFIG [org.geoserver] - Loaded feature type 'giant_polygon', enabled
19 Apr 10:01:55 CONFIG [org.geoserver] - Loaded layer 'giant_polygon'
19 Apr 10:01:55 CONFIG [org.geoserver] - Loaded feature type 'tiger_roads', enabled
19 Apr 10:01:55 CONFIG [org.geoserver] - Loaded layer 'tiger_roads'
19 Apr 10:01:55 CONFIG [org.geoserver] - Loaded data store 'PDE_tables', enabled
19 Apr 10:01:55 CONFIG [org.geoserver] - Loaded feature type 'pde_domesday_simple_backdrop', enabled
19 Apr 10:01:55 CONFIG [org.geoserver] - Loaded layer 'pde_domesday_simple_backdrop'
19 Apr 10:01:55 CONFIG [org.geoserver] - Loaded feature type 'pde_domesday_towns', enabled
19 Apr 10:01:55 CONFIG [org.geoserver] - Loaded layer 'pde_domesday_towns'
19 Apr 10:01:55 CONFIG [org.geoserver] - Loaded feature type 'vw_pde_tenant', enabled
19 Apr 10:01:55 CONFIG [org.geoserver] - Loaded layer 'vw_pde_tenant'
19 Apr 10:01:55 ERROR  [org.geoserver] - Layer 'vw_pde_tenant' references a missing style
19 Apr 10:01:55 CONFIG [org.geoserver] - Loaded feature type 'vw_pde_name_search_minimal', enabled
19 Apr 10:01:55 CONFIG [org.geoserver] - Loaded layer 'vw_pde_name_search_minimal'
19 Apr 10:01:55 ERROR  [org.geoserver] - Layer 'vw_pde_name_search_minimal' references a missing style
19 Apr 10:01:55 CONFIG [org.geoserver] - Loaded feature type 'vw_pde_name_search', enabled
19 Apr 10:01:55 CONFIG [org.geoserver] - Loaded layer 'vw_pde_name_search'
19 Apr 10:01:55 ERROR  [org.geoserver] - Layer 'vw_pde_name_search' references a missing style
19 Apr 10:01:55 CONFIG [org.geoserver] - Loaded data store 'Scotland', enabled
19 Apr 10:01:55 CONFIG [org.geoserver] - Loaded feature type 'scotland_regions_simple', enabled
19 Apr 10:01:55 CONFIG [org.geoserver] - Loaded layer 'scotland_regions_simple'
19 Apr 10:01:55 CONFIG [org.geoserver] - Loaded data store 'Postgres_general', enabled
19 Apr 10:01:55 CONFIG [org.geoserver] - Loaded feature type 'agricultural_land_class_4326', enabled
19 Apr 10:01:55 CONFIG [org.geoserver] - Loaded layer 'agricultural_land_class_4326'
19 Apr 10:01:55 CONFIG [org.geoserver] - Loaded data store 'historic_scottish_landuse', enabled
19 Apr 10:01:55 CONFIG [org.geoserver] - Loaded feature type 'historic_scottish_lu_from_tab_2015_08', enabled
19 Apr 10:01:55 CONFIG [org.geoserver] - Loaded layer 'historic_scottish_lu_from_tab_2015_08'
19 Apr 10:01:55 CONFIG [org.geoserver] - Loaded feature type 'scotland_parish_1930_4326', enabled
19 Apr 10:01:55 CONFIG [org.geoserver] - Loaded layer 'scotland_parish_1930_4326'
19 Apr 10:01:55 CONFIG [org.geoserver] - Loaded feature type 'scottish_medieval_landuse_2015_08', enabled
19 Apr 10:01:55 CONFIG [org.geoserver] - Loaded layer 'scottish_medieval_landuse_2015_08'
19 Apr 10:01:55 WARN   [geoserver.security] - Could not find factory for store : DataStoreInfoImpl[mysql-stg]. Unable to encrypt connection parameters.
19 Apr 10:01:55 CONFIG [org.geoserver] - Loaded data store 'mysql-stg', enabled
19 Apr 10:01:55 CONFIG [org.geoserver] - Loaded feature type 'vw_pomsapp_place', enabled
19 Apr 10:01:55 CONFIG [org.geoserver] - Loaded layer 'vw_pomsapp_place'
19 Apr 10:01:55 CONFIG [org.geoserver] - Loaded data store 'sf', enabled
19 Apr 10:01:55 CONFIG [org.geoserver] - Loaded feature type 'restricted', enabled
19 Apr 10:01:55 CONFIG [org.geoserver] - Loaded layer 'restricted'
19 Apr 10:01:55 CONFIG [org.geoserver] - Loaded feature type 'bugsites', enabled
19 Apr 10:01:55 CONFIG [org.geoserver] - Loaded layer 'bugsites'
19 Apr 10:01:55 CONFIG [org.geoserver] - Loaded feature type 'streams', enabled
19 Apr 10:01:55 CONFIG [org.geoserver] - Loaded layer 'streams'
19 Apr 10:01:55 CONFIG [org.geoserver] - Loaded feature type 'archsites', enabled
19 Apr 10:01:55 CONFIG [org.geoserver] - Loaded layer 'archsites'
19 Apr 10:01:55 CONFIG [org.geoserver] - Loaded feature type 'roads', enabled
19 Apr 10:01:55 CONFIG [org.geoserver] - Loaded layer 'roads'
19 Apr 10:01:55 CONFIG [org.geoserver] - Loaded coverage store 'sfdem', enabled
19 Apr 10:01:55 CONFIG [org.geoserver] - Loaded coverage 'sfdem', enabled
19 Apr 10:01:55 CONFIG [org.geoserver] - Loaded layer 'sfdem'
19 Apr 10:01:55 CONFIG [org.geoserver] - Loaded data store 'taz_shapes', enabled
19 Apr 10:01:56 CONFIG [org.geoserver] - Loaded feature type 'tasmania_water_bodies', enabled
19 Apr 10:01:56 CONFIG [org.geoserver] - Loaded layer 'tasmania_water_bodies'
19 Apr 10:01:56 CONFIG [org.geoserver] - Loaded feature type 'tasmania_cities', enabled
19 Apr 10:01:56 CONFIG [org.geoserver] - Loaded layer 'tasmania_cities'
19 Apr 10:01:56 CONFIG [org.geoserver] - Loaded feature type 'tasmania_state_boundaries', enabled
19 Apr 10:01:56 CONFIG [org.geoserver] - Loaded layer 'tasmania_state_boundaries'
19 Apr 10:01:56 CONFIG [org.geoserver] - Loaded feature type 'tasmania_roads', enabled
19 Apr 10:01:56 CONFIG [org.geoserver] - Loaded layer 'tasmania_roads'
19 Apr 10:01:56 CONFIG [org.geoserver] - Loaded data store 'states_shapefile', enabled
19 Apr 10:01:56 CONFIG [org.geoserver] - Loaded feature type 'states', enabled
19 Apr 10:01:56 CONFIG [org.geoserver] - Loaded layer 'states'
19 Apr 10:01:56 CONFIG [org.geoserver] - Loaded data store 'NaturalEarth', enabled
19 Apr 10:01:56 CONFIG [org.geoserver] - Loaded feature type 'boundary_lines', enabled
19 Apr 10:01:56 CONFIG [org.geoserver] - Loaded layer 'boundary_lines'
19 Apr 10:01:56 CONFIG [org.geoserver] - Loaded feature type 'disputed_areas', enabled
19 Apr 10:01:56 CONFIG [org.geoserver] - Loaded layer 'disputed_areas'
19 Apr 10:01:56 CONFIG [org.geoserver] - Loaded feature type 'populated_places', enabled
19 Apr 10:01:56 CONFIG [org.geoserver] - Loaded layer 'populated_places'
19 Apr 10:01:56 CONFIG [org.geoserver] - Loaded feature type 'coastlines', enabled
19 Apr 10:01:56 CONFIG [org.geoserver] - Loaded layer 'coastlines'
19 Apr 10:01:56 CONFIG [org.geoserver] - Loaded feature type 'countries', enabled
19 Apr 10:01:56 CONFIG [org.geoserver] - Loaded layer 'countries'
19 Apr 10:01:56 CONFIG [org.geoserver] - Loaded layer group 'world'
19 Apr 10:01:56 CONFIG [org.geoserver] - Loaded layer group 'tiger-ny'
19 Apr 10:01:56 CONFIG [org.geoserver] - Loaded layer group 'aster_blend_test'
19 Apr 10:01:56 CONFIG [org.geoserver] - Loaded layer group 'world_simple'
19 Apr 10:01:56 CONFIG [org.geoserver] - Loaded layer group 'PDE_style_test'
19 Apr 10:01:56 CONFIG [org.geoserver] - Loaded layer group 'County_label'
19 Apr 10:01:56 CONFIG [org.geoserver] - Loaded layer group 'PDE_rivers'
19 Apr 10:01:56 CONFIG [org.geoserver] - Loaded layer group 'PDE_simple_backdrop'
19 Apr 10:01:56 CONFIG [org.geoserver] - Loaded layer group 'spearfish'
19 Apr 10:01:56 CONFIG [org.geoserver] - Loaded layer group 'koro_group'
19 Apr 10:01:56 CONFIG [org.geoserver] - Loaded layer group 'citywitness_finals'
19 Apr 10:01:56 CONFIG [org.geoserver] - Loaded layer group 'PDE_National_Borders'
19 Apr 10:01:56 CONFIG [org.geoserver] - Loaded layer group 'Scrapbook test'
19 Apr 10:01:56 CONFIG [org.geoserver] - Loaded layer group 'TMS_Style_CW'
19 Apr 10:01:56 CONFIG [org.geoserver] - Loaded layer group 'PDE_Rivers_2'
19 Apr 10:01:56 CONFIG [org.geoserver] - Loaded layer group 'tasmania'
19 Apr 10:01:56 CONFIG [org.geoserver] - Read catalog in 2.145 s
19 Apr 10:01:56 CONFIG [config.XMLConfiguration] - Initializing GridSets from gwc
19 Apr 10:01:56 CONFIG [config.XMLConfiguration] - Initializing layers from gwc
19 Apr 10:01:56 CONFIG [gwc.layer] - Initializing GWC configuration based on GeoServer's Catalog
19 Apr 10:01:56 CONFIG [gwc.layer] - GeoServer TileLayer store base directory is: gwc-layers
19 Apr 10:01:56 CONFIG [gwc.layer] - Loading tile layers from gwc-layers
19 Apr 10:01:56 CONFIG [gwc.layer] - Loaded 28 tile layers in 23.44 ms
19 Apr 10:01:56 CONFIG [storage.BlobStoreAggregator] - BlobStoreConfiguration gwc contained no blob store infos.
19 Apr 10:01:56 CONFIG [storage.DefaultStorageFinder] - Found system environment variableGEOSERVER_DATA_DIR set to /opt/geoserver_data/, using it as the default prefix.
19 Apr 10:01:56 CONFIG [geowebcache.GeoWebCacheDispatcher] - Invoked setServletPrefix(gwc)
19 Apr 10:01:56 CONFIG [wms.WMSService] - Will NOT recombine tiles for non-tiling clients.
19 Apr 10:01:56 CONFIG [wms.WMSService] - Will proxy requests to backend that are not getmap or getcapabilities.
19 Apr 10:01:56 CONFIG [org.geoserver] - Loaded service 'WMTSInfoImpl--288a2c05:1786a499f45:-7ff2', enabled
19 Apr 10:01:56 CONFIG [org.geoserver] - Loaded service 'wcs', enabled
19 Apr 10:01:56 CONFIG [org.geoserver] - Loaded service 'wfs', enabled
19 Apr 10:01:56 CONFIG [org.geoserver] - Loaded service 'wms', enabled
19 Apr 10:01:56 CONFIG [org.geoserver] - Loaded service 'WCSInfoImpl--19e1b629:13c90fa1a61:-7461', enabled
19 Apr 10:01:56 CONFIG [org.geoserver] - Loaded service 'WFSInfoImpl--19e1b629:13c90fa1a61:-7460', enabled
19 Apr 10:01:56 CONFIG [org.geoserver] - Loaded service 'WMSInfoImpl--19e1b629:13c90fa1a61:-745f', enabled
19 Apr 10:01:56 CONFIG [org.geoserver] - Loaded service 'WMTSInfoImpl-1c443fee:182c0f3f209:-7f98', enabled
19 Apr 10:01:56 CONFIG [org.geoserver] - Loaded service 'WCSInfoImpl-1c443fee:182c0f3f209:-7f96', enabled
19 Apr 10:01:56 CONFIG [org.geoserver] - Loaded service 'WFSInfoImpl-1c443fee:182c0f3f209:-7f97', enabled
19 Apr 10:01:56 CONFIG [org.geoserver] - Loaded service 'WMSInfoImpl-1c443fee:182c0f3f209:-7f99', enabled
19 Apr 10:01:56 CONFIG [gwc.config] - Initializing GeoServer specific GWC configuration from gwc-gs.xml
19 Apr 10:01:56 CONFIG [gwc.config] - Will look for 'geowebcache-diskquota.xml' in directory '/opt/geoserver_data/gwc'.
19 Apr 10:01:56 CONFIG [gwc.config] - Will look for 'geowebcache-diskquota-jdbc.xml' in directory '/opt/geoserver_data/gwc'.
19 Apr 10:01:56 CONFIG [diskquota.ConfigLoader] - DiskQuota configuration is not readable: gwc/geowebcache-diskquota.xml
19 Apr 10:01:56 CONFIG [diskquota.ConfigLoader] - DiskQuota configuration is not readable: gwc/geowebcache-diskquota.xml
19 Apr 10:02:00 CONFIG [diskquota.ConfigLoader] - DiskQuota configuration is not readable: gwc/geowebcache-diskquota.xml
19 Apr 10:02:00 CONFIG [diskquota.DiskQuotaMonitor] - Setting up disk quota periodic enforcement task
19 Apr 10:02:00 CONFIG [diskquota.DiskQuotaMonitor] - 0 layers configured with their own quotas. 
19 Apr 10:02:00 CONFIG [diskquota.DiskQuotaMonitor] - 28 layers attached to global quota 500.0 MB
19 Apr 10:02:00 CONFIG [diskquota.DiskQuotaMonitor] - Disk quota periodic enforcement task set up every 10 SECONDS
19 Apr 10:02:00 CONFIG [geoserver.security] - Start reloading user/groups for service named default
19 Apr 10:02:00 CONFIG [geoserver.security] - Reloading user/groups successful for service named default
19 Apr 10:02:00 CONFIG [geoserver.security] - AuthenticationCache Initialized with 1000 Max Entries, 300 seconds idle time, 600 seconds time to live and 3 concurrency level
19 Apr 10:02:00 CONFIG [geoserver.security] - AuthenticationCache Eviction Task created to run every 600 seconds
